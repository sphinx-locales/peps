# SOME DESCRIPTIVE TITLE.
# Copyright (C)
# This file is distributed under the same license as the PEPs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PEPs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-11-12 17:38+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../pep-0431.txt
msgid "PEP"
msgstr ""

#: ../../pep-0431.txt:1
msgid "431"
msgstr ""

#: ../../pep-0431.txt
msgid "Title"
msgstr ""

#: ../../pep-0431.txt:2
msgid "Time zone support improvements"
msgstr ""

#: ../../pep-0431.txt
msgid "Author"
msgstr ""

#: ../../pep-0431.txt:5
msgid "Lennart Regebro <regebro@gmail.com>"
msgstr ""

#: ../../pep-0431.txt
msgid "BDFL-Delegate"
msgstr ""

#: ../../pep-0431.txt:6
msgid "Barry Warsaw <barry@python.org>"
msgstr ""

#: ../../pep-0431.txt
msgid "Status"
msgstr ""

#: ../../pep-0431.txt:7
msgid "Superseded"
msgstr ""

#: ../../pep-0431.txt
msgid "Type"
msgstr ""

#: ../../pep-0431.txt:8
msgid "Standards Track"
msgstr ""

#: ../../pep-0431.txt
msgid "Created"
msgstr ""

#: ../../pep-0431.txt:10
msgid "11-Dec-2012"
msgstr ""

#: ../../pep-0431.txt
msgid "Post-History"
msgstr ""

#: ../../pep-0431.txt:11
msgid "11-Dec-2012, 28-Dec-2012, 28-Jan-2013"
msgstr ""

#: ../../pep-0431.txt
msgid "Superseded-By"
msgstr ""

#: ../../pep-0431.txt:12
msgid "615"
msgstr ""

#: ../../pep-0431.txt:16
msgid "Abstract"
msgstr ""

#: ../../pep-0431.txt:18
msgid ""
"This PEP proposes the implementation of concrete time zone support in the"
" Python standard library, and also improvements to the time zone API to "
"deal with ambiguous time specifications during DST changes."
msgstr ""

#: ../../pep-0431.txt:24
msgid "Withdrawal"
msgstr ""

#: ../../pep-0431.txt:26
msgid ""
"After lengthy discussion it has turned out that the things I thought was "
"problem in datetime's implementation are intentional. Those include "
"completely ignoring DST transitions when making date time arithmetic. "
"That makes the is_dst flags part of this PEP pointless, as they would "
"have no useful function. ``datetime`` by design does not separate between"
" ambiguous datetimes and will never do so."
msgstr ""

#: ../../pep-0431.txt:33
msgid "I therefore withdraw this PEP."
msgstr ""

#: ../../pep-0431.txt:35
msgid ""
"**UPDATE**: The PEP 615 \"Support for the IANA Time Zone Database in the "
"Standard Library\" added the ``zoneinfo`` module to Python 3.9 and "
"superseded this PEP."
msgstr ""

#: ../../pep-0431.txt:41
msgid "Proposal"
msgstr ""

#: ../../pep-0431.txt:44
msgid "Concrete time zone support"
msgstr ""

#: ../../pep-0431.txt:46
msgid ""
"The time zone support in Python has no concrete implementation in the "
"standard library outside of a tzinfo baseclass that supports fixed "
"offsets. To properly support time zones you need to include a database "
"over all time zones, both current and historical, including daylight "
"saving changes. But such information changes frequently, so even if we "
"include the last information in a Python release, that information would "
"be outdated just a few months later."
msgstr ""

#: ../../pep-0431.txt:54
msgid ""
"Time zone support has therefore only been available through two third-"
"party modules, ``pytz`` and ``dateutil``, both who include and wrap the "
"\"zoneinfo\" database. This database, also called \"tz\" or \"The Olsen "
"database\", is the de facto standard time zone database over time zones, "
"and it is included in most Unix and Unix-like operating systems, "
"including OS X."
msgstr ""

#: ../../pep-0431.txt:60
msgid ""
"This gives us the opportunity to include the code that supports the "
"zoneinfo data in the standard library, but by default use the operating "
"system's copy of the data, which typically will be kept updated by the "
"updating mechanism of the operating system or distribution."
msgstr ""

#: ../../pep-0431.txt:65
msgid ""
"For those who have an operating system that does not include the zoneinfo"
" database, for example Windows, the Python source distribution will "
"include a copy of the zoneinfo database, and a distribution containing "
"the latest zoneinfo database will also be available at the Python Package"
" Index, so it can be easily installed with the Python packaging tools "
"such as ``easy_install`` or ``pip``. This could also be done on Unices "
"that are no longer receiving updates and therefore have an outdated "
"database."
msgstr ""

#: ../../pep-0431.txt:73
msgid ""
"With such a mechanism Python would have full-time zone support in the "
"standard library on any platform, and a simple package installation would"
" provide an updated time zone database on those platforms where the "
"zoneinfo database isn't included, such as Windows, or on platforms where "
"OS updates are no longer provided."
msgstr ""

#: ../../pep-0431.txt:79
msgid ""
"The time zone support will be implemented by making the ``datetime`` "
"module into a package, and adding time zone support to ``datetime`` based"
" on Stuart Bishop's ``pytz`` module."
msgstr ""

#: ../../pep-0431.txt:85
msgid "Getting the local time zone"
msgstr ""

#: ../../pep-0431.txt:87
msgid ""
"On Unix there is no standard way of finding the name of the time zone "
"that is being used. All the information that is available is the time "
"zone abbreviations, such as ``EST`` and ``PDT``, but many of those "
"abbreviations are ambiguous and therefore you can't rely on them to "
"figure out which time zone you are located in."
msgstr ""

#: ../../pep-0431.txt:93
msgid ""
"There is however a standard for finding the compiled time zone "
"information since it's located in ``/etc/localtime``. Therefore, it is "
"possible to create a local time zone object with the correct time zone "
"information even though you don't know the name of the time zone. A "
"function in ``datetime`` should be provided to return the local time "
"zone."
msgstr ""

#: ../../pep-0431.txt:99
msgid ""
"The support for this will be made by integrating Lennart Regebro's "
"``tzlocal`` module into the new ``datetime`` module."
msgstr ""

#: ../../pep-0431.txt:102
msgid ""
"For Windows it will look up the local Windows time zone name, and use a "
"mapping between Windows time zone names and zoneinfo time zone names "
"provided by the Unicode consortium to convert that to a zoneinfo time "
"zone."
msgstr ""

#: ../../pep-0431.txt:106
msgid ""
"The mapping should be updated before each major or bugfix release, "
"scripts for doing so will be provided in the ``Tools/`` directory."
msgstr ""

#: ../../pep-0431.txt:111
msgid "Ambiguous times"
msgstr ""

#: ../../pep-0431.txt:113
msgid ""
"When changing over from daylight savings time (DST) the clock is turned "
"back one hour. This means that the times during that hour happens twice, "
"once with DST and then once without DST. Similarly, when changing to "
"daylight savings time, one hour goes missing."
msgstr ""

#: ../../pep-0431.txt:118
msgid ""
"The current time zone API can not differentiate between the two ambiguous"
" times during a change from DST. For example, in Stockholm the time of "
"2012-11-28 02:00:00 happens twice, both at UTC 2012-11-28 00:00:00 and "
"also at 2012-11-28 01:00:00."
msgstr ""

#: ../../pep-0431.txt:123
msgid ""
"The current time zone API can not disambiguate this and therefore it's "
"unclear which time should be returned::"
msgstr ""

#: ../../pep-0431.txt:132
msgid ""
"``pytz`` solved this problem by adding ``is_dst`` parameters to several "
"methods of the tzinfo objects to make it possible to disambiguate times "
"when this is desired."
msgstr ""

#: ../../pep-0431.txt:136
msgid ""
"This PEP proposes to add these ``is_dst`` parameters to the relevant "
"methods of the ``datetime`` API, and therefore add this functionality "
"directly to ``datetime``. This is likely the hardest part of this PEP as "
"this involves updating the C version of the ``datetime`` library with "
"this functionality, as this involved writing new code, and not just "
"reorganizing existing external libraries."
msgstr ""

#: ../../pep-0431.txt:145
msgid "Implementation API"
msgstr ""

#: ../../pep-0431.txt:148
msgid "The zoneinfo database"
msgstr ""

#: ../../pep-0431.txt:150
msgid ""
"The latest version of the zoneinfo database should exist in the "
"``Lib/tzdata`` directory of the Python source control system. This copy "
"of the database should be updated before every Python feature and bug-fix"
" release, but not for releases of Python versions that are in security-"
"fix-only-mode."
msgstr ""

#: ../../pep-0431.txt:156
msgid ""
"Scripts to update the database will be provided in ``Tools/``, and the "
"release instructions will be updated to include this update."
msgstr ""

#: ../../pep-0431.txt:159
msgid ""
"New configure options ``--enable-internal-timezone-database`` and "
"``--disable-internal-timezone-database`` will be implemented to enable "
"and disable the installation of this database when installing from "
"source. A source install will default to installing them."
msgstr ""

#: ../../pep-0431.txt:164
msgid ""
"Binary installers for systems that have a system-provided zoneinfo "
"database may skip installing the included database since it would never "
"be used for these platforms. For other platforms, for example Windows, "
"binary installers must install the included database."
msgstr ""

#: ../../pep-0431.txt:171
msgid "Changes in the ``datetime``-module"
msgstr ""

#: ../../pep-0431.txt:173
msgid ""
"The public API of the new time zone support contains one new class, one "
"new function, one new exception and four new collections. In addition to "
"this, several methods on the datetime object gets a new ``is_dst`` "
"parameter."
msgstr ""

#: ../../pep-0431.txt:178
msgid "New class ``dsttimezone``"
msgstr ""

#: ../../pep-0431.txt:180
msgid ""
"This class provides a concrete implementation of the ``tzinfo`` base "
"class that implements DST support."
msgstr ""

#: ../../pep-0431.txt:185
msgid "New function ``zoneinfo(name=None, db_path=None)``"
msgstr ""

#: ../../pep-0431.txt:187
msgid ""
"This function takes a name string that must be a string specifying a "
"valid zoneinfo time zone, i.e. \"US/Eastern\", \"Europe/Warsaw\" or "
"\"Etc/GMT\". If not given, the local time zone will be looked up. If an "
"invalid zone name is given, or the local time zone can not be retrieved, "
"the function raises `UnknownTimeZoneError`."
msgstr ""

#: ../../pep-0431.txt:193
msgid ""
"The function also takes an optional path to the location of the zoneinfo "
"database which should be used. If not specified, the function will look "
"for databases in the following order:"
msgstr ""

#: ../../pep-0431.txt:197
msgid ""
"Check if the `tzdata-update` module is installed, and then use that "
"database."
msgstr ""

#: ../../pep-0431.txt:200
msgid "Use the database in ``/usr/share/zoneinfo``, if it exists."
msgstr ""

#: ../../pep-0431.txt:202
msgid "Use the Python-provided database in ``Lib/tzdata``."
msgstr ""

#: ../../pep-0431.txt:204
msgid ""
"If no database is found an ``UnknownTimeZoneError`` or subclass thereof "
"will be raised with a message explaining that no zoneinfo database can be"
" found, but that you can install one with the ``tzdata-update`` package."
msgstr ""

#: ../../pep-0431.txt:210
msgid "New parameter ``is_dst``"
msgstr ""

#: ../../pep-0431.txt:212
msgid ""
"A new ``is_dst`` parameter is added to several methods to handle time "
"ambiguity during DST changeovers."
msgstr ""

#: ../../pep-0431.txt:215
msgid "``tzinfo.utcoffset(dt, is_dst=False)``"
msgstr ""

#: ../../pep-0431.txt:217
msgid "``tzinfo.dst(dt, is_dst=False)``"
msgstr ""

#: ../../pep-0431.txt:219
msgid "``tzinfo.tzname(dt, is_dst=False)``"
msgstr ""

#: ../../pep-0431.txt:221
msgid "``datetime.astimezone(tz, is_dst=False)``"
msgstr ""

#: ../../pep-0431.txt:223
msgid ""
"The ``is_dst`` parameter can be ``False`` (default), ``True``, or "
"``None``."
msgstr ""

#: ../../pep-0431.txt:225
msgid ""
"``False`` will specify that the given datetime should be interpreted as "
"not happening during daylight savings time, i.e. that the time specified "
"is after the change from DST. This is default to preserve existing "
"behavior."
msgstr ""

#: ../../pep-0431.txt:229
msgid ""
"``True`` will specify that the given datetime should be interpreted as "
"happening during daylight savings time, i.e. that the time specified is "
"before the change from DST."
msgstr ""

#: ../../pep-0431.txt:233
msgid ""
"``None`` will raise an ``AmbiguousTimeError`` exception if the time "
"specified was during a DST change over. It will also raise a "
"``NonExistentTimeError`` if a time is specified during the \"missing "
"time\" in a change to DST."
msgstr ""

#: ../../pep-0431.txt:238
msgid "New exceptions"
msgstr ""

#: ../../pep-0431.txt:240
msgid "``UnknownTimeZoneError``"
msgstr ""

#: ../../pep-0431.txt:242
msgid ""
"This exception is a subclass of KeyError and raised when giving a time "
"zone specification that can't be found::"
msgstr ""

#: ../../pep-0431.txt:250
msgid "``InvalidTimeError``"
msgstr ""

#: ../../pep-0431.txt:252
msgid ""
"This exception serves as a base for ``AmbiguousTimeError`` and "
"``NonExistentTimeError``, to enable you to trap these two separately. It "
"will subclass from ValueError, so that you can catch these errors "
"together with inputs like the 29th of February 2011."
msgstr ""

#: ../../pep-0431.txt:257
msgid "``AmbiguousTimeError``"
msgstr ""

#: ../../pep-0431.txt:259
msgid ""
"This exception is raised when giving a datetime specification that is "
"ambiguous while setting ``is_dst`` to None::"
msgstr ""

#: ../../pep-0431.txt:269
msgid "``NonExistentTimeError``"
msgstr ""

#: ../../pep-0431.txt:271
msgid ""
"This exception is raised when giving a datetime specification for a time "
"that due to daylight saving does not exist, while setting ``is_dst`` to "
"None::"
msgstr ""

#: ../../pep-0431.txt:282
msgid "New collections"
msgstr ""

#: ../../pep-0431.txt:284
msgid ""
"``all_timezones`` is the exhaustive list of the time zone names that can "
"be used, listed alphabetically."
msgstr ""

#: ../../pep-0431.txt:287
msgid ""
"``common_timezones`` is a list of useful, current time zones, listed "
"alphabetically."
msgstr ""

#: ../../pep-0431.txt:292
msgid "The ``tzdata-update``-package"
msgstr ""

#: ../../pep-0431.txt:294
msgid ""
"The zoneinfo database will be packaged for easy installation with "
"``easy_install``/``pip``/``buildout``. This package will not install any "
"Python code, and will not contain any Python code except that which is "
"needed for installation."
msgstr ""

#: ../../pep-0431.txt:299
msgid ""
"It will be kept updated with the same tools as the internal database, but"
" released whenever the ``zoneinfo``-database is updated, and use the same"
" version schema."
msgstr ""

#: ../../pep-0431.txt:305
msgid "Differences from the ``pytz`` API"
msgstr ""

#: ../../pep-0431.txt:307
msgid ""
"``pytz`` has the functions ``localize()`` and ``normalize()`` to work "
"around that ``tzinfo`` doesn't have is_dst. When ``is_dst`` is "
"implemented directly in ``datetime.tzinfo`` they are no longer needed."
msgstr ""

#: ../../pep-0431.txt:311
msgid ""
"The ``timezone()`` function is called ``zoneinfo()`` to avoid clashing "
"with the ``timezone`` class introduced in Python 3.2."
msgstr ""

#: ../../pep-0431.txt:314
msgid ""
"``zoneinfo()`` will return the local time zone if called without "
"arguments."
msgstr ""

#: ../../pep-0431.txt:316
msgid ""
"The class ``pytz.StaticTzInfo`` is there to provide the ``is_dst`` "
"support for static time zones. When ``is_dst`` support is included in "
"``datetime.tzinfo`` it is no longer needed."
msgstr ""

#: ../../pep-0431.txt:319
msgid "``InvalidTimeError`` subclasses from ``ValueError``."
msgstr ""

#: ../../pep-0431.txt:323
msgid "Resources"
msgstr ""

#: ../../pep-0431.txt:325
msgid "http://pytz.sourceforge.net/"
msgstr ""

#: ../../pep-0431.txt:327
msgid "http://pypi.python.org/pypi/tzlocal"
msgstr ""

#: ../../pep-0431.txt:329
msgid "http://pypi.python.org/pypi/python-dateutil"
msgstr ""

#: ../../pep-0431.txt:331
msgid "http://unicode.org/cldr/data/common/supplemental/windowsZones.xml"
msgstr ""

#: ../../pep-0431.txt:334
msgid "Copyright"
msgstr ""

#: ../../pep-0431.txt:336
msgid "This document has been placed in the public domain."
msgstr ""

