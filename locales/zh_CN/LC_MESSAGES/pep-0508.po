# SOME DESCRIPTIVE TITLE.
# Copyright (C)
# This file is distributed under the same license as the PEPs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PEPs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-11-12 17:38+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../pep-0508.txt
msgid "PEP"
msgstr ""

#: ../../pep-0508.txt:1
msgid "508"
msgstr ""

#: ../../pep-0508.txt
msgid "Title"
msgstr ""

#: ../../pep-0508.txt:2
msgid "Dependency specification for Python Software Packages"
msgstr ""

#: ../../pep-0508.txt
msgid "Author"
msgstr ""

#: ../../pep-0508.txt:5
msgid "Robert Collins <rbtcollins@hp.com>"
msgstr ""

#: ../../pep-0508.txt
msgid "BDFL-Delegate"
msgstr ""

#: ../../pep-0508.txt:6
msgid "Donald Stufft <donald@stufft.io>"
msgstr ""

#: ../../pep-0508.txt
msgid "Discussions-To"
msgstr ""

#: ../../pep-0508.txt:7
msgid "distutils-sig <distutils-sig@python.org>"
msgstr ""

#: ../../pep-0508.txt
msgid "Status"
msgstr ""

#: ../../pep-0508.txt:8
msgid "Active"
msgstr ""

#: ../../pep-0508.txt
msgid "Type"
msgstr ""

#: ../../pep-0508.txt:9
msgid "Informational"
msgstr ""

#: ../../pep-0508.txt
msgid "Created"
msgstr ""

#: ../../pep-0508.txt:11
msgid "11-Nov-2015"
msgstr ""

#: ../../pep-0508.txt
msgid "Post-History"
msgstr ""

#: ../../pep-0508.txt:12
msgid "05-Nov-2015, 16-Nov-2015"
msgstr ""

#: ../../pep-0508.txt
msgid "Resolution"
msgstr ""

#: ../../pep-0508.txt:13
msgid "https://mail.python.org/pipermail/distutils-sig/2015-November/027868.html"
msgstr ""

#: ../../pep-0508.txt:17
msgid "Abstract"
msgstr ""

#: ../../pep-0508.txt:19
msgid ""
"This PEP specifies the language used to describe dependencies for "
"packages. It draws a border at the edge of describing a single dependency"
" - the different sorts of dependencies and when they should be installed "
"is a higher level problem. The intent is to provide a building block for "
"higher layer specifications."
msgstr ""

#: ../../pep-0508.txt:25
msgid ""
"The job of a dependency is to enable tools like pip [#pip]_ to find the "
"right package to install. Sometimes this is very loose - just specifying "
"a name, and sometimes very specific - referring to a specific file to "
"install. Sometimes dependencies are only relevant in one platform, or "
"only some versions are acceptable, so the language permits describing all"
" these cases."
msgstr ""

#: ../../pep-0508.txt:31
msgid ""
"The language defined is a compact line based format which is already in "
"widespread use in pip requirements files, though we do not specify the "
"command line option handling that those files permit. There is one caveat"
" - the URL reference form, specified in PEP-440 [#pep440]_ is not "
"actually implemented in pip, but since PEP-440 is accepted, we use that "
"format rather than pip's current native format."
msgstr ""

#: ../../pep-0508.txt:39
msgid "Motivation"
msgstr ""

#: ../../pep-0508.txt:41
msgid ""
"Any specification in the Python packaging ecosystem that needs to consume"
" lists of dependencies needs to build on an approved PEP for such, but "
"PEP-426 [#pep426]_ is mostly aspirational - and there are already "
"existing implementations of the dependency specification which we can "
"instead adopt. The existing implementations are battle proven and user "
"friendly, so adopting them is arguably much better than approving an "
"aspirational, unconsumed, format."
msgstr ""

#: ../../pep-0508.txt:49
msgid "Specification"
msgstr ""

#: ../../pep-0508.txt:52
msgid "Examples"
msgstr ""

#: ../../pep-0508.txt:54
msgid "All features of the language shown with a name based lookup::"
msgstr ""

#: ../../pep-0508.txt:58
msgid "A minimal URL based lookup::"
msgstr ""

#: ../../pep-0508.txt:63
msgid "Concepts"
msgstr ""

#: ../../pep-0508.txt:65
msgid ""
"A dependency specification always specifies a distribution name. It may "
"include extras, which expand the dependencies of the named distribution "
"to enable optional features. The version installed can be controlled "
"using version limits, or giving the URL to a specific artifact to "
"install. Finally the dependency can be made conditional using environment"
" markers."
msgstr ""

#: ../../pep-0508.txt:72
msgid "Grammar"
msgstr ""

#: ../../pep-0508.txt:74
msgid ""
"We first cover the grammar briefly and then drill into the semantics of "
"each section later."
msgstr ""

#: ../../pep-0508.txt:77
msgid ""
"A distribution specification is written in ASCII text. We use a parsley "
"[#parsley]_ grammar to provide a precise grammar. It is expected that the"
" specification will be embedded into a larger system which offers framing"
" such as comments, multiple line support via continuations, or other such"
" features."
msgstr ""

#: ../../pep-0508.txt:82
msgid ""
"The full grammar including annotations to build a useful parse tree is "
"included at the end of the PEP."
msgstr ""

#: ../../pep-0508.txt:85
msgid ""
"Versions may be specified according to the PEP-440 [#pep440]_ rules. "
"(Note: URI is defined in std-66 [#std66]_)::"
msgstr ""

#: ../../pep-0508.txt:95
msgid ""
"Environment markers allow making a specification only take effect in some"
" environments::"
msgstr ""

#: ../../pep-0508.txt:124
msgid ""
"Optional components of a distribution may be specified using the extras "
"field::"
msgstr ""

#: ../../pep-0508.txt:133
msgid "Giving us a rule for name based requirements::"
msgstr ""

#: ../../pep-0508.txt:137
msgid "And a rule for direct reference specifications::"
msgstr ""

#: ../../pep-0508.txt:141
msgid "Leading to the unified rule that can specify a dependency.::"
msgstr ""

#: ../../pep-0508.txt:146
msgid "Whitespace"
msgstr ""

#: ../../pep-0508.txt:148
msgid ""
"Non line-breaking whitespace is mostly optional with no semantic meaning."
" The sole exception is detecting the end of a URL requirement."
msgstr ""

#: ../../pep-0508.txt:152
msgid "Names"
msgstr ""

#: ../../pep-0508.txt:154
msgid ""
"Python distribution names are currently defined in PEP-345 [#pep345]_. "
"Names act as the primary identifier for distributions. They are present "
"in all dependency specifications, and are sufficient to be a "
"specification on their own. However, PyPI places strict restrictions on "
"names - they must match a case insensitive regex or they won't be "
"accepted. Accordingly, in this PEP we limit the acceptable values for "
"identifiers to that regex. A full redefinition of name may take place in "
"a future metadata PEP. The regex (run with re.IGNORECASE) is::"
msgstr ""

#: ../../pep-0508.txt:166
msgid "Extras"
msgstr ""

#: ../../pep-0508.txt:168
msgid ""
"An extra is an optional part of a distribution. Distributions can specify"
" as many extras as they wish, and each extra results in the declaration "
"of additional dependencies of the distribution **when** the extra is used"
" in a dependency specification. For instance::"
msgstr ""

#: ../../pep-0508.txt:175
msgid ""
"Extras union in the dependencies they define with the dependencies of the"
" distribution they are attached to. The example above would result in "
"requests being installed, and requests own dependencies, and also any "
"dependencies that are listed in the \"security\" extra of requests."
msgstr ""

#: ../../pep-0508.txt:180
msgid "If multiple extras are listed, all the dependencies are unioned together."
msgstr ""

#: ../../pep-0508.txt:183
msgid "Versions"
msgstr ""

#: ../../pep-0508.txt:185
msgid ""
"See PEP-440 [#pep440]_ for more detail on both version numbers and "
"version comparisons. Version specifications limit the versions of a "
"distribution that can be used. They only apply to distributions looked up"
" by name, rather than via a URL. Version comparison are also used in the "
"markers feature. The optional brackets around a version are present for "
"compatibility with PEP-345 [#pep345]_ but should not be generated, only "
"accepted."
msgstr ""

#: ../../pep-0508.txt:193
msgid "Environment Markers"
msgstr ""

#: ../../pep-0508.txt:195
msgid ""
"Environment markers allow a dependency specification to provide a rule "
"that describes when the dependency should be used. For instance, consider"
" a package that needs argparse. In Python 2.7 argparse is always present."
" On older Python versions it has to be installed as a dependency. This "
"can be expressed as so::"
msgstr ""

#: ../../pep-0508.txt:202
msgid ""
"A marker expression evaluates to either True or False. When it evaluates "
"to False, the dependency specification should be ignored."
msgstr ""

#: ../../pep-0508.txt:205
msgid ""
"The marker language is inspired by Python itself, chosen for the ability "
"to safely evaluate it without running arbitrary code that could become a "
"security vulnerability. Markers were first standardised in PEP-345 "
"[#pep345]_. This PEP fixes some issues that were observed in the design "
"described in PEP-426 [#pep426]_."
msgstr ""

#: ../../pep-0508.txt:211
msgid ""
"Comparisons in marker expressions are typed by the comparison operator.  "
"The <marker_op> operators that are not in <version_cmp> perform the same "
"as they do for strings in Python. The <version_cmp> operators use the "
"PEP-440 [#pep440]_ version comparison rules when those are defined (that "
"is when both sides have a valid version specifier). If there is no "
"defined PEP-440 behaviour and the operator exists in Python, then the "
"operator falls back to the Python behaviour. Otherwise an error should be"
" raised. e.g. the following will result in  errors::"
msgstr ""

#: ../../pep-0508.txt:223
msgid ""
"User supplied constants are always encoded as strings with either ``'`` "
"or ``\"`` quote marks. Note that backslash escapes are not defined, but "
"existing implementations do support them. They are not included in this "
"specification because they add complexity and there is no observable need"
" for them today. Similarly we do not define non-ASCII character support: "
"all the runtime variables we are referencing are expected to be ASCII-"
"only."
msgstr ""

#: ../../pep-0508.txt:230
msgid ""
"The variables in the marker grammar such as \"os_name\" resolve to values"
" looked up in the Python runtime. With the exception of \"extra\" all "
"values are defined on all Python versions today - it is an error in the "
"implementation of markers if a value is not defined."
msgstr ""

#: ../../pep-0508.txt:235
msgid ""
"Unknown variables must raise an error rather than resulting in a "
"comparison that evaluates to True or False."
msgstr ""

#: ../../pep-0508.txt:238
msgid ""
"Variables whose value cannot be calculated on a given Python "
"implementation should evaluate to ``0`` for versions, and an empty string"
" for all other variables."
msgstr ""

#: ../../pep-0508.txt:242
msgid ""
"The \"extra\" variable is special. It is used by wheels to signal which "
"specifications apply to a given extra in the wheel ``METADATA`` file, but"
" since the ``METADATA`` file is based on a draft version of PEP-426, "
"there is no current specification for this. Regardless, outside of a "
"context where this special handling is taking place, the \"extra\" "
"variable should result in an error like all other unknown variables."
msgstr ""

#: ../../pep-0508.txt:252
msgid "Marker"
msgstr ""

#: ../../pep-0508.txt:253
msgid "Python equivalent"
msgstr ""

#: ../../pep-0508.txt:254
msgid "Sample values"
msgstr ""

#: ../../pep-0508.txt:255
msgid "``os_name``"
msgstr ""

#: ../../pep-0508.txt:256
msgid "``os.name``"
msgstr ""

#: ../../pep-0508.txt:257
msgid "``posix``, ``java``"
msgstr ""

#: ../../pep-0508.txt:258
msgid "``sys_platform``"
msgstr ""

#: ../../pep-0508.txt:259
msgid "``sys.platform``"
msgstr ""

#: ../../pep-0508.txt:260
msgid ""
"``linux``, ``linux2``, ``darwin``, ``java1.8.0_51`` (note that \"linux\" "
"is from Python3 and \"linux2\" from Python2)"
msgstr ""

#: ../../pep-0508.txt:262
msgid "``platform_machine``"
msgstr ""

#: ../../pep-0508.txt:263
msgid "``platform.machine()``"
msgstr ""

#: ../../pep-0508.txt:264
msgid "``x86_64``"
msgstr ""

#: ../../pep-0508.txt:265
msgid "``platform_python_implementation``"
msgstr ""

#: ../../pep-0508.txt:266
msgid "``platform.python_implementation()``"
msgstr ""

#: ../../pep-0508.txt:267
msgid "``CPython``, ``Jython``"
msgstr ""

#: ../../pep-0508.txt:268
msgid "``platform_release``"
msgstr ""

#: ../../pep-0508.txt:269
msgid "``platform.release()``"
msgstr ""

#: ../../pep-0508.txt:270
msgid "``3.14.1-x86_64-linode39``, ``14.5.0``, ``1.8.0_51``"
msgstr ""

#: ../../pep-0508.txt:271
msgid "``platform_system``"
msgstr ""

#: ../../pep-0508.txt:272
msgid "``platform.system()``"
msgstr ""

#: ../../pep-0508.txt:273
msgid "``Linux``, ``Windows``, ``Java``"
msgstr ""

#: ../../pep-0508.txt:274
msgid "``platform_version``"
msgstr ""

#: ../../pep-0508.txt:275
msgid "``platform.version()``"
msgstr ""

#: ../../pep-0508.txt:276
msgid ""
"``#1 SMP Fri Apr 25 13:07:35 EDT 2014`` ``Java HotSpot(TM) 64-Bit Server "
"VM, 25.51-b03, Oracle Corporation`` ``Darwin Kernel Version 14.5.0: Wed "
"Jul 29 02:18:53 PDT 2015; root:xnu-2782.40.9~2/RELEASE_X86_64``"
msgstr ""

#: ../../pep-0508.txt:279
msgid "``python_version``"
msgstr ""

#: ../../pep-0508.txt:280
msgid "``'.'.join(platform.python_version_tuple()[:2])``"
msgstr ""

#: ../../pep-0508.txt:281
msgid "``3.4``, ``2.7``"
msgstr ""

#: ../../pep-0508.txt:282
msgid "``python_full_version``"
msgstr ""

#: ../../pep-0508.txt:283
msgid "``platform.python_version()``"
msgstr ""

#: ../../pep-0508.txt:284 ../../pep-0508.txt:290
msgid "``3.4.0``, ``3.5.0b1``"
msgstr ""

#: ../../pep-0508.txt:285
msgid "``implementation_name``"
msgstr ""

#: ../../pep-0508.txt:286
msgid "``sys.implementation.name``"
msgstr ""

#: ../../pep-0508.txt:287
msgid "``cpython``"
msgstr ""

#: ../../pep-0508.txt:288
msgid "``implementation_version``"
msgstr ""

#: ../../pep-0508.txt:289
msgid "see definition below"
msgstr ""

#: ../../pep-0508.txt:291
msgid "``extra``"
msgstr ""

#: ../../pep-0508.txt:292
msgid ""
"An error except when defined by the context interpreting the "
"specification."
msgstr ""

#: ../../pep-0508.txt:294
msgid "``test``"
msgstr ""

#: ../../pep-0508.txt:296
msgid ""
"The ``implementation_version`` marker variable is derived from "
"``sys.implementation.version``::"
msgstr ""

#: ../../pep-0508.txt:312
msgid "Backwards Compatibility"
msgstr ""

#: ../../pep-0508.txt:314
msgid ""
"Most of this PEP is already widely deployed and thus offers no "
"compatibility concerns."
msgstr ""

#: ../../pep-0508.txt:317
msgid ""
"There are however a few points where the PEP differs from the deployed "
"base."
msgstr ""

#: ../../pep-0508.txt:319
msgid ""
"Firstly, PEP-440 direct references haven't actually been deployed in the "
"wild, but they were designed to be compatibly added, and there are no "
"known obstacles to adding them to pip or other tools that consume the "
"existing dependency metadata in distributions - particularly since they "
"won't be permitted to be present in PyPI uploaded distributions anyway."
msgstr ""

#: ../../pep-0508.txt:325
msgid ""
"Secondly, PEP-426 markers which have had some reasonable deployment, "
"particularly in wheels and pip, will handle version comparisons with "
"``python_full_version`` \"2.7.10\" differently. Specifically in 426 "
"\"2.7.10\" is less than \"2.7.9\". This backward incompatibility is "
"deliberate. We are also defining new operators - \"~=\" and \"===\", and "
"new variables - ``platform_release``, ``platform_system``, "
"``implementation_name``, and ``implementation_version`` which are not "
"present in older marker implementations. The variables will error on "
"those implementations. Users of both features will need to make a "
"judgement as to when support has become sufficiently widespread in the "
"ecosystem that using them will not cause compatibility issues."
msgstr ""

#: ../../pep-0508.txt:337
msgid ""
"Thirdly, PEP-345 required brackets around version specifiers. In order to"
" accept PEP-345 dependency specifications, brackets are accepted, but "
"they should not be generated."
msgstr ""

#: ../../pep-0508.txt:342
msgid "Rationale"
msgstr ""

#: ../../pep-0508.txt:344
msgid ""
"In order to move forward with any new PEPs that depend on environment "
"markers, we needed a specification that included them in their modern "
"form. This PEP brings together all the currently unspecified components "
"into a specified form."
msgstr ""

#: ../../pep-0508.txt:349
msgid ""
"The requirement specifier was adopted from the EBNF in the setuptools "
"pkg_resources documentation, since we wish to avoid depending on a de "
"facto, vs PEP specified, standard."
msgstr ""

#: ../../pep-0508.txt:354
msgid "Complete Grammar"
msgstr ""

#: ../../pep-0508.txt:356
msgid "The complete parsley grammar::"
msgstr ""

#: ../../pep-0508.txt:463
msgid "A test program - if the grammar is in a string ``grammar``::"
msgstr ""

#: ../../pep-0508.txt:530
msgid "Summary of changes to PEP 508"
msgstr ""

#: ../../pep-0508.txt:532
msgid ""
"The following changes were made to this PEP based on feedback after its "
"initial implementation:"
msgstr ""

#: ../../pep-0508.txt:535
msgid ""
"The definition of ``python_version`` was changed from "
"``platform.python_version()[:3]`` to "
"``'.'.join(platform.python_version_tuple()[:2])``, to accommodate "
"potential future versions of Python with 2-digit major and minor versions"
" (e.g. 3.10). [#future_versions]_"
msgstr ""

#: ../../pep-0508.txt:543
msgid "References"
msgstr ""

#: ../../pep-0508.txt:545
msgid ""
"pip, the recommended installer for Python packages "
"(http://pip.readthedocs.org/en/stable/)"
msgstr ""

#: ../../pep-0508.txt:548
msgid ""
"PEP-345, Python distribution metadata version 1.2. "
"(https://www.python.org/dev/peps/pep-0345/)"
msgstr ""

#: ../../pep-0508.txt:551
msgid ""
"PEP-426, Python distribution metadata. "
"(https://www.python.org/dev/peps/pep-0426/)"
msgstr ""

#: ../../pep-0508.txt:554
msgid ""
"PEP-440, Python distribution metadata. "
"(https://www.python.org/dev/peps/pep-0440/)"
msgstr ""

#: ../../pep-0508.txt:557
msgid "The URL specification. (https://tools.ietf.org/html/rfc3986)"
msgstr ""

#: ../../pep-0508.txt:560
msgid "The parsley PEG library. (https://pypi.python.org/pypi/parsley/)"
msgstr ""

#: ../../pep-0508.txt:563
msgid ""
"Future Python versions might be problematic with the definition of "
"Environment Marker Variable ``python_version`` "
"(https://github.com/python/peps/issues/560)"
msgstr ""

#: ../../pep-0508.txt:568
msgid "Copyright"
msgstr ""

#: ../../pep-0508.txt:570
msgid "This document has been placed in the public domain."
msgstr ""

