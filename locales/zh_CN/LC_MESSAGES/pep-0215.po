# SOME DESCRIPTIVE TITLE.
# Copyright (C)
# This file is distributed under the same license as the PEPs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PEPs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-11-12 17:38+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../pep-0215.txt
msgid "PEP"
msgstr ""

#: ../../pep-0215.txt:1
msgid "215"
msgstr ""

#: ../../pep-0215.txt
msgid "Title"
msgstr ""

#: ../../pep-0215.txt:2
msgid "String Interpolation"
msgstr ""

#: ../../pep-0215.txt
msgid "Author"
msgstr ""

#: ../../pep-0215.txt:5
msgid "ping@zesty.ca (Ka-Ping Yee)"
msgstr ""

#: ../../pep-0215.txt
msgid "Status"
msgstr ""

#: ../../pep-0215.txt:6
msgid "Superseded"
msgstr ""

#: ../../pep-0215.txt
msgid "Type"
msgstr ""

#: ../../pep-0215.txt:7
msgid "Standards Track"
msgstr ""

#: ../../pep-0215.txt
msgid "Created"
msgstr ""

#: ../../pep-0215.txt:9
msgid "24-Jul-2000"
msgstr ""

#: ../../pep-0215.txt
msgid "Python-Version"
msgstr ""

#: ../../pep-0215.txt:10
msgid "2.1"
msgstr ""

#: ../../pep-0215.txt
msgid "Post-History"
msgstr ""

#: ../../pep-0215.txt
msgid "Superseded-By"
msgstr ""

#: ../../pep-0215.txt:12
msgid "292"
msgstr ""

#: ../../pep-0215.txt:16
msgid "Abstract"
msgstr ""

#: ../../pep-0215.txt:18
msgid ""
"This document proposes a string interpolation feature for Python to allow"
" easier string formatting.  The suggested syntax change is the "
"introduction of a '$' prefix that triggers the special interpretation of "
"the '$' character within a string, in a manner reminiscent to the "
"variable interpolation found in Unix shells, awk, Perl, or Tcl."
msgstr ""

#: ../../pep-0215.txt:27
msgid "Copyright"
msgstr ""

#: ../../pep-0215.txt:29
msgid "This document is in the public domain."
msgstr ""

#: ../../pep-0215.txt:33
msgid "Specification"
msgstr ""

#: ../../pep-0215.txt:35
msgid ""
"Strings may be preceded with a '$' prefix that comes before the leading "
"single or double quotation mark (or triplet) and before any of the other "
"string prefixes ('r' or 'u').  Such a string is processed for "
"interpolation after the normal interpretation of backslash-escapes in its"
" contents.  The processing occurs just before the string is pushed onto "
"the value stack, each time the string is pushed.  In short, Python "
"behaves exactly as if '$' were a unary operator applied to the string.  "
"The operation performed is as follows:"
msgstr ""

#: ../../pep-0215.txt:45
msgid ""
"The string is scanned from start to end for the '$' character (``\\x24`` "
"in 8-bit strings or ``\\u0024`` in Unicode strings).  If there are no '$'"
" characters present, the string is returned unchanged."
msgstr ""

#: ../../pep-0215.txt:49
msgid ""
"Any '$' found in the string, followed by one of the two kinds of "
"expressions described below, is replaced with the value of the expression"
" as evaluated in the current namespaces.  The value is converted with "
"``str()`` if the containing string is an 8-bit string, or with "
"``unicode()`` if it is a Unicode string."
msgstr ""

#: ../../pep-0215.txt:55
msgid ""
"A Python identifier optionally followed by any number of trailers, where "
"a trailer consists of: - a dot and an identifier, - an expression "
"enclosed in square brackets, or - an argument list enclosed in "
"parentheses (This is exactly the pattern expressed in the Python grammar "
"by \"``NAME trailer*``\", using the definitions in ``Grammar/Grammar``.)"
msgstr ""

#: ../../pep-0215.txt:63
msgid "Any complete Python expression enclosed in curly braces."
msgstr ""

#: ../../pep-0215.txt:65
msgid "Two dollar-signs (\"$$\") are replaced with a single \"$\"."
msgstr ""

#: ../../pep-0215.txt:69
msgid "Examples"
msgstr ""

#: ../../pep-0215.txt:71
msgid ""
"Here is an example of an interactive session exhibiting the expected "
"behaviour of this feature. ::"
msgstr ""

#: ../../pep-0215.txt:97
msgid "Discussion"
msgstr ""

#: ../../pep-0215.txt:99
msgid ""
"'$' is chosen as the interpolation character within the string for the "
"sake of familiarity, since it is already used for this purpose in many "
"other languages and contexts."
msgstr ""

#: ../../pep-0215.txt:103
msgid ""
"It is then natural to choose '$' as a prefix, since it is a mnemonic for "
"the interpolation character."
msgstr ""

#: ../../pep-0215.txt:106
msgid ""
"Trailers are permitted to give this interpolation mechanism even more "
"power than the interpolation available in most other languages, while the"
" expression to be interpolated remains clearly visible and free of curly "
"braces."
msgstr ""

#: ../../pep-0215.txt:111
msgid ""
"'$' works like an operator and could be implemented as an operator, but "
"that prevents the compile-time optimization and presents security issues."
"  So, it is only allowed as a string prefix."
msgstr ""

#: ../../pep-0215.txt:118
msgid "Security Issues"
msgstr ""

#: ../../pep-0215.txt:120
msgid ""
"\"$\" has the power to eval, but only to eval a literal.  As described "
"here (a string prefix rather than an operator), it introduces no new "
"security issues since the expressions to be evaluated must be literally "
"present in the code."
msgstr ""

#: ../../pep-0215.txt:127
msgid "Implementation"
msgstr ""

#: ../../pep-0215.txt:129
msgid ""
"The ``Itpl`` module at [1]_ provides a prototype of this feature.  It "
"uses the ``tokenize`` module to find the end of an expression to be "
"interpolated, then calls ``eval()`` on the expression each time a value "
"is needed.  In the prototype, the expression is parsed and compiled again"
" each time it is evaluated."
msgstr ""

#: ../../pep-0215.txt:136
msgid ""
"As an optimization, interpolated strings could be compiled directly into "
"the corresponding bytecode; that is, ::"
msgstr ""

#: ../../pep-0215.txt:141
msgid "could be compiled as though it were the expression ::"
msgstr ""

#: ../../pep-0215.txt:145
msgid "so that it only needs to be compiled once."
msgstr ""

#: ../../pep-0215.txt:149
msgid "References"
msgstr ""

#: ../../pep-0215.txt:151
msgid "http://www.lfw.org/python/Itpl.py"
msgstr ""

