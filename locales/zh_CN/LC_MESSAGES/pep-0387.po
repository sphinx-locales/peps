# SOME DESCRIPTIVE TITLE.
# Copyright (C)
# This file is distributed under the same license as the PEPs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PEPs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-11-12 17:38+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../pep-0387.txt
msgid "PEP"
msgstr ""

#: ../../pep-0387.txt:1
msgid "387"
msgstr ""

#: ../../pep-0387.txt
msgid "Title"
msgstr ""

#: ../../pep-0387.txt:2
msgid "Backwards Compatibility Policy"
msgstr "向后兼容政策"

#: ../../pep-0387.txt
msgid "Author"
msgstr ""

#: ../../pep-0387.txt:5
msgid "Benjamin Peterson <benjamin@python.org>"
msgstr ""

#: ../../pep-0387.txt
msgid "BDFL-Delegate"
msgstr ""

#: ../../pep-0387.txt:6
msgid "Brett Cannon (on behalf of the steering council)"
msgstr ""

#: ../../pep-0387.txt
msgid "Discussions-To"
msgstr ""

#: ../../pep-0387.txt:7
msgid "https://discuss.python.org/t/pep-387-backwards-compatibilty-policy/"
msgstr ""

#: ../../pep-0387.txt
msgid "Status"
msgstr ""

#: ../../pep-0387.txt:8
msgid "Active"
msgstr ""

#: ../../pep-0387.txt
msgid "Type"
msgstr ""

#: ../../pep-0387.txt:9
msgid "Process"
msgstr ""

#: ../../pep-0387.txt
msgid "Created"
msgstr ""

#: ../../pep-0387.txt:11
msgid "18-Jun-2009"
msgstr ""

#: ../../pep-0387.txt
msgid "Post-History"
msgstr ""

#: ../../pep-0387.txt:12
msgid "19-Jun-2009, 12-Jun-2020"
msgstr ""

#: ../../pep-0387.txt:16
msgid "Abstract"
msgstr "摘要"

#: ../../pep-0387.txt:18
msgid "This PEP outlines Python's backwards compatibility policy."
msgstr "这个 PEP 概述了 Python 的向后兼容政策。"

#: ../../pep-0387.txt:22
msgid "Rationale"
msgstr "理论依据"

#: ../../pep-0387.txt:24
msgid ""
"As one of the most used programming languages today [#tiobe]_, the Python"
" core language and its standard library play a critical role in millions "
"of applications and libraries. This is fantastic. However, it means the "
"development team must be very careful not to break this existing 3rd "
"party code with new releases."
msgstr ""
"作为当今使用最多的编程语言之一 [#tiobe]_，"
"Python 核心语言及其标准库在数以百万计的应用程序和库中发挥了关键作用。" 
"然而，这意味着开发团队必须非常小心，不要用新版本破坏这些现有的第三方代码。"

#: ../../pep-0387.txt:30
msgid ""
"This PEP takes the perspective that \"backwards incompatibility\" means "
"preexisting code ceases to comparatively function after a change. It is "
"acknowledged that this is not a concrete definition, but the expectation "
"is people in general understand what is meant by \"backwards "
"incompatibility\", and if they are unsure they may ask the Python "
"development team and/or steering council for guidance."
msgstr ""
"这个PEP采取的观点是：“向后不兼容” 是指预先存在的代码在改变后不再具有相对的功能。"
"我们承认这不是一个具体的定义，但我们希望人们能够普遍理解 “向后不兼容” 的含义，"
"如果他们不确定，可以向 Python 开发团队和/或指导委员会寻求指导。

#: ../../pep-0387.txt:39
msgid "Backwards Compatibility Rules"
msgstr "向后兼容规则"

#: ../../pep-0387.txt:41
msgid "This policy applies to all public APIs.  These include:"
msgstr "该政策适用于所有公共 API。这些包括："

#: ../../pep-0387.txt:43
msgid ""
"Syntax and behavior of these constructs as defined by the reference "
"manual."
msgstr ""
"参考手册中定义的这些结构的语法和行为。"

#: ../../pep-0387.txt:46
msgid "The C-API."
msgstr "C API。"

#: ../../pep-0387.txt:48
msgid "Function, class, module, attribute, and method names and types."
msgstr "函数、类、模块、属性和方法的名称和类型。"

#: ../../pep-0387.txt:50
msgid ""
"Given a set of arguments, the return value, side effects, and raised "
"exceptions of a function.  This does not preclude changes from reasonable"
" bug fixes."
msgstr ""
"给定一组参数，一个函数的返回值、副作用和引发的异常。这并不排除合理的错误修复带来的变化。"

#: ../../pep-0387.txt:54
msgid "The position and expected types of arguments and returned values."
msgstr "参数和返回值的位置和预期类型。"

#: ../../pep-0387.txt:56
msgid ""
"Behavior of classes with regards to subclasses: the conditions under "
"which overridden methods are called."
msgstr ""
"类对子类的行为：重载方法被调用的条件。"

#: ../../pep-0387.txt:59
msgid "Documented exceptions and the semantics which lead to their raising."
msgstr "被记录的异常和导致其产生的语义。"

#: ../../pep-0387.txt:61
msgid "Exceptions commonly raised in EAFP scenarios."
msgstr "在 EAFP 方案中经常提出的例外情况。"

#: ../../pep-0387.txt:63
msgid ""
"Others are explicitly not part of the public API.  They can change or be "
"removed at any time in any way.  These include:"
msgstr ""
"其他的是明确地不属于公共API的一部分。它们可以在任何时候以任何方式改变或被删除。这些包括："

#: ../../pep-0387.txt:66
msgid ""
"Function, class, module, attribute, method, and C-API names and types "
"that are prefixed by \"_\" (except special names)."
msgstr ""
"函数、类、模块、属性、方法和 C-API 的名称和类型，其前缀为 \"_\"。（特殊名称除外）。"

#: ../../pep-0387.txt:69
msgid "Anything documented publicly as being private."
msgstr "任何公开记录的东西都是私人的。"

#: ../../pep-0387.txt:71
msgid ""
"Imported modules (unless explicitly documented as part of the public API;"
" e.g. importing the ``bacon`` module in the ``spam`` does not "
"automatically mean ``spam.bacon`` is part of the public API unless it is "
"documented as such)."
msgstr ""
"导入的模块（除非明确记录为公共 API 的一部分；"
"例如，在 ``spam`` 中导入 ``bacon`` 模块并不自动意味着 ``spam.bacon`` 是公共 API 的一部分，除非它被记录下来）。"

#: ../../pep-0387.txt:76
msgid "Inheritance patterns of internal classes."
msgstr "内部类的继承模式。"

#: ../../pep-0387.txt:78
msgid ""
"Test suites.  (Anything in the ``Lib/test`` directory or test "
"subdirectories of packages.)"
msgstr ""
"测试套件。（任何在 ``Lib/test`` 目录下或软件包的测试 "
"包的子目录。）"

#: ../../pep-0387.txt:81
msgid ""
"Backward compatibility rules do not apply to any module or API that is "
"explicitly documented as **Provisional** per PEP 411."
msgstr ""
"后向兼容规则不适用于任何根据 PEP 411 明确记录为 **Provisional** 的模块或 API。"

#: ../../pep-0387.txt:86
msgid "Basic policy for backwards compatibility"
msgstr "向后兼容的基本政策"

#: ../../pep-0387.txt:88
msgid ""
"In general, incompatibilities should have a large benefit to breakage "
"ratio, and the incompatibility should be easy to resolve in affected "
"code.  For example, adding an stdlib module with the same name as a third"
" party package is generally not acceptable.  Adding a method or attribute"
" that conflicts with 3rd party code through inheritance, however, is "
"likely reasonable."
msgstr ""
"一般来说，不兼容应该有一个很大的利益与破坏的比率，而且不兼容应该在受影响的代码中容易解决。"
"例如，添加一个与第三方软件包同名的stdlib模块通常是不被接受的。"
"然而，添加一个通过继承与第三方代码相冲突的方法或属性，可能是合理的。"

#: ../../pep-0387.txt:95
msgid ""
"Unless it is going through the deprecation process below, the behavior of"
" an API *must* not change in an incompatible fashion between any two "
"consecutive releases.  Python's yearly release process (:pep:`602`) means"
" that the deprecation period must last at least two years."
msgstr ""
"除非它正在经历下面的废弃过程，否则一个 API 的行为 *必须* 在任何两个连续的版本之间不以不兼容的方式改变。"
"Python 的年度发布过程（:pep:`602`）意味着废弃期必须至少持续两年。"

#: ../../pep-0387.txt:101
msgid ""
"Similarly a feature cannot be removed without notice between any two "
"consecutive releases."
msgstr ""
"同样，在任何两个连续的版本之间，不能在没有通知的情况下删除一项功能。"

#: ../../pep-0387.txt:104
msgid ""
"The steering council may grant exceptions to this policy. In particular, "
"they may shorten the required deprecation period for a feature. "
"Exceptions are only granted for extreme situations such as dangerously "
"broken or insecure features or features no one could reasonably be "
"depending on (e.g., support for completely obsolete platforms)."
msgstr ""
"指导委员会可以批准这一政策的例外情况。特别是，他们可以缩短一个功能所需的废弃期。"
"只有在极端的情况下才会批准例外，如危险的破损或不安全的功能或没有人可以合理地依赖的功能（例如，对完全过时的平台的支持）。"

#: ../../pep-0387.txt:113
msgid "Making Incompatible Changes"
msgstr "进行不兼容的修改"

#: ../../pep-0387.txt:115
msgid ""
"Making an incompatible change is a gradual process performed over several"
" releases:"
msgstr ""
"做一个不兼容的改变是一个渐进的过程，在几个版本中执行："

#: ../../pep-0387.txt:118
msgid ""
"Discuss the change.  Depending on the degree of incompatibility, this "
"could be on the bug tracker, python-dev, python-list, or the appropriate "
"SIG.  A PEP or similar document may be written. Hopefully users of the "
"affected API will pipe up to comment."
msgstr ""
"讨论一下这个变化。"
"根据不兼容的程度，这可以在 bug 追踪器、python-dev、python-list 或适当的 SIG 上 进行。"
" 希望受影响的 API 的用户能够发表意见。"

#: ../../pep-0387.txt:123
msgid ""
"Add a warning.  If behavior is changing, the API may gain a new function "
"or method to perform the new behavior; old usage should raise the "
"warning.  If an API is being removed, simply warn whenever it is entered."
"  ``DeprecationWarning`` is the usual warning category to use, but "
"``PendingDeprecationWarning`` may be used in special cases where the old "
"and new versions of the API will coexist for many releases [#warnings]_. "
"Compiler warnings are also acceptable. The warning message should include"
" the release the incompatibility is expected to become the default and a "
"link to an issue that users can post feedback to."
msgstr ""
"增加一个警告。"
"如果行为正在改变，API 可能会获得一个新的函数或方法来执行新的行为；旧的用法应该引起警告。"
"如果一个 API 正在被删除，只要在它被输入时发出警告即可。"
"``DeprecationWarning`` 是通常使用的警告类别，但 ``PendingDeprecationWarning`` 可用于特殊情况，"
"即 API 的新旧版本将共存于许多版本 [#warnings]_。"
"编译器警告也是可以接受的。"
"警告信息应该包括不兼容的版本预计将成为默认的版本，以及一个用户可以发布反馈的问题链接。"

#: ../../pep-0387.txt:134
msgid ""
"Wait for the warning to appear in at least two minor Python versions of "
"the same major version, or one minor version in an older major version "
"(e.g. for a warning in Python 3.10, you either wait until at least Python"
" 3.12 or Python 4.0 to make the change). It's fine to wait more than two "
"releases."
msgstr ""
"等待警告出现在同一大版本的至少两个 Python 小版本中，或者在更早的大版本中的一个小版本中"
"（例如，对于 Python 3.10 中的警告，你要么等到至少 Python 3.12，要么等到 Python 4.0 来做改变）。"
"等待两个以上的版本也是可以的"。

#: ../../pep-0387.txt:140
msgid ""
"See if there's any feedback.  Users not involved in the original "
"discussions may comment now after seeing the warning.  Perhaps "
"reconsider."
msgstr ""
"看看是否有任何反馈。没有参与原始讨论的用户在看到警告后现在可以发表评论。也许会重新考虑。"

#: ../../pep-0387.txt:144
msgid ""
"The behavior change or feature removal may now be made default or "
"permanent having reached the declared version. Remove the old version and"
" warning."
msgstr ""
"行为改变或功能删除现在可以成为默认的或永久的，已经达到声明的版本。删除旧版本和警告。"

#: ../../pep-0387.txt:150
msgid "References"
msgstr "参考"

#: ../../pep-0387.txt:152
msgid "TIOBE Programming Community Index"
msgstr "TIOBE 编程社区索引"

#: ../../pep-0387.txt:154
msgid "http://www.tiobe.com/index.php/content/paperinfo/tpci/index.html"
msgstr ""

#: ../../pep-0387.txt:156
msgid "The warnings module"
msgstr "警告模块"

#: ../../pep-0387.txt:158
msgid "http://docs.python.org/library/warnings.html"
msgstr ""

#: ../../pep-0387.txt:162
msgid "Copyright"
msgstr "版权声明"

#: ../../pep-0387.txt:164
msgid "This document has been placed in the public domain."
msgstr "本文件已被置于公共领域。"

