# SOME DESCRIPTIVE TITLE.
# Copyright (C)
# This file is distributed under the same license as the PEPs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PEPs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-11-12 17:38+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../pep-0379.txt
msgid "PEP"
msgstr ""

#: ../../pep-0379.txt:1
msgid "379"
msgstr ""

#: ../../pep-0379.txt
msgid "Title"
msgstr ""

#: ../../pep-0379.txt:2
msgid "Adding an Assignment Expression"
msgstr ""

#: ../../pep-0379.txt
msgid "Author"
msgstr ""

#: ../../pep-0379.txt:5
msgid "Jervis Whitley <jervisau@gmail.com>"
msgstr ""

#: ../../pep-0379.txt
msgid "Status"
msgstr ""

#: ../../pep-0379.txt:6
msgid "Withdrawn"
msgstr ""

#: ../../pep-0379.txt
msgid "Type"
msgstr ""

#: ../../pep-0379.txt:7
msgid "Standards Track"
msgstr ""

#: ../../pep-0379.txt
msgid "Created"
msgstr ""

#: ../../pep-0379.txt:9
msgid "14-Mar-2009"
msgstr ""

#: ../../pep-0379.txt
msgid "Python-Version"
msgstr ""

#: ../../pep-0379.txt:10
msgid "2.7, 3.2"
msgstr ""

#: ../../pep-0379.txt
msgid "Post-History"
msgstr ""

#: ../../pep-0379.txt:15
msgid "Abstract"
msgstr ""

#: ../../pep-0379.txt:17
msgid ""
"This PEP adds a new assignment expression to the Python language to make "
"it possible to assign the result of an expression in almost any place.  "
"The new expression will allow the assignment of the result of an "
"expression at first use (in a comparison for example)."
msgstr ""

#: ../../pep-0379.txt:25
msgid "Motivation and Summary"
msgstr ""

#: ../../pep-0379.txt:27
msgid ""
"Issue1714448 \"if something as x:\" [1]_ describes a feature to allow "
"assignment of the result of an expression in an if statement to a name.  "
"It supposed that the ``as`` syntax could be borrowed for this purpose.  "
"Many times it is not the expression itself that is interesting, rather "
"one of the terms that make up the expression. To be clear, something like"
" this::"
msgstr ""

#: ../../pep-0379.txt:36
msgid "seems awfully limited, when this::"
msgstr ""

#: ../../pep-0379.txt:40
msgid "is probably the desired result."
msgstr ""

#: ../../pep-0379.txt:44
msgid "Use Cases"
msgstr ""

#: ../../pep-0379.txt:46
msgid "See the Examples section near the end."
msgstr ""

#: ../../pep-0379.txt:50
msgid "Specification"
msgstr ""

#: ../../pep-0379.txt:52
msgid "A new expression is proposed with the (nominal) syntax::"
msgstr ""

#: ../../pep-0379.txt:56
msgid "This single expression does the following:"
msgstr ""

#: ../../pep-0379.txt:58
msgid "Evaluate the value of ``EXPR``, an arbitrary expression;"
msgstr ""

#: ../../pep-0379.txt:59
msgid "Assign the result to ``VAR``, a single assignment target; and"
msgstr ""

#: ../../pep-0379.txt:60
msgid "Leave the result of ``EXPR`` on the Top of Stack (TOS)"
msgstr ""

#: ../../pep-0379.txt:62
msgid ""
"Here ``->`` or (``RARROW``) has been used to illustrate the concept that "
"the result of ``EXPR`` is assigned to ``VAR``."
msgstr ""

#: ../../pep-0379.txt:65
msgid "The translation of the proposed syntax is::"
msgstr ""

#: ../../pep-0379.txt:70
msgid "The assignment target can be either an attribute, a subscript or name::"
msgstr ""

#: ../../pep-0379.txt:79
msgid ""
"This expression should be available anywhere that an expression is "
"currently accepted."
msgstr ""

#: ../../pep-0379.txt:82
msgid ""
"All exceptions that are currently raised during invalid assignments will "
"continue to be raised when using the assignment expression.  For example,"
" a ``NameError`` will be raised when in example 1 and 2 above if ``name``"
" is not previously defined, or an ``IndexError`` if index 0 was out of "
"range."
msgstr ""

#: ../../pep-0379.txt:90
msgid "Examples from the Standard Library"
msgstr ""

#: ../../pep-0379.txt:92
msgid ""
"The following two examples were chosen after a brief search through the "
"standard library, specifically both are from ast.py which happened to be "
"open at the time of the search."
msgstr ""

#: ../../pep-0379.txt:96 ../../pep-0379.txt:115
msgid "Original::"
msgstr ""

#: ../../pep-0379.txt:106 ../../pep-0379.txt:128
msgid "Using assignment expression::"
msgstr ""

#: ../../pep-0379.txt:143
msgid "Examples"
msgstr ""

#: ../../pep-0379.txt:145
msgid ""
"The examples shown below highlight some of the desirable features of the "
"assignment expression, and some of the possible corner cases."
msgstr ""

#: ../../pep-0379.txt:149
msgid "Assignment in an if statement for use later::"
msgstr ""

#: ../../pep-0379.txt:158
msgid "Assignment in a while loop clause::"
msgstr ""

#: ../../pep-0379.txt:163
msgid "Keep the iterator object from the for loop::"
msgstr ""

#: ../../pep-0379.txt:168
msgid "Corner case::"
msgstr ""

#: ../../pep-0379.txt:176
msgid "References"
msgstr ""

#: ../../pep-0379.txt:178
msgid ""
"Issue1714448 \"if something as x:\", k0wax "
"http://bugs.python.org/issue1714448"
msgstr ""

#: ../../pep-0379.txt:183
msgid "Copyright"
msgstr ""

#: ../../pep-0379.txt:185
msgid "This document has been placed in the public domain."
msgstr ""

