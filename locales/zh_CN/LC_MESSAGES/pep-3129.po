# SOME DESCRIPTIVE TITLE.
# Copyright (C)
# This file is distributed under the same license as the PEPs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PEPs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-11-12 17:38+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../pep-3129.txt
msgid "PEP"
msgstr ""

#: ../../pep-3129.txt:1
msgid "3129"
msgstr ""

#: ../../pep-3129.txt
msgid "Title"
msgstr ""

#: ../../pep-3129.txt:2
msgid "Class Decorators"
msgstr ""

#: ../../pep-3129.txt
msgid "Author"
msgstr ""

#: ../../pep-3129.txt:5
msgid "Collin Winter <collinwinter@google.com>"
msgstr ""

#: ../../pep-3129.txt
msgid "Status"
msgstr ""

#: ../../pep-3129.txt:6
msgid "Final"
msgstr ""

#: ../../pep-3129.txt
msgid "Type"
msgstr ""

#: ../../pep-3129.txt:7
msgid "Standards Track"
msgstr ""

#: ../../pep-3129.txt
msgid "Created"
msgstr ""

#: ../../pep-3129.txt:9
msgid "01-May-2007"
msgstr ""

#: ../../pep-3129.txt
msgid "Python-Version"
msgstr ""

#: ../../pep-3129.txt:10
msgid "3.0"
msgstr ""

#: ../../pep-3129.txt
msgid "Post-History"
msgstr ""

#: ../../pep-3129.txt:11
msgid "7-May-2007"
msgstr ""

#: ../../pep-3129.txt:15
msgid "Abstract"
msgstr ""

#: ../../pep-3129.txt:17
msgid ""
"This PEP proposes class decorators, an extension to the function and "
"method decorators introduced in PEP 318."
msgstr ""

#: ../../pep-3129.txt:22
msgid "Rationale"
msgstr ""

#: ../../pep-3129.txt:24
msgid ""
"When function decorators were originally debated for inclusion in Python "
"2.4, class decorators were seen as obscure and unnecessary [#obscure]_ "
"thanks to metaclasses.  After several years' experience with the Python "
"2.4.x series of releases and an increasing familiarity with function "
"decorators and their uses, the BDFL and the community re-evaluated class "
"decorators and recommended their inclusion in Python 3.0 [#approval]_."
msgstr ""

#: ../../pep-3129.txt:32
msgid ""
"The motivating use-case was to make certain constructs more easily "
"expressed and less reliant on implementation details of the CPython "
"interpreter.  While it is possible to express class decorator-like "
"functionality using metaclasses, the results are generally unpleasant and"
" the implementation highly fragile [#motivation]_.  In addition, "
"metaclasses are inherited, whereas class decorators are not, making "
"metaclasses unsuitable for some, single class-specific uses of class "
"decorators. The fact that large-scale Python projects like Zope were "
"going through these wild contortions to achieve something like class "
"decorators won over the BDFL."
msgstr ""

#: ../../pep-3129.txt:45
msgid "Semantics"
msgstr ""

#: ../../pep-3129.txt:47
msgid ""
"The semantics and design goals of class decorators are the same as for "
"function decorators ([#semantics]_, [#goals]_); the only difference is "
"that you're decorating a class instead of a function. The following two "
"snippets are semantically identical::"
msgstr ""

#: ../../pep-3129.txt:62
msgid "For a detailed examination of decorators, please refer to PEP 318."
msgstr ""

#: ../../pep-3129.txt:66
msgid "Implementation"
msgstr ""

#: ../../pep-3129.txt:68
msgid ""
"Adapting Python's grammar to support class decorators requires modifying "
"two rules and adding a new rule::"
msgstr ""

#: ../../pep-3129.txt:76
msgid "need to be changed to ::"
msgstr ""

#: ../../pep-3129.txt:85
msgid "Adding ``decorated`` is necessary to avoid an ambiguity in the grammar."
msgstr ""

#: ../../pep-3129.txt:88
msgid "The Python AST and bytecode must be modified accordingly."
msgstr ""

#: ../../pep-3129.txt:90
msgid ""
"A reference implementation [#implementation]_ has been provided by Jack "
"Diederich."
msgstr ""

#: ../../pep-3129.txt:95
msgid "Acceptance"
msgstr ""

#: ../../pep-3129.txt:97
msgid ""
"There was virtually no discussion following the posting of this PEP, "
"meaning that everyone agreed it should be accepted."
msgstr ""

#: ../../pep-3129.txt:100
msgid "The patch was committed to Subversion as revision 55430."
msgstr ""

#: ../../pep-3129.txt:104
msgid "References"
msgstr ""

#: ../../pep-3129.txt:107
msgid "http://www.python.org/dev/peps/pep-0318/#motivation"
msgstr ""

#: ../../pep-3129.txt:110
msgid "https://mail.python.org/pipermail/python-dev/2006-March/062942.html"
msgstr ""

#: ../../pep-3129.txt:113
msgid "https://mail.python.org/pipermail/python-dev/2006-March/062888.html"
msgstr ""

#: ../../pep-3129.txt:116
msgid "http://www.python.org/dev/peps/pep-0318/#current-syntax"
msgstr ""

#: ../../pep-3129.txt:119
msgid "http://www.python.org/dev/peps/pep-0318/#design-goals"
msgstr ""

#: ../../pep-3129.txt:122
msgid "https://bugs.python.org/issue1671208"
msgstr ""

#: ../../pep-3129.txt:127
msgid "Copyright"
msgstr ""

#: ../../pep-3129.txt:129
msgid "This document has been placed in the public domain."
msgstr ""

