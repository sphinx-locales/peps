# SOME DESCRIPTIVE TITLE.
# Copyright (C)
# This file is distributed under the same license as the PEPs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PEPs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-11-12 17:38+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../pep-0597.rst
msgid "PEP"
msgstr ""

#: ../../pep-0597.rst:1
msgid "597"
msgstr ""

#: ../../pep-0597.rst
msgid "Title"
msgstr ""

#: ../../pep-0597.rst:2
msgid "Add optional EncodingWarning"
msgstr ""

#: ../../pep-0597.rst
msgid "Author"
msgstr ""

#: ../../pep-0597.rst:4
msgid "Inada Naoki <songofacandy@gmail.com>"
msgstr ""

#: ../../pep-0597.rst
msgid "Status"
msgstr ""

#: ../../pep-0597.rst:5
msgid "Final"
msgstr ""

#: ../../pep-0597.rst
msgid "Type"
msgstr ""

#: ../../pep-0597.rst:6
msgid "Standards Track"
msgstr ""

#: ../../pep-0597.rst
msgid "Created"
msgstr ""

#: ../../pep-0597.rst:8
msgid "05-Jun-2019"
msgstr ""

#: ../../pep-0597.rst
msgid "Python-Version"
msgstr ""

#: ../../pep-0597.rst:9
msgid "3.10"
msgstr ""

#: ../../pep-0597.rst:13
msgid "Abstract"
msgstr ""

#: ../../pep-0597.rst:15
msgid ""
"Add a new warning category ``EncodingWarning``. It is emitted when the "
"``encoding`` argument to ``open()`` is omitted and the default locale-"
"specific encoding is used."
msgstr ""

#: ../../pep-0597.rst:19
msgid ""
"The warning is disabled by default. A new ``-X warn_default_encoding`` "
"command-line option and a new ``PYTHONWARNDEFAULTENCODING`` environment "
"variable can be used to enable it."
msgstr ""

#: ../../pep-0597.rst:23
msgid ""
"A ``\"locale\"`` argument value for ``encoding`` is added too. It "
"explicitly specifies that the locale encoding should be used, silencing "
"the warning."
msgstr ""

#: ../../pep-0597.rst:29
msgid "Motivation"
msgstr ""

#: ../../pep-0597.rst:32
msgid "Using the default encoding is a common mistake"
msgstr ""

#: ../../pep-0597.rst:34
msgid ""
"Developers using macOS or Linux may forget that the default encoding is "
"not always UTF-8."
msgstr ""

#: ../../pep-0597.rst:37
msgid ""
"For example, using ``long_description = open(\"README.md\").read()`` in "
"``setup.py`` is a common mistake. Many Windows users cannot install such "
"packages if there is at least one non-ASCII character (e.g. emoji, author"
" names, copyright symbols, and the like) in their UTF-8-encoded "
"``README.md`` file."
msgstr ""

#: ../../pep-0597.rst:43
msgid ""
"Of the 4000 most downloaded packages from PyPI, 489 use non-ASCII "
"characters in their README, and 82 fail to install from source on non-"
"UTF-8 locales due to not specifying an encoding for a non-ASCII file. "
"[1]_"
msgstr ""

#: ../../pep-0597.rst:48
msgid ""
"Another example is ``logging.basicConfig(filename=\"log.txt\")``. Some "
"users might expect it to use UTF-8 by default, but the locale encoding is"
" actually what is used. [2]_"
msgstr ""

#: ../../pep-0597.rst:52
msgid ""
"Even Python experts may assume that the default encoding is UTF-8. This "
"creates bugs that only happen on Windows; see [3]_, [4]_, [5]_, and [6]_ "
"for example."
msgstr ""

#: ../../pep-0597.rst:56
msgid ""
"Emitting a warning when the ``encoding`` argument is omitted will help "
"find such mistakes."
msgstr ""

#: ../../pep-0597.rst:61
msgid "Explicit way to use locale-specific encoding"
msgstr ""

#: ../../pep-0597.rst:63
msgid "``open(filename)`` isn't explicit about which encoding is expected:"
msgstr ""

#: ../../pep-0597.rst:65
msgid ""
"If ASCII is assumed, this isn't a bug, but may result in decreased "
"performance on Windows, particularly with non-Latin-1 locale encodings"
msgstr ""

#: ../../pep-0597.rst:67
msgid "If UTF-8 is assumed, this may be a bug or a platform-specific script"
msgstr ""

#: ../../pep-0597.rst:68
msgid ""
"If the locale encoding is assumed, the behavior is as expected (but could"
" change if future versions of Python modify the default)"
msgstr ""

#: ../../pep-0597.rst:71
msgid "From this point of view, ``open(filename)`` is not readable code."
msgstr ""

#: ../../pep-0597.rst:73
msgid ""
"``encoding=locale.getpreferredencoding(False)`` can be used to specify "
"the locale encoding explicitly, but it is too long and easy to misuse "
"(e.g. one can forget to pass ``False`` as its argument)."
msgstr ""

#: ../../pep-0597.rst:77
msgid "This PEP provides an explicit way to specify the locale encoding."
msgstr ""

#: ../../pep-0597.rst:81
msgid "Prepare to change the default encoding to UTF-8"
msgstr ""

#: ../../pep-0597.rst:83
msgid ""
"Since UTF-8 has become the de-facto standard text encoding, we might "
"default to it for opening files in the future."
msgstr ""

#: ../../pep-0597.rst:86
msgid ""
"However, such a change will affect many applications and libraries. If we"
" start emitting ``DeprecationWarning`` everywhere the ``encoding`` "
"argument is omitted, it will be too noisy and painful."
msgstr ""

#: ../../pep-0597.rst:90
msgid ""
"Although this PEP doesn't propose changing the default encoding, it will "
"help enable that change by:"
msgstr ""

#: ../../pep-0597.rst:93
msgid ""
"Reducing the number of omitted ``encoding`` arguments in libraries before"
" we start emitting a ``DeprecationWarning`` by default."
msgstr ""

#: ../../pep-0597.rst:96
msgid ""
"Allowing users to pass ``encoding=\"locale\"`` to suppress the current "
"warning and any ``DeprecationWarning`` added in the future, as well as "
"retaining consistent behavior if later Python versions change the "
"default, ensuring support for any Python version >=3.10."
msgstr ""

#: ../../pep-0597.rst:103
msgid "Specification"
msgstr ""

#: ../../pep-0597.rst:106
msgid "``EncodingWarning``"
msgstr ""

#: ../../pep-0597.rst:108
msgid ""
"Add a new ``EncodingWarning`` warning class as a subclass of ``Warning``."
" It is emitted when the ``encoding`` argument is omitted and the default "
"locale-specific encoding is used."
msgstr ""

#: ../../pep-0597.rst:114
msgid "Options to enable the warning"
msgstr ""

#: ../../pep-0597.rst:116
msgid ""
"The ``-X warn_default_encoding`` option and the "
"``PYTHONWARNDEFAULTENCODING`` environment variable are added. They are "
"used to enable ``EncodingWarning``."
msgstr ""

#: ../../pep-0597.rst:120
msgid ""
"``sys.flags.warn_default_encoding`` is also added. The flag is true when "
"``EncodingWarning`` is enabled."
msgstr ""

#: ../../pep-0597.rst:123
msgid ""
"When the flag is set, ``io.TextIOWrapper()``, ``open()`` and other "
"modules using them will emit ``EncodingWarning`` when the ``encoding`` "
"argument is omitted."
msgstr ""

#: ../../pep-0597.rst:127
msgid ""
"Since ``EncodingWarning`` is a subclass of ``Warning``, they are shown by"
" default (if the ``warn_default_encoding`` flag is set), unlike "
"``DeprecationWarning``."
msgstr ""

#: ../../pep-0597.rst:133
msgid "``encoding=\"locale\"``"
msgstr ""

#: ../../pep-0597.rst:135
msgid ""
"``io.TextIOWrapper`` will accept ``\"locale\"`` as a valid argument to "
"``encoding``. It has the same meaning as the current ``encoding=None``, "
"except that ``io.TextIOWrapper`` doesn't emit ``EncodingWarning`` when "
"``encoding=\"locale\"`` is specified."
msgstr ""

#: ../../pep-0597.rst:142
msgid "``io.text_encoding()``"
msgstr ""

#: ../../pep-0597.rst:144
msgid ""
"``io.text_encoding()`` is a helper for functions with an "
"``encoding=None`` parameter that pass it to ``io.TextIOWrapper()`` or "
"``open()``."
msgstr ""

#: ../../pep-0597.rst:148
msgid "A pure Python implementation will look like this::"
msgstr ""

#: ../../pep-0597.rst:172
msgid "For example, ``pathlib.Path.read_text()`` can use it like this:"
msgstr ""

#: ../../pep-0597.rst:181
msgid ""
"By using ``io.text_encoding()``, ``EncodingWarning`` is emitted for the "
"caller of ``read_text()`` instead of ``read_text()`` itself."
msgstr ""

#: ../../pep-0597.rst:186
msgid "Affected standard library modules"
msgstr ""

#: ../../pep-0597.rst:188
msgid "Many standard library modules will be affected by this change."
msgstr ""

#: ../../pep-0597.rst:190
msgid ""
"Most APIs accepting ``encoding=None`` will use ``io.text_encoding()`` as "
"written in the previous section."
msgstr ""

#: ../../pep-0597.rst:193
msgid ""
"Where using the locale encoding as the default encoding is reasonable, "
"``encoding=\"locale\"`` will be used instead. For example, the "
"``subprocess`` module will use the locale encoding as the default for "
"pipes."
msgstr ""

#: ../../pep-0597.rst:198
msgid ""
"Many tests use ``open()`` without ``encoding`` specified to read ASCII "
"text files. They should be rewritten with ``encoding=\"ascii\"``."
msgstr ""

#: ../../pep-0597.rst:203
msgid "Rationale"
msgstr ""

#: ../../pep-0597.rst:206
msgid "Opt-in warning"
msgstr ""

#: ../../pep-0597.rst:208
msgid ""
"Although ``DeprecationWarning`` is suppressed by default, always emitting"
" ``DeprecationWarning`` when the ``encoding`` argument is omitted would "
"be too noisy."
msgstr ""

#: ../../pep-0597.rst:212
msgid "Noisy warnings may lead developers to dismiss the ``DeprecationWarning``."
msgstr ""

#: ../../pep-0597.rst:217
msgid "\"locale\" is not a codec alias"
msgstr ""

#: ../../pep-0597.rst:219
msgid ""
"We don't add \"locale\" as a codec alias because the locale can be "
"changed at runtime."
msgstr ""

#: ../../pep-0597.rst:222
msgid ""
"Additionally, ``TextIOWrapper`` checks ``os.device_encoding()`` when "
"``encoding=None``. This behavior cannot be implemented in a codec."
msgstr ""

#: ../../pep-0597.rst:228
msgid "Backward Compatibility"
msgstr ""

#: ../../pep-0597.rst:230
msgid ""
"The new warning is not emitted by default, so this PEP is 100% backwards-"
"compatible."
msgstr ""

#: ../../pep-0597.rst:235
msgid "Forward Compatibility"
msgstr ""

#: ../../pep-0597.rst:237
msgid ""
"Passing ``\"locale\"`` as the argument to ``encoding`` is not forward-"
"compatible. Code using it will not work on Python older than 3.10, and "
"will instead raise ``LookupError: unknown encoding: locale``."
msgstr ""

#: ../../pep-0597.rst:241
msgid ""
"Until developers can drop Python 3.9 support, ``EncodingWarning`` can "
"only be used for finding missing ``encoding=\"utf-8\"`` arguments."
msgstr ""

#: ../../pep-0597.rst:246
msgid "How to Teach This"
msgstr ""

#: ../../pep-0597.rst:249
msgid "For new users"
msgstr ""

#: ../../pep-0597.rst:251
msgid ""
"Since ``EncodingWarning`` is used to write cross-platform code, there is "
"no need to teach it to new users."
msgstr ""

#: ../../pep-0597.rst:254
msgid ""
"We can just recommend using UTF-8 for text files and using "
"``encoding=\"utf-8\"`` when opening them."
msgstr ""

#: ../../pep-0597.rst:259
msgid "For experienced users"
msgstr ""

#: ../../pep-0597.rst:261
msgid ""
"Using ``open(filename)`` to read text files encoded in UTF-8 is a common "
"mistake. It may not work on Windows because UTF-8 is not the default "
"encoding."
msgstr ""

#: ../../pep-0597.rst:265
msgid ""
"You can use ``-X warn_default_encoding`` or "
"``PYTHONWARNDEFAULTENCODING=1`` to find this type of mistake."
msgstr ""

#: ../../pep-0597.rst:268
msgid ""
"Omitting the ``encoding`` argument is not a bug when opening text files "
"encoded in the locale encoding, but ``encoding=\"locale\"`` is "
"recommended in Python 3.10 and later because it is more explicit."
msgstr ""

#: ../../pep-0597.rst:274
msgid "Reference Implementation"
msgstr ""

#: ../../pep-0597.rst:276
msgid "https://github.com/python/cpython/pull/19481"
msgstr ""

#: ../../pep-0597.rst:280
msgid "Discussions"
msgstr ""

#: ../../pep-0597.rst:282
msgid ""
"The latest discussion thread is: https://mail.python.org/archives/list"
"/python-dev@python.org/thread/SFYUP2TWD5JZ5KDLVSTZ44GWKVY4YNCV/"
msgstr ""

#: ../../pep-0597.rst:286
msgid "Why not implement this in linters?"
msgstr ""

#: ../../pep-0597.rst:288
msgid ""
"``encoding=\"locale\"`` and ``io.text_encoding()`` must be implemented in"
" Python."
msgstr ""

#: ../../pep-0597.rst:291
msgid ""
"It is difficult to find all callers of functions wrapping ``open()`` or "
"``TextIOWrapper()`` (see the ``io.text_encoding()`` section)."
msgstr ""

#: ../../pep-0597.rst:295
msgid "Many developers will not use the option."
msgstr ""

#: ../../pep-0597.rst:297
msgid ""
"Some will, and report the warnings to libraries they use, so the option "
"is worth it even if many developers don't enable it."
msgstr ""

#: ../../pep-0597.rst:300
msgid ""
"For example, I found [7]_ and [8]_ by running ``pip install -U pip``, and"
" [9]_ by running ``tox`` with the reference implementation. This "
"demonstrates how this option can be used to find potential issues."
msgstr ""

#: ../../pep-0597.rst:307
msgid "References"
msgstr ""

#: ../../pep-0597.rst:309
msgid ""
"\"Packages can't be installed when encoding is not UTF-8\" "
"(https://github.com/methane/pep597-pypi-ascii)"
msgstr ""

#: ../../pep-0597.rst:312
msgid ""
"\"Logging - Inconsistent behaviour when handling unicode\" "
"(https://bugs.python.org/issue37111)"
msgstr ""

#: ../../pep-0597.rst:315
msgid ""
"Packaging tutorial in packaging.python.org didn't specify encoding to "
"read a ``README.md`` "
"(https://github.com/pypa/packaging.python.org/pull/682)"
msgstr ""

#: ../../pep-0597.rst:319
msgid ""
"``json.tool`` had used locale encoding to read JSON files. "
"(https://bugs.python.org/issue33684)"
msgstr ""

#: ../../pep-0597.rst:322
msgid ""
"site: Potential UnicodeDecodeError when handling pth file "
"(https://bugs.python.org/issue33684)"
msgstr ""

#: ../../pep-0597.rst:325
msgid ""
"pypa/pip: \"Installing packages fails if Python 3 installed into path "
"with non-ASCII characters\" (https://github.com/pypa/pip/issues/9054)"
msgstr ""

#: ../../pep-0597.rst:329
msgid ""
"\"site: Potential UnicodeDecodeError when handling pth file\" "
"(https://bugs.python.org/issue43214)"
msgstr ""

#: ../../pep-0597.rst:332
msgid ""
"\"[pypa/pip] Use ``encoding`` option or binary mode for open()\" "
"(https://github.com/pypa/pip/pull/9608)"
msgstr ""

#: ../../pep-0597.rst:335
msgid ""
"\"Possible UnicodeError caused by missing encoding=\"utf-8\"\" "
"(https://github.com/tox-dev/tox/issues/1908)"
msgstr ""

#: ../../pep-0597.rst:340
msgid "Copyright"
msgstr ""

#: ../../pep-0597.rst:342
msgid ""
"This document is placed in the public domain or under the "
"CC0-1.0-Universal license, whichever is more permissive."
msgstr ""

