# SOME DESCRIPTIVE TITLE.
# Copyright (C)
# This file is distributed under the same license as the PEPs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PEPs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-11-12 17:38+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../pep-0226.txt
msgid "PEP"
msgstr ""

#: ../../pep-0226.txt:1
msgid "226"
msgstr ""

#: ../../pep-0226.txt
msgid "Title"
msgstr ""

#: ../../pep-0226.txt:2
msgid "Python 2.1 Release Schedule"
msgstr ""

#: ../../pep-0226.txt
msgid "Author"
msgstr ""

#: ../../pep-0226.txt:5
msgid "Jeremy Hylton <jeremy@alum.mit.edu>"
msgstr ""

#: ../../pep-0226.txt
msgid "Status"
msgstr ""

#: ../../pep-0226.txt:6
msgid "Final"
msgstr ""

#: ../../pep-0226.txt
msgid "Type"
msgstr ""

#: ../../pep-0226.txt:7
msgid "Informational"
msgstr ""

#: ../../pep-0226.txt
msgid "Created"
msgstr ""

#: ../../pep-0226.txt:9
msgid "16-Oct-2000"
msgstr ""

#: ../../pep-0226.txt
msgid "Python-Version"
msgstr ""

#: ../../pep-0226.txt:10
msgid "2.1"
msgstr ""

#: ../../pep-0226.txt
msgid "Post-History"
msgstr ""

#: ../../pep-0226.txt:15
msgid "Abstract"
msgstr ""

#: ../../pep-0226.txt:17
msgid ""
"This document describes the post Python 2.0 development and release "
"schedule.  According to this schedule, Python 2.1 will be released in "
"April of 2001.  The schedule primarily concerns itself with PEP-size "
"items.  Small bug fixes and changes will occur up until the first beta "
"release."
msgstr ""

#: ../../pep-0226.txt:25
msgid "Release Schedule"
msgstr ""

#: ../../pep-0226.txt:27
msgid "Tentative future release dates"
msgstr ""

#: ../../pep-0226.txt:29
msgid "[bugfix release dates go here]"
msgstr ""

#: ../../pep-0226.txt:31
msgid "Past release dates:"
msgstr ""

#: ../../pep-0226.txt:33
msgid "17-Apr-2001: 2.1 final release"
msgstr ""

#: ../../pep-0226.txt:34
msgid "15-Apr-2001: 2.1 release candidate 2"
msgstr ""

#: ../../pep-0226.txt:35
msgid "13-Apr-2001: 2.1 release candidate 1"
msgstr ""

#: ../../pep-0226.txt:36
msgid "23-Mar-2001: Python 2.1 beta 2 release"
msgstr ""

#: ../../pep-0226.txt:37
msgid "02-Mar-2001: First 2.1 beta release"
msgstr ""

#: ../../pep-0226.txt:38
msgid "02-Feb-2001: Python 2.1 alpha 2 release"
msgstr ""

#: ../../pep-0226.txt:39
msgid "22-Jan-2001: Python 2.1 alpha 1 release"
msgstr ""

#: ../../pep-0226.txt:40
msgid "16-Oct-2000: Python 2.0 final release"
msgstr ""

#: ../../pep-0226.txt:44
msgid "Open issues for Python 2.0 beta 2"
msgstr ""

#: ../../pep-0226.txt:46
msgid "Add a default unit testing framework to the standard library."
msgstr ""

#: ../../pep-0226.txt:50
msgid "Guidelines for making changes for Python 2.1"
msgstr ""

#: ../../pep-0226.txt:52
msgid ""
"The guidelines and schedule will be revised based on discussion in the "
"python-dev@python.org mailing list."
msgstr ""

#: ../../pep-0226.txt:55
msgid ""
"The PEP system was instituted late in the Python 2.0 development cycle "
"and many changes did not follow the process described in PEP 1. The "
"development process for 2.1, however, will follow the PEP process as "
"documented."
msgstr ""

#: ../../pep-0226.txt:60
msgid ""
"The first eight weeks following 2.0 final will be the design and review "
"phase.  By the end of this period, any PEP that is proposed for 2.1 "
"should be ready for review.  This means that the PEP is written and "
"discussion has occurred on the python-dev@python.org and python-"
"list@python.org mailing lists."
msgstr ""

#: ../../pep-0226.txt:66
msgid ""
"The next six weeks will be spent reviewing the PEPs and implementing and "
"testing the accepted PEPs.  When this period stops, we will end "
"consideration of any incomplete PEPs.  Near the end of this period, there"
" will be a feature freeze where any small features not worthy of a PEP "
"will not be accepted."
msgstr ""

#: ../../pep-0226.txt:72
msgid ""
"Before the final release, we will have six weeks of beta testing and a "
"release candidate or two."
msgstr ""

#: ../../pep-0226.txt:77
msgid "General guidelines for submitting patches and making changes"
msgstr ""

#: ../../pep-0226.txt:79
msgid ""
"Use good sense when committing changes.  You should know what we mean by "
"good sense or we wouldn't have given you commit privileges <0.5 wink>.  "
"Some specific examples of good sense include:"
msgstr ""

#: ../../pep-0226.txt:83
msgid "Do whatever the dictator tells you."
msgstr ""

#: ../../pep-0226.txt:85
msgid ""
"Discuss any controversial changes on python-dev first.  If you get a lot "
"of +1 votes and no -1 votes, make the change.  If you get a some -1 "
"votes, think twice; consider asking Guido what he thinks."
msgstr ""

#: ../../pep-0226.txt:90
msgid ""
"If the change is to code you contributed, it probably makes sense for you"
" to fix it."
msgstr ""

#: ../../pep-0226.txt:93
msgid ""
"If the change affects code someone else wrote, it probably makes sense to"
" ask him or her first."
msgstr ""

#: ../../pep-0226.txt:96
msgid ""
"You can use the SourceForge (SF) Patch Manager to submit a patch and "
"assign it to someone for review."
msgstr ""

#: ../../pep-0226.txt:99
msgid ""
"Any significant new feature must be described in a PEP and approved "
"before it is checked in."
msgstr ""

#: ../../pep-0226.txt:102
msgid ""
"Any significant code addition, such as a new module or large patch, must "
"include test cases for the regression test and documentation.  A patch "
"should not be checked in until the tests and documentation are ready."
msgstr ""

#: ../../pep-0226.txt:107
msgid ""
"If you fix a bug, you should write a test case that would have caught the"
" bug."
msgstr ""

#: ../../pep-0226.txt:110
msgid ""
"If you commit a patch from the SF Patch Manager or fix a bug from the "
"Jitterbug database, be sure to reference the patch/bug number in the CVS "
"log message.  Also be sure to change the status in the patch manager or "
"bug database (if you have access to the bug database)."
msgstr ""

#: ../../pep-0226.txt:116
msgid ""
"It is not acceptable for any checked in code to cause the regression test"
" to fail.  If a checkin causes a failure, it must be fixed within 24 "
"hours or it will be backed out."
msgstr ""

#: ../../pep-0226.txt:120
msgid ""
"All contributed C code must be ANSI C.  If possible check it with two "
"different compilers, e.g. gcc and MSVC."
msgstr ""

#: ../../pep-0226.txt:123
msgid ""
"All contributed Python code must follow Guido's Python style guide.  "
"http://www.python.org/doc/essays/styleguide.html"
msgstr ""

#: ../../pep-0226.txt:126
msgid ""
"It is understood that any code contributed will be released under an Open"
" Source license.  Do not contribute code if it can't be released this "
"way."
msgstr ""

