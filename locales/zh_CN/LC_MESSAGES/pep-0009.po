# SOME DESCRIPTIVE TITLE.
# Copyright (C)
# This file is distributed under the same license as the PEPs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PEPs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-11-12 17:38+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../pep-0009.txt
msgid "PEP"
msgstr ""

#: ../../pep-0009.txt:1
msgid "9"
msgstr ""

#: ../../pep-0009.txt
msgid "Title"
msgstr ""

#: ../../pep-0009.txt:2
msgid "Sample Plaintext PEP Template"
msgstr ""

#: ../../pep-0009.txt
msgid "Author"
msgstr ""

#: ../../pep-0009.txt:5
msgid "Barry Warsaw <barry@python.org>"
msgstr ""

#: ../../pep-0009.txt
msgid "Status"
msgstr ""

#: ../../pep-0009.txt:6
msgid "Withdrawn"
msgstr ""

#: ../../pep-0009.txt
msgid "Type"
msgstr ""

#: ../../pep-0009.txt:7
msgid "Process"
msgstr ""

#: ../../pep-0009.txt
msgid "Created"
msgstr ""

#: ../../pep-0009.txt:9
msgid "14-Aug-2001"
msgstr ""

#: ../../pep-0009.txt
msgid "Post-History"
msgstr ""

#: ../../pep-0009.txt
msgid "Resolution"
msgstr ""

#: ../../pep-0009.txt:11
msgid "https://mail.python.org/mailman/private/peps/2016-January/001165.html"
msgstr ""

#: ../../pep-0009.txt:227
msgid "::"
msgstr ""

#: ../../pep-0009.txt:14
msgid "Update"
msgstr ""

#: ../../pep-0009.txt:16
msgid ""
"As of 05-Jan-2016, this PEP is officially deprecated and replaced by PEP "
"12.  All PEPs should now use the reStructuredText format described by PEP"
" 12, and plaintext PEPs will no longer be accepted."
msgstr ""

#: ../../pep-0009.txt:21
msgid "Abstract"
msgstr ""

#: ../../pep-0009.txt:23
msgid ""
"This PEP provides a boilerplate or sample template for creating your own "
"plaintext PEPs.  In conjunction with the content guidelines in PEP 1 [1],"
" this should make it easy for you to conform your own PEPs to the format "
"outlined below."
msgstr ""

#: ../../pep-0009.txt:28
msgid ""
"Note: if you are reading this PEP via the web, you should first grab the "
"plaintext source of this PEP in order to complete the steps below.  DO "
"NOT USE THE HTML FILE AS YOUR TEMPLATE!"
msgstr ""

#: ../../pep-0009.txt:32
msgid ""
"To get the source this (or any) PEP, look at the top of the HTML page and"
" click on the date & time on the \"Last-Modified\" line.  It is a link to"
" the source text in the Python repository."
msgstr ""

#: ../../pep-0009.txt:36
msgid ""
"If you would prefer to use lightweight markup in your PEP, please see PEP"
" 12, \"Sample reStructuredText PEP Template\" [2]."
msgstr ""

#: ../../pep-0009.txt:40
msgid "Rationale"
msgstr ""

#: ../../pep-0009.txt:42
msgid ""
"PEP submissions come in a wide variety of forms, not all adhering to the "
"format guidelines set forth below.  Use this template, in conjunction "
"with the content guidelines in PEP 1, to ensure that your PEP submission "
"won't get automatically rejected because of form."
msgstr ""

#: ../../pep-0009.txt:49
msgid "How to Use This Template"
msgstr ""

#: ../../pep-0009.txt:51
msgid ""
"To use this template you must first decide whether your PEP is going to "
"be an Informational or Standards Track PEP.  Most PEPs are Standards "
"Track because they propose a new feature for the Python language or "
"standard library.  When in doubt, read PEP 1 for details or contact the "
"PEP editors <peps@python.org>."
msgstr ""

#: ../../pep-0009.txt:57
msgid ""
"Once you've decided which type of PEP yours is going to be, follow the "
"directions below."
msgstr ""

#: ../../pep-0009.txt:60
msgid ""
"Make a copy of this file (.txt file, not HTML!) and perform the following"
" edits."
msgstr ""

#: ../../pep-0009.txt:63
msgid ""
"Replace the \"PEP: 9\" header with \"PEP: XXX\" since you don't yet have "
"a PEP number assignment."
msgstr ""

#: ../../pep-0009.txt:66
msgid "Change the Title header to the title of your PEP."
msgstr ""

#: ../../pep-0009.txt:68
msgid ""
"Leave the Version and Last-Modified headers alone; we'll take care of "
"those when we check your PEP into Python's Subversion repository.  These "
"headers consist of keywords (\"Revision\" and \"Date\" enclosed in "
"\"$\"-signs) which are automatically expanded by the repository.  Please "
"do not edit the expanded date or revision text."
msgstr ""

#: ../../pep-0009.txt:75
msgid ""
"Change the Author header to include your name, and optionally your email "
"address.  Be sure to follow the format carefully: your name must appear "
"first, and it must not be contained in parentheses.  Your email address "
"may appear second (or it can be omitted) and if it appears, it must "
"appear in angle brackets. It is okay to obfuscate your email address."
msgstr ""

#: ../../pep-0009.txt:82
msgid ""
"If there is a mailing list for discussion of your new feature, add a "
"Discussions-To header right after the Author header.  You should not add "
"a Discussions-To header if the mailing list to be used is either python-"
"list@python.org or python-dev@python.org, or if discussions should be "
"sent to you directly.  Most Informational PEPs don't have a Discussions-"
"To header."
msgstr ""

#: ../../pep-0009.txt:89
msgid "Change the Status header to \"Draft\"."
msgstr ""

#: ../../pep-0009.txt:91
msgid "For Standards Track PEPs, change the Type header to \"Standards Track\"."
msgstr ""

#: ../../pep-0009.txt:94
msgid "For Informational PEPs, change the Type header to \"Informational\"."
msgstr ""

#: ../../pep-0009.txt:97
msgid ""
"For Standards Track PEPs, if your feature depends on the acceptance of "
"some other currently in-development PEP, add a Requires header right "
"after the Type header.  The value should be the PEP number of the PEP "
"yours depends on.  Don't add this header if your dependent feature is "
"described in a Final PEP."
msgstr ""

#: ../../pep-0009.txt:103
msgid ""
"Change the Created header to today's date.  Be sure to follow the format "
"carefully: it must be in dd-mmm-yyyy format, where the mmm is the 3 "
"English letter month abbreviation, e.g. one of Jan, Feb, Mar, Apr, May, "
"Jun, Jul, Aug, Sep, Oct, Nov, Dec."
msgstr ""

#: ../../pep-0009.txt:108
msgid ""
"For Standards Track PEPs, after the Created header, add a Python-Version "
"header and set the value to the next planned version of Python, i.e. the "
"one your new feature will hopefully make its first appearance in.  Do not"
" use an alpha or beta release designation here.  Thus, if the last "
"version of Python was 2.2 alpha 1 and you're hoping to get your new "
"feature into Python 2.2, set the header to:"
msgstr ""

#: ../../pep-0009.txt:116
msgid "Python-Version: 2.2"
msgstr ""

#: ../../pep-0009.txt:118
msgid ""
"Leave Post-History alone for now; you'll add dates to this header each "
"time you post your PEP to python-list@python.org or python-"
"dev@python.org.  E.g. if you posted your PEP to the lists on August 14, "
"2001 and September 3, 2001, the Post-History header would look like:"
msgstr ""

#: ../../pep-0009.txt:124
msgid "Post-History: 14-Aug-2001, 03-Sept-2001"
msgstr ""

#: ../../pep-0009.txt:126
msgid ""
"You must manually add new dates and check them in.  If you don't have "
"check-in privileges, send your changes to the PEP editor."
msgstr ""

#: ../../pep-0009.txt:129
msgid ""
"Add a Replaces header if your PEP obsoletes an earlier PEP.  The value of"
" this header is the number of the PEP that your new PEP is replacing.  "
"Only add this header if the older PEP is in \"final\" form, i.e. is "
"either Accepted, Final, or Rejected.  You aren't replacing an older open "
"PEP if you're submitting a competing idea."
msgstr ""

#: ../../pep-0009.txt:136
msgid ""
"Now write your Abstract, Rationale, and other content for your PEP, "
"replacing all this gobbledygook with your own text. Be sure to adhere to "
"the format guidelines below, specifically on the prohibition of tab "
"characters and the indentation requirements."
msgstr ""

#: ../../pep-0009.txt:141
msgid ""
"Update your References and Copyright section.  Usually you'll place your "
"PEP into the public domain, in which case just leave the \"Copyright\" "
"section alone.  Alternatively, you can use the Open Publication "
"License[3], but public domain is still strongly preferred."
msgstr ""

#: ../../pep-0009.txt:147
msgid ""
"Leave the little Emacs turd at the end of this file alone, including the "
"formfeed character (\"^L\", or \\f)."
msgstr ""

#: ../../pep-0009.txt:150
msgid ""
"Send your PEP submission to the PEP editors (peps@python.org), along with"
" $100k in unmarked pennies.  (Just kidding, I wanted to see if you were "
"still awake. :)"
msgstr ""

#: ../../pep-0009.txt:155
msgid "Plaintext PEP Formatting Requirements"
msgstr ""

#: ../../pep-0009.txt:157
msgid ""
"PEP headings must begin in column zero and the initial letter of each "
"word must be capitalized as in book titles.  Acronyms should be in all "
"capitals.  The body of each section must be indented 4 spaces.  Code "
"samples inside body sections should be indented a further 4 spaces, and "
"other indentation can be used as required to make the text readable.  You"
" must use two blank lines between the last line of a section's body and "
"the next section heading."
msgstr ""

#: ../../pep-0009.txt:165
msgid ""
"You must adhere to the Emacs convention of adding two spaces at the end "
"of every sentence.  You should fill your paragraphs to column 70, but "
"under no circumstances should your lines extend past column 79.  If your "
"code samples spill over column 79, you should rewrite them."
msgstr ""

#: ../../pep-0009.txt:171
msgid ""
"Tab characters must never appear in the document at all.  A PEP should "
"include the standard Emacs stanza included by example at the bottom of "
"this PEP."
msgstr ""

#: ../../pep-0009.txt:175
msgid ""
"When referencing an external web page in the body of a PEP, you should "
"include the title of the page in the text, with a footnote reference to "
"the URL.  Do not include the URL in the body text of the PEP.  E.g."
msgstr ""

#: ../../pep-0009.txt:180
msgid ""
"Refer to the Python Language web site [1] for more details. ... [1] "
"http://www.python.org"
msgstr ""

#: ../../pep-0009.txt:184
msgid ""
"When referring to another PEP, include the PEP number in the body text, "
"such as \"PEP 1\".  The title may optionally appear.  Add a footnote "
"reference, a number in square brackets.  The footnote body should include"
" the PEP's title and author.  It may optionally include the explicit URL "
"on a separate line, but only in the References section.  Note that the "
"pep2html.py script will calculate URLs automatically.  For example:"
msgstr ""

#: ../../pep-0009.txt:192
msgid "... Refer to PEP 1 [7] for more information about PEP style ..."
msgstr ""

#: ../../pep-0009.txt:196 ../../pep-0009.txt:211
msgid "References"
msgstr ""

#: ../../pep-0009.txt:199
msgid "[7] PEP 1, PEP Purpose and Guidelines, Warsaw, Hylton"
msgstr ""

#: ../../pep-0009.txt:199 ../../pep-0009.txt:214
msgid "http://www.python.org/dev/peps/pep-0001/"
msgstr ""

#: ../../pep-0009.txt:201
msgid ""
"If you decide to provide an explicit URL for a PEP, please use this as "
"the URL template:"
msgstr ""

#: ../../pep-0009.txt:204
msgid "http://www.python.org/dev/peps/pep-xxxx/"
msgstr ""

#: ../../pep-0009.txt:206
msgid ""
"PEP numbers in URLs must be padded with zeros from the left, so as to be "
"exactly 4 characters wide, however PEP numbers in the text are never "
"padded."
msgstr ""

#: ../../pep-0009.txt:214
msgid "[1] PEP 1, PEP Purpose and Guidelines, Warsaw, Hylton"
msgstr ""

#: ../../pep-0009.txt:217
msgid "[2] PEP 12, Sample reStructuredText PEP Template, Goodger, Warsaw"
msgstr ""

#: ../../pep-0009.txt:217
msgid "http://www.python.org/dev/peps/pep-0012/"
msgstr ""

#: ../../pep-0009.txt:219
msgid "[3] http://www.opencontent.org/openpub/"
msgstr ""

#: ../../pep-0009.txt:223
msgid "Copyright"
msgstr ""

#: ../../pep-0009.txt:225
msgid "This document has been placed in the public domain."
msgstr ""

#: ../../pep-0009.txt:229
msgid ""
"Local Variables: mode: indented-text indent-tabs-mode: nil sentence-end-"
"double-space: t fill-column: 70 coding: utf-8 End:"
msgstr ""

