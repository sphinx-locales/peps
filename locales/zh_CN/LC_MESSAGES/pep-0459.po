# SOME DESCRIPTIVE TITLE.
# Copyright (C)
# This file is distributed under the same license as the PEPs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PEPs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-11-12 17:38+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../pep-0459.txt
msgid "PEP"
msgstr ""

#: ../../pep-0459.txt:1
msgid "459"
msgstr ""

#: ../../pep-0459.txt
msgid "Title"
msgstr ""

#: ../../pep-0459.txt:2
msgid "Standard Metadata Extensions for Python Software Packages"
msgstr ""

#: ../../pep-0459.txt
msgid "Author"
msgstr ""

#: ../../pep-0459.txt:5 ../../pep-0459.txt:6
msgid "Nick Coghlan <ncoghlan@gmail.com>"
msgstr ""

#: ../../pep-0459.txt
msgid "BDFL-Delegate"
msgstr ""

#: ../../pep-0459.txt
msgid "Discussions-To"
msgstr ""

#: ../../pep-0459.txt:7
msgid "Distutils SIG <distutils-sig@python.org>"
msgstr ""

#: ../../pep-0459.txt
msgid "Status"
msgstr ""

#: ../../pep-0459.txt:8
msgid "Withdrawn"
msgstr ""

#: ../../pep-0459.txt
msgid "Type"
msgstr ""

#: ../../pep-0459.txt:9
msgid "Standards Track"
msgstr ""

#: ../../pep-0459.txt
msgid "Requires"
msgstr ""

#: ../../pep-0459.txt:11
msgid "426"
msgstr ""

#: ../../pep-0459.txt
msgid "Created"
msgstr ""

#: ../../pep-0459.txt:12
msgid "11-Nov-2013"
msgstr ""

#: ../../pep-0459.txt
msgid "Post-History"
msgstr ""

#: ../../pep-0459.txt:13
msgid "21 Dec 2013"
msgstr ""

#: ../../pep-0459.txt:17
msgid "PEP Withdrawal"
msgstr ""

#: ../../pep-0459.txt:19
msgid ""
"This PEP depends on PEP 426, which has itself been withdrawn. See the PEP"
" Withdrawal section in that PEP for details."
msgstr ""

#: ../../pep-0459.txt:22
msgid ""
"In the meantime, metadata extensions will continue to be handled as they "
"have been for past examples like ``entry_points.txt``: as additional "
"files installed into metadata directories alongside the main `METADATA` "
"file."
msgstr ""

#: ../../pep-0459.txt:28
msgid "Abstract"
msgstr ""

#: ../../pep-0459.txt:30
msgid "This PEP describes several standard extensions to the Python metadata."
msgstr ""

#: ../../pep-0459.txt:32
msgid ""
"Like all metadata extensions, each standard extension format is "
"independently versioned. Changing any of the formats requires an update "
"to this PEP, but does not require an update to the core packaging "
"metadata."
msgstr ""

#: ../../pep-0459.txt:38
msgid "Standard Extension Namespace"
msgstr ""

#: ../../pep-0459.txt:40
msgid ""
"The ``python`` project on the Python Package Index refers to the CPython "
"reference interpreter. This namespace is used as the namespace for the "
"standard metadata extensions."
msgstr ""

#: ../../pep-0459.txt:44
msgid "The currently defined standard extensions are:"
msgstr ""

#: ../../pep-0459.txt:46
msgid "``python.details``"
msgstr ""

#: ../../pep-0459.txt:47
msgid "``python.project``"
msgstr ""

#: ../../pep-0459.txt:48
msgid "``python.integrator``"
msgstr ""

#: ../../pep-0459.txt:49
msgid "``python.exports``"
msgstr ""

#: ../../pep-0459.txt:50
msgid "``python.commands``"
msgstr ""

#: ../../pep-0459.txt:51
msgid "``python.constraints``"
msgstr ""

#: ../../pep-0459.txt:53
msgid ""
"All standard extensions are currently at version ``1.0``, and thus the "
"``extension_metadata`` field may be omitted without losing access to any "
"functionality."
msgstr ""

#: ../../pep-0459.txt:59
msgid "The ``python.details`` extension"
msgstr ""

#: ../../pep-0459.txt:61
msgid ""
"The ``python.details`` extension allows for more information to be "
"provided regarding the software distribution."
msgstr ""

#: ../../pep-0459.txt:64
msgid "The ``python.details`` extension contains four custom subfields:"
msgstr ""

#: ../../pep-0459.txt:66
msgid "``license``: the copyright license for the distribution"
msgstr ""

#: ../../pep-0459.txt:67
msgid "``keywords``: package index keywords for the distribution"
msgstr ""

#: ../../pep-0459.txt:68
msgid "``classifiers``: package index Trove classifiers for the distribution"
msgstr ""

#: ../../pep-0459.txt:69
msgid "``document_names``: the names of additional metadata files"
msgstr ""

#: ../../pep-0459.txt:71
msgid ""
"All of these fields are optional. Automated tools MUST operate correctly "
"if a distribution does not provide them, including failing cleanly when "
"an operation depending on one of these fields is requested."
msgstr ""

#: ../../pep-0459.txt:77
msgid "License"
msgstr ""

#: ../../pep-0459.txt:79
msgid "A short string summarising the license used for this distribution."
msgstr ""

#: ../../pep-0459.txt:81
msgid ""
"Note that distributions that provide this field should still specify any "
"applicable license Trove classifiers in the `Classifiers`_ field. Even "
"when an appropriate Trove classifier is available, the license summary "
"can be a good way to specify a particular version of that license, or to "
"indicate any variations or exception to the license."
msgstr ""

#: ../../pep-0459.txt:87
msgid ""
"This field SHOULD contain fewer than 512 characters and MUST contain "
"fewer than 2048."
msgstr ""

#: ../../pep-0459.txt:90
msgid "This field SHOULD NOT contain any line breaks."
msgstr ""

#: ../../pep-0459.txt:92
msgid ""
"The full license text SHOULD be included as a separate file in the source"
" archive for the distribution. See `Document names`_ for details."
msgstr ""

#: ../../pep-0459.txt:95 ../../pep-0459.txt:106 ../../pep-0459.txt:117
#: ../../pep-0459.txt:165 ../../pep-0459.txt:231 ../../pep-0459.txt:259
#: ../../pep-0459.txt:285 ../../pep-0459.txt:396 ../../pep-0459.txt:430
#: ../../pep-0459.txt:461 ../../pep-0459.txt:510 ../../pep-0459.txt:540
msgid "Example::"
msgstr ""

#: ../../pep-0459.txt:101
msgid "Keywords"
msgstr ""

#: ../../pep-0459.txt:103
msgid ""
"A list of additional keywords to be used to assist searching for the "
"distribution in a larger catalog."
msgstr ""

#: ../../pep-0459.txt:112
msgid "Classifiers"
msgstr ""

#: ../../pep-0459.txt:114
msgid ""
"A list of strings, with each giving a single classification value for the"
" distribution.  Classifiers are described in PEP 301 [2]."
msgstr ""

#: ../../pep-0459.txt:127
msgid "Document names"
msgstr ""

#: ../../pep-0459.txt:129
msgid ""
"Filenames for supporting documents included in the distribution's ``dist-"
"info`` metadata directory."
msgstr ""

#: ../../pep-0459.txt:132
msgid "The following supporting documents can be named:"
msgstr ""

#: ../../pep-0459.txt:134
msgid "``description``: a file containing a long description of the distribution"
msgstr ""

#: ../../pep-0459.txt:135
msgid "``license``: a file with the full text of the distribution's license"
msgstr ""

#: ../../pep-0459.txt:136
msgid "``changelog``: a file describing changes made to the distribution"
msgstr ""

#: ../../pep-0459.txt:138
msgid ""
"Supporting documents MUST be included directly in the ``dist-info`` "
"directory. Directory separators are NOT permitted in document names."
msgstr ""

#: ../../pep-0459.txt:141
msgid ""
"The markup format (if any) for the file is indicated by the file "
"extension. This allows index servers and other automated tools to render "
"included text documents correctly and provide feedback on rendering "
"errors, rather than having to guess the intended format."
msgstr ""

#: ../../pep-0459.txt:146
msgid ""
"If the filename has no extension, or the extension is not recognised, the"
" default rendering format MUST be plain text."
msgstr ""

#: ../../pep-0459.txt:149
msgid ""
"The following markup renderers SHOULD be used for the specified file "
"extensions:"
msgstr ""

#: ../../pep-0459.txt:152
msgid "Plain text: ``.txt``, no extension, unknown extension"
msgstr ""

#: ../../pep-0459.txt:153
msgid "reStructured Text: ``.rst``"
msgstr ""

#: ../../pep-0459.txt:154
msgid "Markdown: ``.md``"
msgstr ""

#: ../../pep-0459.txt:155
msgid "AsciiDoc: ``.adoc``, ``.asc``, ``.asciidoc``"
msgstr ""

#: ../../pep-0459.txt:156
msgid "HTML: ``.html``, ``.htm``"
msgstr ""

#: ../../pep-0459.txt:158
msgid ""
"Automated tools MAY render one or more of the specified formats as plain "
"text and MAY render other markup formats beyond those listed."
msgstr ""

#: ../../pep-0459.txt:161
msgid ""
"Automated tools SHOULD NOT make any assumptions regarding the maximum "
"length of supporting document content, except as necessary to protect the"
" integrity of a service."
msgstr ""

#: ../../pep-0459.txt:175
msgid "The ``python.project`` extension"
msgstr ""

#: ../../pep-0459.txt:177
msgid ""
"The ``python.project`` extension allows for more information to be "
"provided regarding the creation and maintenance of the distribution."
msgstr ""

#: ../../pep-0459.txt:180
msgid "The ``python.project`` extension contains three custom subfields:"
msgstr ""

#: ../../pep-0459.txt:182
msgid "``contacts``: key contact points for the distribution"
msgstr ""

#: ../../pep-0459.txt:183
msgid "``contributors``: other contributors to the distribution"
msgstr ""

#: ../../pep-0459.txt:184
msgid "``project_urls``: relevant URLs for the distribution"
msgstr ""

#: ../../pep-0459.txt:188
msgid "Contact information"
msgstr ""

#: ../../pep-0459.txt:190
msgid ""
"Details on individuals and organisations are recorded as mappings with "
"the following subfields:"
msgstr ""

#: ../../pep-0459.txt:193
msgid "``name``: the name of an individual or group"
msgstr ""

#: ../../pep-0459.txt:194
msgid "``email``: an email address (this may be a mailing list)"
msgstr ""

#: ../../pep-0459.txt:195
msgid "``url``: a URL (such as a profile page on a source code hosting service)"
msgstr ""

#: ../../pep-0459.txt:196
msgid "``role``: one of ``\"author\"``, ``\"maintainer\"`` or ``\"contributor\"``"
msgstr ""

#: ../../pep-0459.txt:198
msgid "The ``name`` subfield is required, the other subfields are optional."
msgstr ""

#: ../../pep-0459.txt:200
msgid "If no specific role is stated, the default is ``contributor``."
msgstr ""

#: ../../pep-0459.txt:202
msgid ""
"Email addresses must be in the form ``local-part@domain`` where the "
"local-part may be up to 64 characters long and the entire email address "
"contains no more than 254 characters. The formal specification of the "
"format is in RFC 5322 (sections 3.2.3 and 3.4.1) and RFC 5321, with a "
"more readable form given in the informational RFC 3696 and the associated"
" errata."
msgstr ""

#: ../../pep-0459.txt:208
msgid "The defined contributor roles are as follows:"
msgstr ""

#: ../../pep-0459.txt:210
msgid "``author``: the original creator of a distribution"
msgstr ""

#: ../../pep-0459.txt:211
msgid ""
"``maintainer``: the current lead contributor for a distribution, when "
"they are not the original creator"
msgstr ""

#: ../../pep-0459.txt:213
msgid ""
"``contributor``: any other individuals or organizations involved in the "
"creation of the distribution"
msgstr ""

#: ../../pep-0459.txt:216
msgid ""
"Contact and contributor metadata is optional. Automated tools MUST "
"operate correctly if a distribution does not provide it, including "
"failing cleanly when an operation depending on one of these fields is "
"requested."
msgstr ""

#: ../../pep-0459.txt:222
msgid "Contacts"
msgstr ""

#: ../../pep-0459.txt:224
msgid ""
"A list of contributor entries giving the recommended contact points for "
"getting more information about the project."
msgstr ""

#: ../../pep-0459.txt:227
msgid ""
"The example below would be suitable for a project that was in the process"
" of handing over from the original author to a new lead maintainer, while"
" operating as part of a larger development group."
msgstr ""

#: ../../pep-0459.txt:253
msgid "Contributors"
msgstr ""

#: ../../pep-0459.txt:255
msgid ""
"A list of contributor entries for other contributors not already listed "
"as current project points of contact. The subfields within the list "
"elements are the same as those for the main contact field."
msgstr ""

#: ../../pep-0459.txt:272
msgid "Project URLs"
msgstr ""

#: ../../pep-0459.txt:274
msgid ""
"A mapping of arbitrary text labels to additional URLs relevant to the "
"project."
msgstr ""

#: ../../pep-0459.txt:277
msgid ""
"While projects are free to choose their own labels and specific URLs, it "
"is RECOMMENDED that home page, source control, issue tracker and "
"documentation links be provided using the labels in the example below."
msgstr ""

#: ../../pep-0459.txt:281
msgid ""
"URL labels MUST be treated as case insensitive by automated tools, but "
"they are not required to be valid Python identifiers. Any legal JSON "
"string is permitted as a URL label."
msgstr ""

#: ../../pep-0459.txt:296
msgid "The ``python.integrator`` extension"
msgstr ""

#: ../../pep-0459.txt:298
msgid ""
"Structurally, this extension is largely identical to the "
"``python.project`` extension (the extension name is the only difference)."
msgstr ""

#: ../../pep-0459.txt:301
msgid ""
"However, where the ``project`` metadata refers to the upstream creators "
"of the software, the ``integrator`` metadata refers to the downstream "
"redistributor of a modified version."
msgstr ""

#: ../../pep-0459.txt:305
msgid ""
"If the software is being redistributed unmodified, then typically this "
"extension will not be used. However, if the software has been patched "
"(for example, backporting compatible fixes from a later version, or "
"addressing a platform compatibility issue), then this extension SHOULD be"
" used, and a local version label added to the distribution's version "
"identifier."
msgstr ""

#: ../../pep-0459.txt:311
msgid ""
"If there are multiple redistributors in the chain, each one just "
"overwrites this extension with their particular metadata."
msgstr ""

#: ../../pep-0459.txt:316
msgid "The ``python.exports`` extension"
msgstr ""

#: ../../pep-0459.txt:318
msgid ""
"Most Python distributions expose packages and modules for import through "
"the Python module namespace. Distributions may also expose other "
"interfaces when installed."
msgstr ""

#: ../../pep-0459.txt:322
msgid "The ``python.exports`` extension contains three custom subfields:"
msgstr ""

#: ../../pep-0459.txt:324
msgid "``modules``: modules exported by the distribution"
msgstr ""

#: ../../pep-0459.txt:325
msgid "``namespaces``: namespace packages that the distribution contributes to"
msgstr ""

#: ../../pep-0459.txt:326
msgid "``exports``: other Python interfaces exported by the distribution"
msgstr ""

#: ../../pep-0459.txt:330
msgid "Export specifiers"
msgstr ""

#: ../../pep-0459.txt:332
msgid ""
"An export specifier is a string consisting of a fully qualified name, as "
"well as an optional extra name enclosed in square brackets. This gives "
"the following four possible forms for an export specifier::"
msgstr ""

#: ../../pep-0459.txt:343 ../../pep-0459.txt:371 ../../pep-0459.txt:417
msgid ""
"The jsonschema file currently restricts qualified names using the Python "
"2 ASCII identifier rules. This may need to be reconsidered given the more"
" relaxed identifier rules in Python 3."
msgstr ""

#: ../../pep-0459.txt:347
msgid "The meaning of the subfields is as follows:"
msgstr ""

#: ../../pep-0459.txt:349
msgid "``module``: the module providing the export"
msgstr ""

#: ../../pep-0459.txt:350
msgid ""
"``name``: if applicable, the qualified name of the export within the "
"module"
msgstr ""

#: ../../pep-0459.txt:351
msgid ""
"``requires_extra``: indicates the export will only work correctly if the "
"additional dependencies named in the given extra are available in the "
"installed environment"
msgstr ""

#: ../../pep-0459.txt:357
msgid ""
"I tried this as a mapping with subfields, and it made the examples below "
"unreadable. While this PEP is mostly for tool use, readability still "
"matters to some degree for debugging purposes, and because I expect "
"snippets of the format to be reused elsewhere."
msgstr ""

#: ../../pep-0459.txt:364
msgid "Modules"
msgstr ""

#: ../../pep-0459.txt:366
msgid ""
"A list of qualified names of modules and packages that the distribution "
"provides for import."
msgstr ""

#: ../../pep-0459.txt:375
msgid ""
"For names that contain dots, the portion of the name before the final dot"
" MUST appear either in the installed module list or in the namespace "
"package list."
msgstr ""

#: ../../pep-0459.txt:379
msgid ""
"To help avoid name conflicts, it is RECOMMENDED that distributions "
"provide a single top level module or package that matches the "
"distribution name (or a lower case equivalent). This requires that the "
"distribution name also meet the requirements of a Python identifier, "
"which are stricter than those for distribution names). This practice will"
" also make it easier to find authoritative sources for modules."
msgstr ""

#: ../../pep-0459.txt:386
msgid ""
"Index servers SHOULD allow multiple distributions to publish the same "
"modules, but MAY notify distribution authors of potential conflicts."
msgstr ""

#: ../../pep-0459.txt:389
msgid ""
"Installation tools SHOULD report an error when asked to install a "
"distribution that provides a module that is also provided by a different,"
" previously installed, distribution."
msgstr ""

#: ../../pep-0459.txt:393
msgid ""
"Note that attempting to import some declared modules may result in an "
"exception if the appropriate extras are not installed."
msgstr ""

#: ../../pep-0459.txt:402
msgid ""
"Making this a list of export specifiers instead would allow a "
"distribution to declare when a particular module requires a particular "
"extra in order to run correctly. On the other hand, there's an argument "
"to be made that that is the point where it starts to become worthwhile to"
" split out a separate distribution rather than using extras."
msgstr ""

#: ../../pep-0459.txt:410
msgid "Namespaces"
msgstr ""

#: ../../pep-0459.txt:412
msgid ""
"A list of qualified names of namespace packages that the distribution "
"contributes modules to."
msgstr ""

#: ../../pep-0459.txt:421
msgid ""
"On versions of Python prior to Python 3.3 (which provides native "
"namespace package support), installation tools SHOULD emit a suitable "
"``__init__.py`` file to properly initialise the namespace rather than "
"using a distribution provided file."
msgstr ""

#: ../../pep-0459.txt:426
msgid ""
"Installation tools SHOULD emit a warning and MAY emit an error if a "
"distribution declares a namespace package that conflicts with the name of"
" an already installed module or vice-versa."
msgstr ""

#: ../../pep-0459.txt:436
msgid "Exports"
msgstr ""

#: ../../pep-0459.txt:438
msgid ""
"The ``exports`` field is a mapping containing prefixed names as keys. "
"Each key identifies an export group containing one or more exports "
"published by the distribution."
msgstr ""

#: ../../pep-0459.txt:442
msgid ""
"Export group names are defined by distributions that will then make use "
"of the published export information in some way. The primary use case is "
"for distributions that support a plugin model: defining an export group "
"allows other distributions to indicate which plugins they provide, how "
"they can be imported and accessed, and which additional dependencies (if "
"any) are needed for the plugin to work correctly."
msgstr ""

#: ../../pep-0459.txt:449
msgid ""
"To reduce the chance of name conflicts, export group names SHOULD use a "
"prefix that corresponds to a module name in the distribution that defines"
" the meaning of the export group. This practice will also make it easier "
"to find authoritative documentation for export groups."
msgstr ""

#: ../../pep-0459.txt:454
msgid ""
"Each individual export group is then a mapping of arbitrary non-empty "
"string keys to export specifiers. The meaning of export names within an "
"export group is up to the distribution that defines the export group. "
"Creating an appropriate definition for the export name format can allow "
"the importing distribution to determine whether or not an export is "
"relevant without needing to import every exporting module."
msgstr ""

#: ../../pep-0459.txt:471
msgid "The ``python.commands`` extension"
msgstr ""

#: ../../pep-0459.txt:473
msgid "The ``python.commands`` extension contains three custom subfields:"
msgstr ""

#: ../../pep-0459.txt:475
msgid "``wrap_console``: console wrapper scripts to be generated by the installer"
msgstr ""

#: ../../pep-0459.txt:476
msgid "``wrap_gui``: GUI wrapper scripts to be generated by the installer"
msgstr ""

#: ../../pep-0459.txt:477
msgid ""
"``prebuilt``: scripts created by the distribution's build process and "
"installed directly to the configured scripts directory"
msgstr ""

#: ../../pep-0459.txt:480
msgid ""
"``wrap_console`` and ``wrap_gui`` are both mappings of script names to "
"export specifiers. The script names must follow the same naming rules as "
"distribution names."
msgstr ""

#: ../../pep-0459.txt:484
msgid ""
"The export specifiers for wrapper scripts must refer to either a package "
"with a __main__ submodule (if no ``name`` subfield is given in the export"
" specifier) or else to a callable inside the named module."
msgstr ""

#: ../../pep-0459.txt:488
msgid ""
"Installation tools should generate appropriate wrappers as part of the "
"installation process."
msgstr ""

#: ../../pep-0459.txt:493
msgid ""
"Still needs more detail on what \"appropriate wrappers\" means. For now, "
"refer to what setuptools and zc.buildout generate as wrapper scripts."
msgstr ""

#: ../../pep-0459.txt:496
msgid ""
"``prebuilt`` is a list of script paths, relative to the scripts directory"
" in a wheel file or following installation. They are provided for "
"informational purpose only - installing them is handled through the "
"normal processes for files created when building a distribution."
msgstr ""

#: ../../pep-0459.txt:501 ../../pep-0459.txt:529
msgid ""
"Build tools SHOULD mark this extension as requiring handling by "
"installers."
msgstr ""

#: ../../pep-0459.txt:503
msgid ""
"Index servers SHOULD allow multiple distributions to publish the same "
"commands, but MAY notify distribution authors of potential conflicts."
msgstr ""

#: ../../pep-0459.txt:506
msgid ""
"Installation tools SHOULD report an error when asked to install a "
"distribution that provides a command that is also provided by a "
"different, previously installed, distribution."
msgstr ""

#: ../../pep-0459.txt:521
msgid "The ``python.constraints`` extension"
msgstr ""

#: ../../pep-0459.txt:523
msgid "The ``python.constraints`` extension contains two custom subfields:"
msgstr ""

#: ../../pep-0459.txt:525
msgid "``environments``: supported installation environments"
msgstr ""

#: ../../pep-0459.txt:526
msgid ""
"``extension_metadata``: required exact matches in extension metadata "
"fields published by other installed components"
msgstr ""

#: ../../pep-0459.txt:531
msgid ""
"Index servers SHOULD allow distributions to be uploaded with constraints "
"that cannot be satisfied using that index, but MAY notify distribution "
"authors of any such potential compatibility issues."
msgstr ""

#: ../../pep-0459.txt:535
msgid ""
"Installation tools SHOULD report an error if constraints are specified by"
" the distribution and the target installation environment fails to "
"satisfy them, MUST at least emit a warning, and MAY allow the user to "
"force the installation to proceed regardless."
msgstr ""

#: ../../pep-0459.txt:556
msgid "Supported Environments"
msgstr ""

#: ../../pep-0459.txt:558
msgid ""
"The ``environments`` subfield is a list of strings specifying the "
"environments that the distribution explicitly supports. An environment is"
" considered supported if it matches at least one of the environment "
"markers given."
msgstr ""

#: ../../pep-0459.txt:563
msgid ""
"If this field is not given in the metadata, it is assumed that the "
"distribution supports any platform supported by Python."
msgstr ""

#: ../../pep-0459.txt:566
msgid "Individual entries are environment markers, as described in :pep:`426`."
msgstr ""

#: ../../pep-0459.txt:568
msgid ""
"The two main uses of this field are to declare which versions of Python "
"and which underlying operating systems are supported."
msgstr ""

#: ../../pep-0459.txt:571
msgid "Examples indicating supported Python versions::"
msgstr ""

#: ../../pep-0459.txt:580
msgid "Examples indicating supported operating systems::"
msgstr ""

#: ../../pep-0459.txt:592
msgid "Example where the supported Python version varies by platform::"
msgstr ""

#: ../../pep-0459.txt:603
msgid "Extension metadata constraints"
msgstr ""

#: ../../pep-0459.txt:605
msgid ""
"The ``extension_metadata`` subfield is a mapping from distribution names "
"to extension metadata snippets that are expected to exactly match the "
"metadata of the named distribution in the target installation "
"environment."
msgstr ""

#: ../../pep-0459.txt:609
msgid ""
"Each submapping then consists of a mapping from metadata extension names "
"to the exact expected values of a subset of fields."
msgstr ""

#: ../../pep-0459.txt:612
msgid ""
"For example, a distribution called ``fortranlib`` may publish a different"
" FORTRAN ABI depending on how it is built, and any related projects that "
"are installed into the same runtime environment should use matching build"
" options. This can be handled by having the base distribution publish a "
"custom extension that indicates the build option that was used to create "
"the binary extensions::"
msgstr ""

#: ../../pep-0459.txt:625
msgid ""
"Other distributions that contain binary extensions that need to be "
"compatible with the base distribution would then define a suitable "
"constraint in their own metadata::"
msgstr ""

#: ../../pep-0459.txt:640
msgid "This constraint specifies that:"
msgstr ""

#: ../../pep-0459.txt:642
msgid ""
"``fortranlib`` must be installed (this should also be expressed as a "
"normal dependency so that installers ensure it is satisfied)"
msgstr ""

#: ../../pep-0459.txt:644
msgid ""
"The installed version of ``fortranlib`` must include the custom "
"``fortranlib.compatibility`` extension in its published metadata"
msgstr ""

#: ../../pep-0459.txt:646
msgid ""
"The ``fortan_abi`` subfield of that extension must have the *exact* value"
" ``openblas-g77``."
msgstr ""

#: ../../pep-0459.txt:649
msgid ""
"If all of these conditions are met (the distribution is installed, the "
"specified extension is included in the metadata, the specified subfields "
"have the exact specified value), then the constraint is considered to be "
"satisfied."
msgstr ""

#: ../../pep-0459.txt:656
msgid ""
"The primary intended use case here is allowing C extensions with "
"additional ABI compatibility requirements to declare those in a way that "
"any installation tool can enforce without needing to understand the "
"details. In particular, many NumPy based scientific libraries need to be "
"built using a consistent set of FORTRAN libraries, hence the "
"\"fortranlib\" example."
msgstr ""

#: ../../pep-0459.txt:663
msgid ""
"This is the reason there's no support for pattern matching or boolean "
"logic: even the \"simple\" version of this extension is relatively "
"complex, and there's currently no compelling rationale for making it more"
" complicated than it already is."
msgstr ""

#: ../../pep-0459.txt:670
msgid "Copyright"
msgstr ""

#: ../../pep-0459.txt:672
msgid "This document has been placed in the public domain."
msgstr ""

