# SOME DESCRIPTIVE TITLE.
# Copyright (C)
# This file is distributed under the same license as the PEPs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PEPs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-11-12 17:38+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../pep-0042.txt
msgid "PEP"
msgstr ""

#: ../../pep-0042.txt:1
msgid "42"
msgstr ""

#: ../../pep-0042.txt
msgid "Title"
msgstr ""

#: ../../pep-0042.txt:2
msgid "Feature Requests"
msgstr ""

#: ../../pep-0042.txt
msgid "Author"
msgstr ""

#: ../../pep-0042.txt:5
msgid "Jeremy Hylton <jeremy@alum.mit.edu>"
msgstr ""

#: ../../pep-0042.txt
msgid "Status"
msgstr ""

#: ../../pep-0042.txt:6
msgid "Rejected"
msgstr ""

#: ../../pep-0042.txt
msgid "Type"
msgstr ""

#: ../../pep-0042.txt:7
msgid "Process"
msgstr ""

#: ../../pep-0042.txt
msgid "Created"
msgstr ""

#: ../../pep-0042.txt:9
msgid "12-Sep-2000"
msgstr ""

#: ../../pep-0042.txt
msgid "Post-History"
msgstr ""

#: ../../pep-0042.txt
msgid "Resolution"
msgstr ""

#: ../../pep-0042.txt:11
msgid "https://github.com/python/peps/pull/108#issuecomment-249603204"
msgstr ""

#: ../../pep-0042.txt:14
msgid ""
"This PEP has been rejected as obsolete. All new feature requests should  "
"either go to the `Python bug tracker`_ for very simple requests or the "
"`python-ideas`_ mailing list for everything else.  The rest of this "
"document is retained for historical purposes only."
msgstr ""

#: ../../pep-0042.txt:22
msgid "Introduction"
msgstr ""

#: ../../pep-0042.txt:24
msgid ""
"This PEP contains a list of feature requests that may be considered for "
"future versions of Python.  Large feature requests should not be included"
" here, but should be described in separate PEPs; however a large feature "
"request that doesn't have its own PEP can be listed here until its own "
"PEP is created.  See PEP 0 for details."
msgstr ""

#: ../../pep-0042.txt:30
msgid ""
"This PEP was created to allow us to close bug reports that are really "
"feature requests.  Marked as Open, they distract from the list of real "
"bugs (which should ideally be less than a page).  Marked as Closed, they "
"tend to be forgotten.  The procedure now is:  if a bug report is really a"
" feature request, add the feature request to this PEP; mark the bug as "
"\"feature request\", \"later\", and \"closed\"; and add a comment to the "
"bug saying that this is the case (mentioning the PEP explicitly).  It is "
"also acceptable to move large feature requests directly from the bugs "
"database to a separate PEP."
msgstr ""

#: ../../pep-0042.txt:40
msgid ""
"This PEP should really be separated into four different categories "
"(categories due to Laura Creighton):"
msgstr ""

#: ../../pep-0042.txt:43
msgid "BDFL rejects as a bad idea.  Don't come back with it."
msgstr ""

#: ../../pep-0042.txt:45
msgid ""
"BDFL will put in if somebody writes the code.  (Or at any rate, BDFL will"
" say 'change this and I will put it in' if you show up with code.)"
msgstr ""

#: ../../pep-0042.txt:49
msgid "possibly divided into:"
msgstr ""

#: ../../pep-0042.txt:51
msgid "BDFL would really like to see some code!"
msgstr ""

#: ../../pep-0042.txt:53
msgid ""
"BDFL is never going to be enthusiastic about this, but will work it in "
"when it's easy."
msgstr ""

#: ../../pep-0042.txt:56
msgid ""
"If you show up with code, BDFL will make a pronouncement.  It might be "
"ICK."
msgstr ""

#: ../../pep-0042.txt:59
msgid ""
"This is too vague.  This is rejected, but only on the grounds of "
"vagueness.  If you like this enhancement, make a new PEP."
msgstr ""

#: ../../pep-0042.txt:64
msgid "Core Language / Builtins"
msgstr ""

#: ../../pep-0042.txt:66
msgid "The parser should handle more deeply nested parse trees."
msgstr ""

#: ../../pep-0042.txt:68
msgid ""
"The following will fail -- ``eval(\"[\"*50`` + ``\"]\"*50)`` -- because "
"the parser has a hard-coded limit on stack size.  This limit should be "
"raised or removed.  Removal would be hard because the current compiler "
"can overflow the C stack if the nesting is too deep."
msgstr ""

#: ../../pep-0042.txt:73
msgid "https://bugs.python.org/issue215555"
msgstr ""

#: ../../pep-0042.txt:75
msgid ""
"Non-accidental IEEE-754 support (Infs, NaNs, settable traps, etc). Big "
"project."
msgstr ""

#: ../../pep-0042.txt:78
msgid ""
"Windows:  Trying to create (or even access) files with certain magic "
"names can hang or crash Windows systems.  This is really a bug in the "
"OSes, but some apps try to shield users from it.  When it happens, the "
"symptoms are very confusing."
msgstr ""

#: ../../pep-0042.txt:83
msgid "Hang using files named prn.txt, etc https://bugs.python.org/issue481171"
msgstr ""

#: ../../pep-0042.txt:85
msgid ""
"eval and free variables: It might be useful if there was a way to pass "
"bindings for free variables to eval when a code object with free "
"variables is passed. https://bugs.python.org/issue443866"
msgstr ""

#: ../../pep-0042.txt:90
msgid "Standard Library"
msgstr ""

#: ../../pep-0042.txt:92
msgid ""
"The urllib module should support proxies which require authentication.  "
"See SourceForge bug #210619 for information:"
msgstr ""

#: ../../pep-0042.txt:95
msgid "https://bugs.python.org/issue210619"
msgstr ""

#: ../../pep-0042.txt:97
msgid ""
"os.rename() should be modified to handle EXDEV errors on platforms that "
"don't allow rename() to operate across filesystem boundaries by copying "
"the file over and removing the original. Linux is one system that "
"requires this treatment."
msgstr ""

#: ../../pep-0042.txt:102
msgid "https://bugs.python.org/issue212317"
msgstr ""

#: ../../pep-0042.txt:104
msgid ""
"signal handling doesn't always work as expected.  E.g. if "
"sys.stdin.readline() is interrupted by a (returning) signal handler, it "
"returns \"\".  It would be better to make it raise an exception "
"(corresponding to EINTR) or to restart.  But these changes would have to "
"applied to all places that can do blocking interruptible I/O.  So it's a "
"big project."
msgstr ""

#: ../../pep-0042.txt:111
msgid "https://bugs.python.org/issue210599"
msgstr ""

#: ../../pep-0042.txt:113
msgid "Extend Windows utime to accept directory paths."
msgstr ""

#: ../../pep-0042.txt:115
msgid "https://bugs.python.org/issue214245"
msgstr ""

#: ../../pep-0042.txt:117
msgid "Extend copy.py to module & function types."
msgstr ""

#: ../../pep-0042.txt:119
msgid "https://bugs.python.org/issue214553"
msgstr ""

#: ../../pep-0042.txt:121
msgid "Better checking for bad input to ``marshal.load*().``"
msgstr ""

#: ../../pep-0042.txt:123
msgid "https://bugs.python.org/issue214754"
msgstr ""

#: ../../pep-0042.txt:125
msgid ""
"rfc822.py should be more lenient than the spec in the types of address "
"fields it parses.  Specifically, an invalid address of the form \"From: "
"Amazon.com <delivers-news2@amazon.com>\" should be parsed correctly."
msgstr ""

#: ../../pep-0042.txt:130
msgid "https://bugs.python.org/issue210678"
msgstr ""

#: ../../pep-0042.txt:132
msgid ""
"cgi.py's FieldStorage class should be more conservative with memory in "
"the face of large binary file uploads."
msgstr ""

#: ../../pep-0042.txt:135
msgid "https://bugs.python.org/issue210674"
msgstr ""

#: ../../pep-0042.txt:137
msgid ""
"There are two issues here: first, because read_lines_to_outerboundary() "
"uses readline() it is possible that a large amount of data will be read "
"into memory for a binary file upload.  This should probably look at the "
"Content-Type header of the section and do a chunked read if it's a binary"
" type."
msgstr ""

#: ../../pep-0042.txt:143
msgid ""
"The second issue was related to the self.lines attribute, which was "
"removed in revision 1.56 of cgi.py (see also):"
msgstr ""

#: ../../pep-0042.txt:146
msgid "https://bugs.python.org/issue219806"
msgstr ""

#: ../../pep-0042.txt:148
msgid ""
"urllib should support proxy definitions that contain just the host and "
"port"
msgstr ""

#: ../../pep-0042.txt:151
msgid "https://bugs.python.org/issue210849"
msgstr ""

#: ../../pep-0042.txt:153
msgid ""
"urlparse should be updated to comply with RFC 2396, which defines "
"optional parameters for each segment of the path."
msgstr ""

#: ../../pep-0042.txt:156
msgid "https://bugs.python.org/issue210834"
msgstr ""

#: ../../pep-0042.txt:158
msgid ""
"The exceptions raised by pickle and cPickle are currently different; "
"these should be unified (probably the exceptions should be defined in a "
"helper module that's imported by both). [No bug report; I just thought of"
" this.]"
msgstr ""

#: ../../pep-0042.txt:163
msgid ""
"More standard library routines should support Unicode.  For example, "
"urllib.quote() could convert Unicode strings to UTF-8 and then do the "
"usual %HH conversion.  But this is not the only one!"
msgstr ""

#: ../../pep-0042.txt:167
msgid "https://bugs.python.org/issue216716"
msgstr ""

#: ../../pep-0042.txt:169
msgid ""
"There should be a way to say that you don't mind if ``str()`` or "
"``__str__()`` return a Unicode string object.  Or a different function --"
" ``ustr()`` has been proposed.  Or something..."
msgstr ""

#: ../../pep-0042.txt:173
msgid "http://sf.net/patch/?func=detailpatch&patch_id=101527&group_id=5470"
msgstr ""

#: ../../pep-0042.txt:175
msgid ""
"Killing a thread from another thread.  Or maybe sending a signal. Or "
"maybe raising an asynchronous exception."
msgstr ""

#: ../../pep-0042.txt:178
msgid "https://bugs.python.org/issue221115"
msgstr ""

#: ../../pep-0042.txt:180
msgid "The debugger (pdb) should understand packages."
msgstr ""

#: ../../pep-0042.txt:182
msgid "https://bugs.python.org/issue210631"
msgstr ""

#: ../../pep-0042.txt:184
msgid "Jim Fulton suggested the following:"
msgstr ""

#: ../../pep-0042.txt:198
msgid "https://bugs.python.org/issue415692"
msgstr ""

#: ../../pep-0042.txt:200
msgid ""
"Jim Fulton pointed out that binascii's b2a_base64() function has "
"situations where it makes sense not to append a newline, or to append "
"something else than a newline."
msgstr ""

#: ../../pep-0042.txt:204
msgid "Proposal:"
msgstr ""

#: ../../pep-0042.txt:206
msgid ""
"add an optional argument giving the delimiter string to be appended, "
"defaulting to \"\\\\n\""
msgstr ""

#: ../../pep-0042.txt:209
msgid ""
"possibly special-case None as the delimiter string to avoid adding the "
"pad bytes too???"
msgstr ""

#: ../../pep-0042.txt:212
msgid "https://bugs.python.org/issue415694"
msgstr ""

#: ../../pep-0042.txt:214
msgid ""
"pydoc should be integrated with the HTML docs, or at least be able to "
"link to them."
msgstr ""

#: ../../pep-0042.txt:217
msgid "https://bugs.python.org/issue405554"
msgstr ""

#: ../../pep-0042.txt:219
msgid "Distutils should deduce dependencies for .c and .h files."
msgstr ""

#: ../../pep-0042.txt:221
msgid "https://bugs.python.org/issue472881"
msgstr ""

#: ../../pep-0042.txt:223
msgid "asynchat is buggy in the face of multithreading."
msgstr ""

#: ../../pep-0042.txt:225
msgid "https://bugs.python.org/issue595217"
msgstr ""

#: ../../pep-0042.txt:227
msgid ""
"It would be nice if the higher level modules (httplib, smtplib, nntplib, "
"etc.) had options for setting socket timeouts."
msgstr ""

#: ../../pep-0042.txt:230
msgid "https://bugs.python.org/issue723287"
msgstr ""

#: ../../pep-0042.txt:232
msgid ""
"The curses library is missing two important calls: newterm() and "
"delscreen()"
msgstr ""

#: ../../pep-0042.txt:235
msgid "https://bugs.python.org/issue665572, http://bugs.debian.org/175590"
msgstr ""

#: ../../pep-0042.txt:237
msgid ""
"It would be nice if the built-in SSL socket type could be used for non-"
"blocking SSL I/O.  Currently packages such as Twisted which implement "
"async servers using SSL have to require third-party packages such as "
"pyopenssl."
msgstr ""

#: ../../pep-0042.txt:242
msgid "reST as a standard library module"
msgstr ""

#: ../../pep-0042.txt:244
msgid "The import lock could use some redesign."
msgstr ""

#: ../../pep-0042.txt:246
msgid "https://bugs.python.org/issue683658"
msgstr ""

#: ../../pep-0042.txt:248
msgid ""
"A nicer API to open text files, replacing the ugly (in some people's "
"eyes) \"U\" mode flag.  There's a proposal out there to have a new built-"
"in type textfile(filename, mode, encoding). (Shouldn't it have a bufsize "
"argument too?)"
msgstr ""

#: ../../pep-0042.txt:253
msgid "Support new widgets and/or parameters for Tkinter"
msgstr ""

#: ../../pep-0042.txt:255
msgid ""
"For a class defined inside another class, the __name__ should be "
"\"outer.inner\", and pickling should work.  (GvR is no longer certain "
"this is easy or even right.)"
msgstr ""

#: ../../pep-0042.txt:259
msgid "https://bugs.python.org/issue633930"
msgstr ""

#: ../../pep-0042.txt:261
msgid ""
"Decide on a clearer deprecation policy (especially for modules) and act "
"on it."
msgstr ""

#: ../../pep-0042.txt:264
msgid "https://mail.python.org/pipermail/python-dev/2002-April/023165.html"
msgstr ""

#: ../../pep-0042.txt:266
msgid ""
"Provide alternatives for common uses of the types module; Skip Montanaro "
"has posted a proto-PEP for this idea:"
msgstr ""

#: ../../pep-0042.txt:269
msgid "https://mail.python.org/pipermail/python-dev/2002-May/024346.html"
msgstr ""

#: ../../pep-0042.txt:271
msgid ""
"Use pending deprecation for the types and string modules.  This requires "
"providing alternatives for the parts that aren't covered yet (e.g. "
"string.whitespace and types.TracebackType). It seems we can't get "
"consensus on this."
msgstr ""

#: ../../pep-0042.txt:276
msgid "Lazily tracking tuples?"
msgstr ""

#: ../../pep-0042.txt:278
msgid ""
"https://mail.python.org/pipermail/python-dev/2002-May/023926.html "
"https://bugs.python.org/issue558745"
msgstr ""

#: ../../pep-0042.txt:281
msgid ""
"Make 'as' a keyword.  It has been a pseudo-keyword long enough. (It's "
"deprecated in 2.5, and will become a keyword in 2.6.)"
msgstr ""

#: ../../pep-0042.txt:286
msgid "C API wishes"
msgstr ""

#: ../../pep-0042.txt:288
msgid ""
"Add C API functions to help Windows users who are building embedded "
"applications where the FILE \\* structure does not match the FILE \\* the"
" interpreter was compiled with."
msgstr ""

#: ../../pep-0042.txt:292
msgid "https://bugs.python.org/issue210821"
msgstr ""

#: ../../pep-0042.txt:294
msgid ""
"See this bug report for a specific suggestion that will allow a Borland "
"C++ builder application to interact with a python.dll build with MSVC."
msgstr ""

#: ../../pep-0042.txt:300
msgid "Tools"
msgstr ""

#: ../../pep-0042.txt:302
msgid "Python could use a GUI builder."
msgstr ""

#: ../../pep-0042.txt:304
msgid "https://bugs.python.org/issue210820"
msgstr ""

#: ../../pep-0042.txt:308
msgid "Building and Installing"
msgstr ""

#: ../../pep-0042.txt:310
msgid ""
"Modules/makesetup should make sure the 'config.c' file it generates from "
"the various Setup files, is valid C. It currently accepts module names "
"with characters that are not allowable in Python or C identifiers."
msgstr ""

#: ../../pep-0042.txt:315
msgid "https://bugs.python.org/issue216326"
msgstr ""

#: ../../pep-0042.txt:317
msgid ""
"Building from source should not attempt to overwrite the "
"Include/graminit.h and Parser/graminit.c files, at least for people "
"downloading a source release rather than working from Subversion or "
"snapshots.  Some people find this a problem in unusual build "
"environments."
msgstr ""

#: ../../pep-0042.txt:323
msgid "https://bugs.python.org/issue219221"
msgstr ""

#: ../../pep-0042.txt:325
msgid ""
"The configure script has probably grown a bit crufty with age and may not"
" track autoconf's more recent features very well.  It should be looked at"
" and possibly cleaned up."
msgstr ""

#: ../../pep-0042.txt:329
msgid "https://mail.python.org/pipermail/python-dev/2004-January/041790.html"
msgstr ""

#: ../../pep-0042.txt:331
msgid "Make Python compliant to the FHS (the Filesystem Hierarchy Standard)"
msgstr ""

#: ../../pep-0042.txt:334
msgid "http://bugs.python.org/issue588756"
msgstr ""

