# SOME DESCRIPTIVE TITLE.
# Copyright (C)
# This file is distributed under the same license as the PEPs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PEPs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-11-12 17:38+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../pep-0588.rst
msgid "PEP"
msgstr ""

#: ../../pep-0588.rst:1
msgid "588"
msgstr ""

#: ../../pep-0588.rst
msgid "Title"
msgstr ""

#: ../../pep-0588.rst:2
msgid "GitHub Issues Migration Plan"
msgstr ""

#: ../../pep-0588.rst
msgid "Author"
msgstr ""

#: ../../pep-0588.rst:3
msgid "Mariatta <mariatta@python.org>"
msgstr ""

#: ../../pep-0588.rst
msgid "BDFL-Delegate"
msgstr ""

#: ../../pep-0588.rst:4
msgid "Barry Warsaw <barry@python.org>"
msgstr ""

#: ../../pep-0588.rst
msgid "Discussions-To"
msgstr ""

#: ../../pep-0588.rst:5
msgid "Core-Workflow Category on Discourse"
msgstr ""

#: ../../pep-0588.rst
msgid "Status"
msgstr ""

#: ../../pep-0588.rst:6
msgid "Draft"
msgstr ""

#: ../../pep-0588.rst
msgid "Type"
msgstr ""

#: ../../pep-0588.rst:7
msgid "Informational"
msgstr ""

#: ../../pep-0588.rst
msgid "Created"
msgstr ""

#: ../../pep-0588.rst:9
msgid "27-Mar-2019"
msgstr ""

#: ../../pep-0588.rst:13
msgid "Abstract"
msgstr ""

#: ../../pep-0588.rst:15
msgid ""
"This PEP describes the detailed plan for migrating from Python's issue "
"tracker on Roundup to GitHub issues.  See PEP 581 for rationale and "
"background.  PEP 588 also describes the detailed timeline for the "
"migration."
msgstr ""

#: ../../pep-0588.rst:22
msgid "Migration Plan"
msgstr ""

#: ../../pep-0588.rst:24
msgid ""
"Here we outline the tasks, steps, and core decisions we need to make in "
"order to migrate bug tracking to GitHub, with the least impact on CPython"
" developer productivity."
msgstr ""

#: ../../pep-0588.rst:29
msgid "Hire a professional project manager"
msgstr ""

#: ../../pep-0588.rst:31
msgid ""
"Having a professional project manager to handle the migration, similar to"
" how the Warehouse project was managed, would help ensure the success of "
"this project."
msgstr ""

#: ../../pep-0588.rst:35
msgid "Create a playground CPython issue tracker on GitHub"
msgstr ""

#: ../../pep-0588.rst:37
msgid ""
"We should create a playground issue tracker on GitHub where we can "
"experiment and test out the new workflow."
msgstr ""

#: ../../pep-0588.rst:41
msgid "Backup of GitHub data"
msgstr ""

#: ../../pep-0588.rst:43
msgid ""
"This effort has been started and is being tracked as an issue in core-"
"workflow [#]_. We're using GitHub's Migrations API [#]_ to download "
"GitHub data for CPython on a daily basis. The archives will be dropped in"
" a S3 bucket."
msgstr ""

#: ../../pep-0588.rst:48
msgid "Thanks to Ee W. Durbin III for working on this."
msgstr ""

#: ../../pep-0588.rst:52
msgid "Update the CLA host"
msgstr ""

#: ../../pep-0588.rst:54
msgid ""
"At the moment, the CLA is hosted within bpo. It needs to be updated such "
"that signing the CLA does not require a bpo account, and it should be "
"hosted outside of the bpo."
msgstr ""

#: ../../pep-0588.rst:58
msgid ""
"The current CLA process itself is not ideal. Currently, contributors to "
"devguide, peps, and core-workflow need to sign a CLA, and it requires a "
"bpo account. A bpo account should not be required for those projects."
msgstr ""

#: ../../pep-0588.rst:62
msgid ""
"There is an ongoing effort to start using our own instance of CLA "
"assistant instead of the current CLA process in place. Discussion about "
"this has been started in `core-workflow mailing list "
"<https://mail.python.org/archives/list/core-"
"workflow@python.org/thread/JBV3XJVD2DLDX5DY7TZEA6CO5YPNHJ2C/>`_ as well "
"as on `Discourse <https://discuss.python.org/t/using-cla-assistant-for-"
"python/990>`_."
msgstr ""

#: ../../pep-0588.rst:69
msgid ""
"This effort `is currently stalled <https://discuss.python.org/t/cla-"
"assistant-is-no-go/2066/>`_ because cla-assistant does not yet support "
"CLA signed on behalf of organization."
msgstr ""

#: ../../pep-0588.rst:74
msgid "Create \"Python Triage\" team on GitHub"
msgstr ""

#: ../../pep-0588.rst:76
msgid ""
"The bug triagers on bpo are valuable to the core Python workflow, and we "
"definitely would need even more help with triaging issues on GitHub."
msgstr ""

#: ../../pep-0588.rst:79
msgid ""
"It has been `proposed on Discourse <https://discuss.python.org/t"
"/proposal-create-bug-triage-team-on-github/992/5>`_ for us to create a "
"\"bug triage\" team on GitHub to help with closing issues, notifying the "
"appropriate parties, as well as applying labels to issues and pull "
"requests."
msgstr ""

#: ../../pep-0588.rst:85
msgid ""
"The new Triage role on GitHub is currently in beta, and the Python "
"organization has been granted access to this role, and we can begin "
"taking advantage of it."
msgstr ""

#: ../../pep-0588.rst:88
msgid ""
"The \"Python Triage\" team has been created. A description and "
"expectations of the triage role `have been added to Devguide "
"<https://devguide.python.org/triaging/#python-triage-team>`_."
msgstr ""

#: ../../pep-0588.rst:91
msgid ""
"Progress of this project can be tracked in `\"Adding Triagers\" project "
"board <https://github.com/python/core-workflow/projects/3>`_."
msgstr ""

#: ../../pep-0588.rst:96
msgid "Create labels for issue triage"
msgstr ""

#: ../../pep-0588.rst:98
msgid "In bpo, we currently have the following fields for each issue:"
msgstr ""

#: ../../pep-0588.rst:100
msgid ""
"Types: ``behavior``, ``crash``, ``compile error``, ``resource usage``, "
"``security``, ``performance``, ``enhancement``."
msgstr ""

#: ../../pep-0588.rst:103
msgid ""
"Components: ``2to3``, ``Argument Clinic``, ``asyncio``, ``Build``, "
"``Cross-build``, ``ctypes``, ..."
msgstr ""

#: ../../pep-0588.rst:106
msgid ""
"Priority: ``release blocker``, ``deferred blocker``, ``critical``, "
"``high``, ``normal``, ``low``"
msgstr ""

#: ../../pep-0588.rst:109
msgid "We will create the corresponding labels::"
msgstr ""

#: ../../pep-0588.rst:117
msgid "In addition, we'll create a ``needs triage`` label."
msgstr ""

#: ../../pep-0588.rst:119
msgid ""
"The final \"labels\" to be created can be decided at a later time when it"
" is time to start switching to GitHub issues."
msgstr ""

#: ../../pep-0588.rst:122
msgid ""
"A test repository containing all possible labels and color schema has "
"been created by Carol Willing and can be reviewed at "
"https://github.com/willingc/test-581/labels."
msgstr ""

#: ../../pep-0588.rst:126
msgid "Create issue templates"
msgstr ""

#: ../../pep-0588.rst:128
msgid "We will create an issue template and add the following headers::"
msgstr ""

#: ../../pep-0588.rst:137
msgid ""
"The idea is to allow the issue creator to help us triage the issue. The "
"above values are pre-filled in the template. The issue creator will "
"remove texts that do not apply to their issue."
msgstr ""

#: ../../pep-0588.rst:141
msgid ""
"Based on the above headers, bedevere-bot can apply the necessary labels "
"to the issue. If the issue creator did not supply the above headers, the "
"bot will apply the ``needs triage`` label. At that point, it will require"
" a core developer to properly label the issue."
msgstr ""

#: ../../pep-0588.rst:146
msgid ""
"We can also take advantage of GitHub's multiple issue template feature, "
"and the ability to automatically set issue assignee and labels by using "
"issue templates."
msgstr ""

#: ../../pep-0588.rst:152
msgid "Updates to bedevere"
msgstr ""

#: ../../pep-0588.rst:154
msgid ""
"Bedevere-bot will need to be updated to recognize the issue headers "
"described above and apply the proper labels."
msgstr ""

#: ../../pep-0588.rst:157
msgid ""
"Bedevere-bot can also copy over the labels to pull requests that "
"correspond to the issue."
msgstr ""

#: ../../pep-0588.rst:162
msgid "Update the devguide"
msgstr ""

#: ../../pep-0588.rst:164
msgid ""
"Devguide should be updated with information about the new workflow of "
"using GitHub issues. It can be done as a separate branch, and it should "
"be done ahead of the migration, not after."
msgstr ""

#: ../../pep-0588.rst:169
msgid "Add a button in bpo to migrate the issue to GitHub"
msgstr ""

#: ../../pep-0588.rst:171
msgid ""
"This will require the bpo to be updated. But I believe the effort needed "
"for this is much less than a complete overhaul."
msgstr ""

#: ../../pep-0588.rst:174
msgid ""
"We will create a button in bpo, that will copy over the issue description"
" and associated comments into a GitHub issue."
msgstr ""

#: ../../pep-0588.rst:177
msgid "We need to add a new status: \"moved\" with the url of the GitHub issue."
msgstr ""

#: ../../pep-0588.rst:179
msgid ""
"We should not be moving all open issues to GitHub. Only when someone is "
"interested in continuing work or discussion about the issue, that the "
"issue should be \"moved\" to GitHub."
msgstr ""

#: ../../pep-0588.rst:185
msgid "Migrated issues"
msgstr ""

#: ../../pep-0588.rst:187
msgid ""
"When an issue is marked as \"moved\", this issue should be in read-only "
"mode. bpo should forbid the edition of the issue."
msgstr ""

#: ../../pep-0588.rst:192
msgid "Make bpo read-only"
msgstr ""

#: ../../pep-0588.rst:194
msgid ""
"This should be the final step. Once we start using GitHub issues, make "
"bpo read-only, instead of shutting it down. Do not accept new "
"registrations. Do not allow comments or issues to be created."
msgstr ""

#: ../../pep-0588.rst:200
msgid "Mapping between issues from bpo and GitHub"
msgstr ""

#: ../../pep-0588.rst:202
msgid ""
"Usually when we reference an issue from bpo, we use bpo-XYZ but with "
"Github, we will have a new reference with this format "
"``https://github.com/python/cpython/issue/XYZ``."
msgstr ""

#: ../../pep-0588.rst:206
msgid ""
"Because we will migrate the issues from bpo to GitHub, we need to have a "
"new field on bpo for the reference to the issues on GitHub, and the same "
"thing on Github for the 'eventual' reference from bpo."
msgstr ""

#: ../../pep-0588.rst:210
msgid ""
"For GitHub, we need to add ``origin: https://bugs.python.org/issueXYZ``. "
"For bpo, add a new field ``moved to: "
"https://github.com/python/cpython/issue/XYZ``."
msgstr ""

#: ../../pep-0588.rst:215
msgid "Nosy-ing the expert"
msgstr ""

#: ../../pep-0588.rst:217
msgid ""
"A current functionality in bpo is to automatically nosy people who are "
"listed as an expert of certain area. Several Python core developers have "
"expressed that they prefer not having to subscribe to everything on "
"GitHub, but only getting notified for issues related to their area of "
"interest and expertise."
msgstr ""

#: ../../pep-0588.rst:222
msgid ""
"To help with this situation, we can develop a bot that can notify people "
"whenever an issue has been categorized using labels. For example, when an"
" issue was labeled with ``area-windows``, the windows experts can be "
"notified. The notification can be in the form of email notification, or "
"@-mention on GitHub."
msgstr ""

#: ../../pep-0588.rst:228
msgid "Open issues"
msgstr ""

#: ../../pep-0588.rst:231
msgid "A GitHub account should not be a requirement"
msgstr ""

#: ../../pep-0588.rst:233
msgid ""
"Back when moving the CPython codebase from Mercurial to GitHub was being "
"discussed [#]_ [#]_, it was brought up that we still needed to allow "
"uploading of patches on bpo, and that a GitHub account should not be a "
"requirement in order to contribute to Python."
msgstr ""

#: ../../pep-0588.rst:238
msgid ""
"If bpo is made read-only, we'll need to come up with a different solution"
" to allow people to contribute when they don't have a GitHub account."
msgstr ""

#: ../../pep-0588.rst:241
msgid ""
"One solution is to create a new \"python-issues\" mailing list, similar "
"to the docs@python.org [#]_ mailing list, to allow people to submit their"
" issues there."
msgstr ""

#: ../../pep-0588.rst:245
msgid ""
"Related to this, since the migration to GitHub in 2017, I recall one case"
" [#]_ where there was a contributor, who submitted a patch to Mercurial "
"and refused to create a GitHub account. Because of this, our bot was "
"unable to detect whether they had signed the CLA. Another person had "
"volunteered to upload their patch to GitHub. But it was still required "
"that both people sign the CLA."
msgstr ""

#: ../../pep-0588.rst:252
msgid ""
"That particular situation was complicated. It took up five core "
"developers' time to investigate and manually check the CLA, causing "
"confusion."
msgstr ""

#: ../../pep-0588.rst:258
msgid "Trim off the \"Components\" list"
msgstr ""

#: ../../pep-0588.rst:260
msgid ""
"Is the current \"components\" list still making sense and relevant? Can "
"the list be shortened?"
msgstr ""

#: ../../pep-0588.rst:265
msgid "Priority list"
msgstr ""

#: ../../pep-0588.rst:267
msgid ""
"Is the current \"priority\" list useful? Nick Coghlan noted that perhaps "
"only ``release blocker`` and ``deferred blocker`` are useful."
msgstr ""

#: ../../pep-0588.rst:272
msgid "Further questions and discussions"
msgstr ""

#: ../../pep-0588.rst:274
msgid ""
"You can post questions on Discourse under the `Core-Workflow "
"<https://discuss.python.org/c/core-workflow>`_ category."
msgstr ""

#: ../../pep-0588.rst:279
msgid "Acknowledgements"
msgstr ""

#: ../../pep-0588.rst:281
msgid ""
"Thanks to Guido van Rossum, Brett Cannon, and Nick Coghlan, who were "
"consulted in the early stage and research of this PEP. Their feedback, "
"concerns, input, and ideas have been valuable."
msgstr ""

#: ../../pep-0588.rst:287
msgid "References"
msgstr ""

#: ../../pep-0588.rst:289
msgid ""
"Backup GitHub information (https://github.com/python/core-"
"workflow/issues/20)"
msgstr ""

#: ../../pep-0588.rst:292
msgid "GitHub's Migrations API (https://developer.github.com/v3/migrations/orgs/)"
msgstr ""

#: ../../pep-0588.rst:295
msgid ""
"Python-committers email (https://mail.python.org/pipermail/python-"
"committers/2015-December/003642.html)"
msgstr ""

#: ../../pep-0588.rst:298
msgid ""
"Python-committers email (https://mail.python.org/pipermail/python-"
"committers/2015-December/003645.html)"
msgstr ""

#: ../../pep-0588.rst:301
msgid "docs mailing list (https://mail.python.org/mailman/listinfo/docs)"
msgstr ""

#: ../../pep-0588.rst:304
msgid ""
"CPython GitHub pull request 1505 "
"(https://github.com/python/cpython/pull/1505)"
msgstr ""

#: ../../pep-0588.rst:309
msgid "Copyright"
msgstr ""

#: ../../pep-0588.rst:311
msgid "This document has been placed in the public domain."
msgstr ""

