# SOME DESCRIPTIVE TITLE.
# Copyright (C)
# This file is distributed under the same license as the PEPs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PEPs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-11-12 17:38+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../pep-3000.txt
msgid "PEP"
msgstr ""

#: ../../pep-3000.txt:1
msgid "3000"
msgstr ""

#: ../../pep-3000.txt
msgid "Title"
msgstr ""

#: ../../pep-3000.txt:2
msgid "Python 3000"
msgstr ""

#: ../../pep-3000.txt
msgid "Author"
msgstr ""

#: ../../pep-3000.txt:5
msgid "Guido van Rossum <guido@python.org>"
msgstr ""

#: ../../pep-3000.txt
msgid "Status"
msgstr ""

#: ../../pep-3000.txt:6
msgid "Final"
msgstr ""

#: ../../pep-3000.txt
msgid "Type"
msgstr ""

#: ../../pep-3000.txt:7
msgid "Process"
msgstr ""

#: ../../pep-3000.txt
msgid "Created"
msgstr ""

#: ../../pep-3000.txt:9
msgid "05-Apr-2006"
msgstr ""

#: ../../pep-3000.txt
msgid "Post-History"
msgstr ""

#: ../../pep-3000.txt:14
msgid "Abstract"
msgstr ""

#: ../../pep-3000.txt:16
msgid ""
"This PEP sets guidelines for Python 3000 development.  Ideally, we first "
"agree on the process, and start discussing features only after the "
"process has been decided and specified.  In practice, we'll be discussing"
" features and process simultaneously; often the debate about a particular"
" feature will prompt a process discussion."
msgstr ""

#: ../../pep-3000.txt:24
msgid "Naming"
msgstr ""

#: ../../pep-3000.txt:26
msgid ""
"Python 3000, Python 3.0 and Py3K are all names for the same thing. The "
"project is called Python 3000, or abbreviated to Py3k.  The actual Python"
" release will be referred to as Python 3.0, and that's what \"python3.0 "
"-V\" will print; the actual file names will use the same naming "
"convention we use for Python 2.x.  I don't want to pick a new name for "
"the executable or change the suffix for Python source files."
msgstr ""

#: ../../pep-3000.txt:36
msgid "PEP Numbering"
msgstr ""

#: ../../pep-3000.txt:38
msgid ""
"Python 3000 PEPs are numbered starting at PEP 3000.  PEPs 3000-3099 are "
"meta-PEPs -- these can be either process or informational PEPs. PEPs "
"3100-3999 are feature PEPs.  PEP 3000 itself (this PEP) is special; it is"
" the meta-PEP for Python 3000 meta-PEPs (IOW it describe the process to "
"define processes).  PEP 3100 is also special; it's a laundry list of "
"features that were selected for (hopeful) inclusion in Python 3000 before"
" we started the Python 3000 process for real.  PEP 3099, finally, is a "
"list of features that will *not* change."
msgstr ""

#: ../../pep-3000.txt:49
msgid "Timeline"
msgstr ""

#: ../../pep-3000.txt:51
msgid ""
"See PEP 361 [#pep361]_, which contains the release schedule for Python "
"2.6 and 3.0.  These versions will be released in lockstep."
msgstr ""

#: ../../pep-3000.txt:54
msgid ""
"Note: standard library development is expected to ramp up after 3.0a1 is "
"released."
msgstr ""

#: ../../pep-3000.txt:57
msgid ""
"I expect that there will be parallel Python 2.x and 3.x releases for some"
" time; the Python 2.x releases will continue for a longer time than the "
"traditional 2.x.y bugfix releases.  Typically, we stop releasing bugfix "
"versions for 2.x once version 2.(x+1) has been released.  But I expect "
"there to be at least one or two new 2.x releases even after 3.0 (final) "
"has been released, probably well into 3.1 or 3.2.  This will to some "
"extent depend on community demand for continued 2.x support, acceptance "
"and stability of 3.0, and volunteer stamina."
msgstr ""

#: ../../pep-3000.txt:67
msgid ""
"I expect that Python 3.1 and 3.2 will be released much sooner after 3.0 "
"than has been customary for the 2.x series.  The 3.x release pattern will"
" stabilize once the community is happy with 3.x."
msgstr ""

#: ../../pep-3000.txt:73
msgid "Compatibility and Transition"
msgstr ""

#: ../../pep-3000.txt:75
msgid "Python 3.0 will break backwards compatibility with Python 2.x."
msgstr ""

#: ../../pep-3000.txt:77
msgid ""
"**There is no requirement that Python 2.6 code will run unmodified on "
"Python 3.0.** Not even a subset.  (Of course there will be a *tiny* "
"subset, but it will be missing major functionality.)"
msgstr ""

#: ../../pep-3000.txt:81
msgid "Python 2.6 will support forward compatibility in the following two ways:"
msgstr ""

#: ../../pep-3000.txt:84
msgid ""
"It will support a \"Py3k warnings mode\" which will warn dynamically "
"(i.e. at runtime) about features that will stop working in Python 3.0, "
"e.g. assuming that range() returns a list."
msgstr ""

#: ../../pep-3000.txt:87
msgid ""
"It will contain backported versions of many Py3k features, either enabled"
" through __future__ statements or simply by allowing old and new syntax "
"to be used side-by-side (if the new syntax would be a syntax error in "
"2.x)."
msgstr ""

#: ../../pep-3000.txt:92
msgid ""
"Instead, and complementary to the forward compatibility features in 2.6, "
"there will be a separate source code conversion tool [1]_.  This tool can"
" do a context-free source-to-source translation.  For example, it can "
"translate ``apply(f, args)`` into ``f(*args)``.  However, the tool cannot"
" do data flow analysis or type inferencing, so it simply assumes that "
"``apply`` in this example refers to the old built-in function."
msgstr ""

#: ../../pep-3000.txt:100
msgid ""
"The recommended development model for a project that needs to support "
"Python 2.6 and 3.0 simultaneously is as follows:"
msgstr ""

#: ../../pep-3000.txt:103
msgid "You should have excellent unit tests with close to full coverage."
msgstr ""

#: ../../pep-3000.txt:104
msgid "Port your project to Python 2.6."
msgstr ""

#: ../../pep-3000.txt:105
msgid "Turn on the Py3k warnings mode."
msgstr ""

#: ../../pep-3000.txt:106
msgid "Test and edit until no warnings remain."
msgstr ""

#: ../../pep-3000.txt:107
msgid ""
"Use the 2to3 tool to convert this source code to 3.0 syntax. **Do not "
"manually edit the output!**"
msgstr ""

#: ../../pep-3000.txt:109
msgid "Test the converted source code under 3.0."
msgstr ""

#: ../../pep-3000.txt:110
msgid ""
"If problems are found, make corrections to the **2.6** version of the "
"source code and go back to step 3."
msgstr ""

#: ../../pep-3000.txt:112
msgid ""
"When it's time to release, release separate 2.6 and 3.0 tarballs (or "
"whatever archive form you use for releases)."
msgstr ""

#: ../../pep-3000.txt:115
msgid ""
"It is recommended not to edit the 3.0 source code until you are ready to "
"reduce 2.6 support to pure maintenance (i.e. the moment when you would "
"normally move the 2.6 code to a maintenance branch anyway)."
msgstr ""

#: ../../pep-3000.txt:119
msgid "PS. We need a meta-PEP to describe the transitional issues in detail."
msgstr ""

#: ../../pep-3000.txt:123
msgid "Implementation Language"
msgstr ""

#: ../../pep-3000.txt:125
msgid ""
"Python 3000 will be implemented in C, and the implementation will be "
"derived as an evolution of the Python 2 code base. This reflects my views"
" (which I share with Joel Spolsky [2]_) on the dangers of complete "
"rewrites. Since Python 3000 as a language is a relatively mild "
"improvement on Python 2, we can gain a lot by not attempting to "
"reimplement the language from scratch. I am not against parallel from-"
"scratch implementation efforts, but my own efforts will be directed at "
"the language and implementation that I know best."
msgstr ""

#: ../../pep-3000.txt:136
msgid "Meta-Contributions"
msgstr ""

#: ../../pep-3000.txt:138
msgid ""
"Suggestions for additional text for this PEP are gracefully accepted by "
"the author.  Draft meta-PEPs for the topics above and additional topics "
"are even more welcome!"
msgstr ""

#: ../../pep-3000.txt:144
msgid "References"
msgstr ""

#: ../../pep-3000.txt:146
msgid ""
"The 2to3 tool, in the subversion sandbox "
"http://svn.python.org/view/sandbox/trunk/2to3/"
msgstr ""

#: ../../pep-3000.txt:149
msgid ""
"Joel on Software: Things You Should Never Do, Part I "
"http://www.joelonsoftware.com/articles/fog0000000069.html"
msgstr ""

#: ../../pep-3000.txt:152
msgid ""
"PEP 361 (Python 2.6 and 3.0 Release Schedule) "
"http://www.python.org/dev/peps/pep-0361"
msgstr ""

#: ../../pep-3000.txt:157
msgid "Copyright"
msgstr ""

#: ../../pep-3000.txt:159
msgid "This document has been placed in the public domain."
msgstr ""

