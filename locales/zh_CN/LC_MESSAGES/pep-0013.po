# SOME DESCRIPTIVE TITLE.
# Copyright (C)
# This file is distributed under the same license as the PEPs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PEPs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-11-12 17:38+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../pep-0013.rst
msgid "PEP"
msgstr ""

#: ../../pep-0013.rst:1
msgid "13"
msgstr ""

#: ../../pep-0013.rst
msgid "Title"
msgstr ""

#: ../../pep-0013.rst:2
msgid "Python Language Governance"
msgstr ""

#: ../../pep-0013.rst
msgid "Author"
msgstr ""

#: ../../pep-0013.rst:3
msgid "The Python core team and community"
msgstr ""

#: ../../pep-0013.rst
msgid "Status"
msgstr ""

#: ../../pep-0013.rst:4
msgid "Active"
msgstr ""

#: ../../pep-0013.rst
msgid "Type"
msgstr ""

#: ../../pep-0013.rst:5
msgid "Informational"
msgstr ""

#: ../../pep-0013.rst
msgid "Created"
msgstr ""

#: ../../pep-0013.rst:7
msgid "16-Dec-2018"
msgstr ""

#: ../../pep-0013.rst:11
msgid "Abstract"
msgstr ""

#: ../../pep-0013.rst:13
msgid ""
"This PEP defines the formal governance process for Python, and records "
"how this has changed over time. Currently, governance is based around a "
"steering council. The council has broad authority, which they seek to "
"exercise as rarely as possible."
msgstr ""

#: ../../pep-0013.rst:20
msgid "Current steering council"
msgstr ""

#: ../../pep-0013.rst:22
msgid "The current steering council consists of:"
msgstr ""

#: ../../pep-0013.rst:24
msgid "Barry Warsaw"
msgstr ""

#: ../../pep-0013.rst:25
msgid "Brett Cannon"
msgstr ""

#: ../../pep-0013.rst:26
msgid "Carol Willing"
msgstr ""

#: ../../pep-0013.rst:27
msgid "Thomas Wouters"
msgstr ""

#: ../../pep-0013.rst:28
msgid "Pablo Galindo Salgado"
msgstr ""

#: ../../pep-0013.rst:30
msgid "Per the results of the vote tracked in PEP 8102."
msgstr ""

#: ../../pep-0013.rst:32
msgid ""
"The core team consists of those listed in the private "
"https://github.com/python/voters/ repository which is publicly shared via"
" https://devguide.python.org/developers/."
msgstr ""

#: ../../pep-0013.rst:38
msgid "Specification"
msgstr ""

#: ../../pep-0013.rst:41
msgid "The steering council"
msgstr ""

#: ../../pep-0013.rst:44
msgid "Composition"
msgstr ""

#: ../../pep-0013.rst:46
msgid "The steering council is a 5-person committee."
msgstr ""

#: ../../pep-0013.rst:50
msgid "Mandate"
msgstr ""

#: ../../pep-0013.rst:52
msgid "The steering council shall work to:"
msgstr ""

#: ../../pep-0013.rst:54
msgid ""
"Maintain the quality and stability of the Python language and CPython "
"interpreter,"
msgstr ""

#: ../../pep-0013.rst:56
msgid "Make contributing as accessible, inclusive, and sustainable as possible,"
msgstr ""

#: ../../pep-0013.rst:58
msgid "Formalize and maintain the relationship between the core team and the PSF,"
msgstr ""

#: ../../pep-0013.rst:60
msgid "Establish appropriate decision-making processes for PEPs,"
msgstr ""

#: ../../pep-0013.rst:61
msgid ""
"Seek consensus among contributors and the core team before acting in a "
"formal capacity,"
msgstr ""

#: ../../pep-0013.rst:63
msgid ""
"Act as a \"court of final appeal\" for decisions where all other methods "
"have failed."
msgstr ""

#: ../../pep-0013.rst:68
msgid "Powers"
msgstr ""

#: ../../pep-0013.rst:70
msgid ""
"The council has broad authority to make decisions about the project. For "
"example, they can:"
msgstr ""

#: ../../pep-0013.rst:73
msgid "Accept or reject PEPs"
msgstr ""

#: ../../pep-0013.rst:74
msgid "Enforce or update the project's code of conduct"
msgstr ""

#: ../../pep-0013.rst:75
msgid "Work with the PSF to manage any project assets"
msgstr ""

#: ../../pep-0013.rst:76
msgid "Delegate parts of their authority to other subcommittees or processes"
msgstr ""

#: ../../pep-0013.rst:79
msgid ""
"However, they cannot modify this PEP, or affect the membership of the "
"core team, except via the mechanisms specified in this PEP."
msgstr ""

#: ../../pep-0013.rst:82
msgid ""
"The council should look for ways to use these powers as little as "
"possible. Instead of voting, it's better to seek consensus. Instead of "
"ruling on individual PEPs, it's better to define a standard process for "
"PEP decision making (for example, by accepting one of the other 801x "
"series of PEPs). It's better to establish a Code of Conduct committee "
"than to rule on individual cases. And so on."
msgstr ""

#: ../../pep-0013.rst:89
msgid ""
"To use its powers, the council votes. Every council member must either "
"vote or explicitly abstain. Members with conflicts of interest on a "
"particular vote must abstain. Passing requires a strict majority of non-"
"abstaining council members."
msgstr ""

#: ../../pep-0013.rst:94
msgid ""
"Whenever possible, the council's deliberations and votes shall be held in"
" public."
msgstr ""

#: ../../pep-0013.rst:99
msgid "Electing the council"
msgstr ""

#: ../../pep-0013.rst:101
msgid "A council election consists of two phases:"
msgstr ""

#: ../../pep-0013.rst:103
msgid ""
"Phase 1: Candidates advertise their interest in serving. Candidates must "
"be nominated by a core team member. Self-nominations are allowed."
msgstr ""

#: ../../pep-0013.rst:107
msgid ""
"Phase 2: Each core team member can vote for zero or more of the "
"candidates. Voting is performed anonymously. Candidates are ranked by the"
" total number of votes they receive. If a tie occurs, it may be resolved "
"by mutual agreement among the candidates, or else the winner will be "
"chosen at random."
msgstr ""

#: ../../pep-0013.rst:113
msgid ""
"Each phase lasts one to two weeks, at the outgoing council's discretion. "
"For the initial election, both phases will last two weeks."
msgstr ""

#: ../../pep-0013.rst:116
msgid ""
"The election process is managed by a returns officer nominated by the "
"outgoing steering council. For the initial election, the returns officer "
"will be nominated by the PSF Executive Director."
msgstr ""

#: ../../pep-0013.rst:120
msgid ""
"The council should ideally reflect the diversity of Python contributors "
"and users, and core team members are encouraged to vote accordingly."
msgstr ""

#: ../../pep-0013.rst:126
msgid "Term"
msgstr ""

#: ../../pep-0013.rst:128
msgid ""
"A new council is elected after each feature release. Each council's term "
"runs from when their election results are finalized until the next "
"council's term starts. There are no term limits."
msgstr ""

#: ../../pep-0013.rst:134
msgid "Vacancies"
msgstr ""

#: ../../pep-0013.rst:136
msgid "Council members may resign their position at any time."
msgstr ""

#: ../../pep-0013.rst:138
msgid ""
"Whenever there is a vacancy during the regular council term, the council "
"may vote to appoint a replacement to serve out the rest of the term."
msgstr ""

#: ../../pep-0013.rst:142
msgid ""
"If a council member drops out of touch and cannot be contacted for a "
"month or longer, then the rest of the council may vote to replace them."
msgstr ""

#: ../../pep-0013.rst:148
msgid "Conflicts of interest"
msgstr ""

#: ../../pep-0013.rst:150
msgid ""
"While we trust council members to act in the best interests of Python "
"rather than themselves or their employers, the mere appearance of any one"
" company dominating Python development could itself be harmful and erode "
"trust. In order to avoid any appearance of conflict of interest, at most "
"2 members of the council can work for any single employer."
msgstr ""

#: ../../pep-0013.rst:156
msgid ""
"In a council election, if 3 of the top 5 vote-getters work for the same "
"employer, then whichever of them ranked lowest is disqualified and the "
"6th-ranking candidate moves up into 5th place; this is repeated until a "
"valid council is formed."
msgstr ""

#: ../../pep-0013.rst:161
msgid ""
"During a council term, if changing circumstances cause this rule to be "
"broken (for instance, due to a council member changing employment), then "
"one or more council members must resign to remedy the issue, and the "
"resulting vacancies can then be filled as normal."
msgstr ""

#: ../../pep-0013.rst:168
msgid "Ejecting core team members"
msgstr ""

#: ../../pep-0013.rst:170
msgid ""
"In exceptional circumstances, it may be necessary to remove someone from "
"the core team against their will. (For example: egregious and ongoing "
"code of conduct violations.) This can be accomplished by a steering "
"council vote, but unlike other steering council votes, this requires at "
"least a two-thirds majority. With 5 members voting, this means that a 3:2"
" vote is insufficient; 4:1 in favor is the minimum required for such a "
"vote to succeed. In addition, this is the one power of the steering "
"council which cannot be delegated, and this power cannot be used while a "
"vote of no confidence is in process."
msgstr ""

#: ../../pep-0013.rst:180
msgid ""
"If the ejected core team member is also on the steering council, then "
"they are removed from the steering council as well."
msgstr ""

#: ../../pep-0013.rst:185
msgid "Vote of no confidence"
msgstr ""

#: ../../pep-0013.rst:187
msgid ""
"In exceptional circumstances, the core team may remove a sitting council "
"member, or the entire council, via a vote of no confidence."
msgstr ""

#: ../../pep-0013.rst:190
msgid ""
"A no-confidence vote is triggered when a core team member calls for one "
"publicly on an appropriate project communication channel, and another "
"core team member seconds the proposal."
msgstr ""

#: ../../pep-0013.rst:194
msgid ""
"The vote lasts for two weeks. Core team members vote for or against. If "
"at least two thirds of voters express a lack of confidence, then the vote"
" succeeds."
msgstr ""

#: ../../pep-0013.rst:198
msgid ""
"There are two forms of no-confidence votes: those targeting a single "
"member, and those targeting the council as a whole. The initial call for "
"a no-confidence vote must specify which type is intended. If a single-"
"member vote succeeds, then that member is removed from the council and "
"the resulting vacancy can be handled in the usual way. If a whole-council"
" vote succeeds, the council is dissolved and a new council election is "
"triggered immediately."
msgstr ""

#: ../../pep-0013.rst:208
msgid "The core team"
msgstr ""

#: ../../pep-0013.rst:211
msgid "Role"
msgstr ""

#: ../../pep-0013.rst:213
msgid ""
"The core team is the group of trusted volunteers who manage Python. They "
"assume many roles required to achieve the project's goals, especially "
"those that require a high level of trust. They make the decisions that "
"shape the future of the project."
msgstr ""

#: ../../pep-0013.rst:218
msgid ""
"Core team members are expected to act as role models for the community "
"and custodians of the project, on behalf of the community and all those "
"who rely on Python."
msgstr ""

#: ../../pep-0013.rst:222
msgid ""
"They will intervene, where necessary, in online discussions or at "
"official Python events on the rare occasions that a situation arises that"
" requires intervention."
msgstr ""

#: ../../pep-0013.rst:226
msgid ""
"They have authority over the Python Project infrastructure, including the"
" Python Project website itself, the Python GitHub organization and "
"repositories, the bug tracker, the mailing lists, IRC channels, etc."
msgstr ""

#: ../../pep-0013.rst:232
msgid "Prerogatives"
msgstr ""

#: ../../pep-0013.rst:234
msgid ""
"Core team members may participate in formal votes, typically to nominate "
"new team members and to elect the steering council."
msgstr ""

#: ../../pep-0013.rst:239
msgid "Membership"
msgstr ""

#: ../../pep-0013.rst:241
msgid "Python core team members demonstrate:"
msgstr ""

#: ../../pep-0013.rst:243
msgid "a good grasp of the philosophy of the Python Project"
msgstr ""

#: ../../pep-0013.rst:244
msgid "a solid track record of being constructive and helpful"
msgstr ""

#: ../../pep-0013.rst:245
msgid "significant contributions to the project's goals, in any form"
msgstr ""

#: ../../pep-0013.rst:246
msgid "willingness to dedicate some time to improving Python"
msgstr ""

#: ../../pep-0013.rst:248
msgid ""
"As the project matures, contributions go beyond code. Here's an "
"incomplete list of areas where contributions may be considered for "
"joining the core team, in no particular order:"
msgstr ""

#: ../../pep-0013.rst:252
msgid "Working on community management and outreach"
msgstr ""

#: ../../pep-0013.rst:253
msgid "Providing support on the mailing lists and on IRC"
msgstr ""

#: ../../pep-0013.rst:254
msgid "Triaging tickets"
msgstr ""

#: ../../pep-0013.rst:255
msgid "Writing patches (code, docs, or tests)"
msgstr ""

#: ../../pep-0013.rst:256
msgid "Reviewing patches (code, docs, or tests)"
msgstr ""

#: ../../pep-0013.rst:257
msgid "Participating in design decisions"
msgstr ""

#: ../../pep-0013.rst:258
msgid "Providing expertise in a particular domain (security, i18n, etc.)"
msgstr ""

#: ../../pep-0013.rst:259
msgid "Managing the continuous integration infrastructure"
msgstr ""

#: ../../pep-0013.rst:260
msgid "Managing the servers (website, tracker, documentation, etc.)"
msgstr ""

#: ../../pep-0013.rst:261
msgid ""
"Maintaining related projects (alternative interpreters, core "
"infrastructure like packaging, etc.)"
msgstr ""

#: ../../pep-0013.rst:263
msgid "Creating visual designs"
msgstr ""

#: ../../pep-0013.rst:265
msgid ""
"Core team membership acknowledges sustained and valuable efforts that "
"align well with the philosophy and the goals of the Python project."
msgstr ""

#: ../../pep-0013.rst:268
msgid ""
"It is granted by receiving at least two-thirds positive votes in a core "
"team vote that is open for one week and with no veto by the steering "
"council."
msgstr ""

#: ../../pep-0013.rst:272
msgid ""
"Core team members are always looking for promising contributors, teaching"
" them how the project is managed, and submitting their names to the core "
"team's vote when they're ready."
msgstr ""

#: ../../pep-0013.rst:276
msgid ""
"There's no time limit on core team membership. However, in order to "
"provide the general public with a reasonable idea of how many people "
"maintain Python, core team members who have stopped contributing are "
"encouraged to declare themselves as \"inactive\". Those who haven't made "
"any non-trivial contribution in two years may be asked to move themselves"
" to this category, and moved there if they don't respond. To record and "
"honor their contributions, inactive team members will continue to be "
"listed alongside active core team members; and, if they later resume "
"contributing, they can switch back to active status at will. While "
"someone is in inactive status, though, they lose their active privileges "
"like voting or nominating for the steering council, and commit access."
msgstr ""

#: ../../pep-0013.rst:289
msgid ""
"The initial active core team members will consist of everyone currently "
"listed in the `\"Python core\" team on Github "
"<https://github.com/orgs/python/teams/python-core/members>`__ (access "
"granted for core members only), and the initial inactive members will "
"consist of everyone else who has been a committer in the past."
msgstr ""

#: ../../pep-0013.rst:298
msgid "Changing this document"
msgstr ""

#: ../../pep-0013.rst:300
msgid ""
"Changes to this document require at least a two-thirds majority of votes "
"cast in a core team vote which should be open for two weeks."
msgstr ""

#: ../../pep-0013.rst:305
msgid "History"
msgstr ""

#: ../../pep-0013.rst:308
msgid "Creation of this document"
msgstr ""

#: ../../pep-0013.rst:310
msgid ""
"The Python project was started by Guido van Rossum, who served as its "
"Benevolent Dictator for Life (BDFL) from inception until July 2018, when "
"he `stepped down <https://mail.python.org/pipermail/python-"
"committers/2018-July/005664.html>`__."
msgstr ""

#: ../../pep-0013.rst:315
msgid ""
"After discussion, a number of proposals were put forward for a new "
"governance model, and the core devs voted to choose between them. The "
"overall process is described in PEP 8000 and PEP 8001, a review of other "
"projects was performed in PEP 8002, and the proposals themselves were "
"written up as the 801x series of PEPs. Eventually the proposal in PEP "
"8016 was `selected <https://discuss.python.org/t/python-governance-vote-"
"december-2018-results/546>`__ as the new governance model, and was used "
"to create the initial version of this PEP. The 8000-series PEPs are "
"preserved for historical reference (and in particular, PEP 8016 contains "
"additional rationale and links to contemporary discussions), but this PEP"
" is now the official reference, and will evolve following the rules "
"described herein."
msgstr ""

#: ../../pep-0013.rst:331
msgid "History of council elections"
msgstr ""

#: ../../pep-0013.rst:333
msgid "January 2019: PEP 8100"
msgstr ""

#: ../../pep-0013.rst:334
msgid "December 2019: PEP 8101"
msgstr ""

#: ../../pep-0013.rst:335
msgid "December 2020: PEP 8102"
msgstr ""

#: ../../pep-0013.rst:336
msgid "December 2021: PEP 8103"
msgstr ""

#: ../../pep-0013.rst:340
msgid "History of amendments"
msgstr ""

#: ../../pep-0013.rst:342
msgid ""
"2019-04-17: Added the vote length for core devs and changes to this "
"document."
msgstr ""

#: ../../pep-0013.rst:347
msgid "Acknowledgements"
msgstr ""

#: ../../pep-0013.rst:349
msgid ""
"This PEP began as PEP 8016, which was written by Nathaniel J. Smith and "
"Donald Stufft, based on a Django governance document written by Aymeric "
"Augustin, and incorporated feedback and assistance from numerous others."
msgstr ""

#: ../../pep-0013.rst:356
msgid "Copyright"
msgstr ""

#: ../../pep-0013.rst:358
msgid "This document has been placed in the public domain."
msgstr ""

