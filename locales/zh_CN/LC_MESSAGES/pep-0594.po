# SOME DESCRIPTIVE TITLE.
# Copyright (C)
# This file is distributed under the same license as the PEPs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PEPs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-11-12 17:38+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../pep-0594.rst
msgid "PEP"
msgstr ""

#: ../../pep-0594.rst:1
msgid "594"
msgstr ""

#: ../../pep-0594.rst
msgid "Title"
msgstr ""

#: ../../pep-0594.rst:2
msgid "Removing dead batteries from the standard library"
msgstr ""

#: ../../pep-0594.rst
msgid "Author"
msgstr ""

#: ../../pep-0594.rst:3
msgid "Christian Heimes <christian@python.org>"
msgstr ""

#: ../../pep-0594.rst
msgid "Discussions-To"
msgstr ""

#: ../../pep-0594.rst:4
msgid ""
"https://discuss.python.org/t/pep-594-removing-dead-batteries-from-the-"
"standard-library/1704"
msgstr ""

#: ../../pep-0594.rst
msgid "Status"
msgstr ""

#: ../../pep-0594.rst:5
msgid "Draft"
msgstr ""

#: ../../pep-0594.rst
msgid "Type"
msgstr ""

#: ../../pep-0594.rst:6
msgid "Standards Track"
msgstr ""

#: ../../pep-0594.rst
msgid "Created"
msgstr ""

#: ../../pep-0594.rst:8
msgid "20-May-2019"
msgstr ""

#: ../../pep-0594.rst
msgid "Post-History"
msgstr ""

#: ../../pep-0594.rst:9
msgid "21-May-2019"
msgstr ""

#: ../../pep-0594.rst:13
msgid "Abstract"
msgstr ""

#: ../../pep-0594.rst:15
msgid ""
"This PEP proposed a list of standard library modules to be removed from "
"the standard library. The modules are mostly historic data formats (e.g. "
"Commodore and SUN file formats), APIs and operating systems that have "
"been superseded a long time ago (e.g. Mac OS 9), or modules that have "
"security implications and better alternatives (e.g. password and login)."
msgstr ""

#: ../../pep-0594.rst:21
msgid ""
"The PEP follows in the foot steps of other PEPS like :pep:`3108`. The "
"*Standard Library Reorganization* proposal removed a bunch of modules "
"from Python 3.0. In 2007, the PEP referred to maintenance burden as:"
msgstr ""

#: ../../pep-0594.rst:25
msgid ""
"\"Over the years, certain modules have become a heavy burden upon python-"
"dev to maintain. In situations like this, it is better for the module to "
"be given to the community to maintain to free python-dev to focus more on"
" language support and other modules in the standard library that do not "
"take up an undue amount of time and effort.\""
msgstr ""

#: ../../pep-0594.rst:31
msgid ""
"The withdrawn :pep:`206` from 2000 expresses issues with the Python "
"standard library unvarnished and fortright:"
msgstr ""

#: ../../pep-0594.rst:34
msgid ""
"\"[...] the standard library modules aren't always the best choices for a"
" job. Some library modules were quick hacks (e.g. ``calendar``, "
"``commands``), some were designed poorly and are now near-impossible to "
"fix (``cgi``), and some have been rendered obsolete by other, more "
"complete modules [...].\""
msgstr ""

#: ../../pep-0594.rst:42
msgid "Rationale"
msgstr ""

#: ../../pep-0594.rst:44
msgid ""
"Back in the early days of Python, the interpreter came with a large set "
"of useful modules. This was often referred to as \"batteries included\" "
"philosophy and was one of the cornerstones to Python's success story. "
"Users didn't have to figure out how to download and install separate "
"packages in order to write a simple web server or parse email."
msgstr ""

#: ../../pep-0594.rst:50
msgid ""
"Times have changed. The introduction of the cheese shop (PyPI), "
"setuptools, and later pip, it became simple and straightforward to "
"download and install packages. Nowadays Python has a rich and vibrant "
"ecosystem of third-party packages. It's pretty much standard to either "
"install packages from PyPI or use one of the many Python or Linux "
"distributions."
msgstr ""

#: ../../pep-0594.rst:56
msgid ""
"On the other hand, Python's standard library is piling up cruft, "
"unnecessary duplication of functionality, and dispensable features. This "
"is undesirable for several reasons."
msgstr ""

#: ../../pep-0594.rst:60
msgid ""
"Any additional module increases the maintenance cost for the Python core "
"development team. The team has limited resources, reduced maintenance "
"cost frees development time for other improvements."
msgstr ""

#: ../../pep-0594.rst:63
msgid ""
"Modules in the standard library are generally favored and seen as the de "
"facto solution for a problem. A majority of users only pick third-party "
"modules to replace a stdlib module, when they have a compelling reason, "
"e.g. ``lxml`` instead of ``xml``. The removal of an unmaintained stdlib "
"module increases the chances of a community-contributed module to become "
"widely used."
msgstr ""

#: ../../pep-0594.rst:69
msgid ""
"A lean and mean standard library benefits platforms with limited "
"resources like devices with just a few hundred kilobyte of storage (e.g. "
"BBC Micro:bit). Python on mobile platforms like BeeWare or WebAssembly "
"(e.g. pyodide) also benefit from reduced download size."
msgstr ""

#: ../../pep-0594.rst:74
msgid ""
"The modules in the PEP have been selected for deprecation because their "
"removal is either least controversial or most beneficial. For example, "
"least controversial are 30-year-old multimedia formats like the ``sunau``"
" audio format, which was used on SPARC and NeXT workstations in the late "
"1980s. The ``crypt`` module has fundamental flaws that are better solved "
"outside the standard library."
msgstr ""

#: ../../pep-0594.rst:81
msgid ""
"This PEP also designates some modules as not scheduled for removal. Some "
"modules have been deprecated for several releases or seem unnecessary at "
"first glance. However it is beneficial to keep the modules in the "
"standard library, mostly for environments where installing a package from"
" PyPI is not an option. This can be corporate environments or classrooms "
"where external code is not permitted without legal approval."
msgstr ""

#: ../../pep-0594.rst:88
msgid ""
"The usage of FTP is declining, but some files are still provided over the"
" FTP protocol or hosters offer FTP to upload content. Therefore, "
"``ftplib`` is going to stay."
msgstr ""

#: ../../pep-0594.rst:91
msgid ""
"The ``optparse`` and ``getopt`` modules are widely used. They are mature "
"modules with very low maintenance overhead."
msgstr ""

#: ../../pep-0594.rst:93
msgid ""
"According to David Beazley [5]_ the ``wave`` module is easy to teach to "
"kids and can make crazy sounds. Making a computer generate crazy sounds "
"is powerful and highly motivating exercise for a nine-year-old aspiring "
"developer. It's a fun battery to keep."
msgstr ""

#: ../../pep-0594.rst:100
msgid "Deprecation schedule"
msgstr ""

#: ../../pep-0594.rst:1 ../../pep-0594.rst:103 ../../pep-0594.rst:238
#: ../../pep-0594.rst:258 ../../pep-0594.rst:277 ../../pep-0594.rst:308
#: ../../pep-0594.rst:334 ../../pep-0594.rst:353 ../../pep-0594.rst:372
#: ../../pep-0594.rst:406 ../../pep-0594.rst:426 ../../pep-0594.rst:445
#: ../../pep-0594.rst:590 ../../pep-0594.rst:607 ../../pep-0594.rst:644
#: ../../pep-0594.rst:668 ../../pep-0594.rst:687 ../../pep-0594.rst:716
#: ../../pep-0594.rst:781 ../../pep-0594.rst:831
msgid "3.8"
msgstr ""

#: ../../pep-0594.rst:105
msgid ""
"This PEP targets Python 3.8. Version 3.8.0 final is scheduled to be "
"released a few months before Python 2.7 will reach its end of lifetime. "
"We expect that Python 3.8 will be targeted by users that migrate to "
"Python 3 in 2019 and 2020. To reduce churn and to allow a smooth "
"transition from Python 2, Python 3.8 will neither raise "
"``DeprecationWarning`` nor remove any modules that have been scheduled "
"for removal. Instead deprecated modules will just be *documented* as "
"deprecated. Optionally modules may emit a ``PendingDeprecationWarning``."
msgstr ""

#: ../../pep-0594.rst:114
msgid ""
"All deprecated modules will also undergo a feature freeze. No additional "
"features should be added *unless* python-dev agrees that the deprecation "
"of the module is reverted and the code will not be removed. Bug should "
"still be fixed."
msgstr ""

#: ../../pep-0594.rst:120
msgid "3.9"
msgstr ""

#: ../../pep-0594.rst:122
msgid ""
"Starting with Python 3.9, deprecated modules will start issuing "
"``DeprecationWarning``. The `parser`_ module is removed and potentially "
"replaced with a new module."
msgstr ""

#: ../../pep-0594.rst:126
msgid ""
"All other deprecated modules are fully supported and will receive "
"security updates until Python 3.9 reaches its end-of-life. Python 3.9.0 "
"will be released about 18 months after 3.8.0 (April 2021?) and most "
"likely be supported for five years after the release. The estimated EOL "
"of Python 3.9 is in 2026."
msgstr ""

#: ../../pep-0594.rst:1 ../../pep-0594.rst:133 ../../pep-0594.rst:240
#: ../../pep-0594.rst:260 ../../pep-0594.rst:279 ../../pep-0594.rst:310
#: ../../pep-0594.rst:336 ../../pep-0594.rst:355 ../../pep-0594.rst:374
#: ../../pep-0594.rst:408 ../../pep-0594.rst:428 ../../pep-0594.rst:447
#: ../../pep-0594.rst:468 ../../pep-0594.rst:491 ../../pep-0594.rst:521
#: ../../pep-0594.rst:543 ../../pep-0594.rst:562 ../../pep-0594.rst:592
#: ../../pep-0594.rst:609 ../../pep-0594.rst:646 ../../pep-0594.rst:689
#: ../../pep-0594.rst:718 ../../pep-0594.rst:739 ../../pep-0594.rst:759
#: ../../pep-0594.rst:783 ../../pep-0594.rst:833
msgid "3.10"
msgstr ""

#: ../../pep-0594.rst:135
msgid ""
"In 3.10 all deprecated modules will be removed from the CPython "
"repository together with tests, documentation, and autoconf rules."
msgstr ""

#: ../../pep-0594.rst:140
msgid "PEP acceptance process"
msgstr ""

#: ../../pep-0594.rst:142
msgid ""
"3.8.0b1 is scheduled to be release shortly after the PEP is officially "
"submitted. Since it's improbable that the PEP will pass all stages of the"
" PEP process in time, I propose a two-step acceptance process that is "
"analogous to Python's two-release deprecation process."
msgstr ""

#: ../../pep-0594.rst:147
msgid ""
"The first *provisionally-accepted* phase targets Python 3.8.0b1. In the "
"first phase no code is changed or removed. Modules are only documented as"
" deprecated. The only exception is the `parser`_ module. It has been "
"documented as deprecated since Python 2.5 and is scheduled for removal "
"for 3.9 to make place for a more advanced parser."
msgstr ""

#: ../../pep-0594.rst:153
msgid ""
"The final decision, which modules will be removed and how the removed "
"code is preserved, can be delayed for another year."
msgstr ""

#: ../../pep-0594.rst:158
msgid "Deprecated modules"
msgstr ""

#: ../../pep-0594.rst:160
msgid ""
"The modules are grouped as data encoding, multimedia, network, OS "
"interface, and misc modules. The majority of modules are for old data "
"formats or old APIs. Some others are rarely useful and have better "
"replacements on PyPI, e.g. Pillow for image processing or NumPy-based "
"projects to deal with audio processing."
msgstr ""

#: ../../pep-0594.rst:166
msgid "Table 1: Proposed modules deprecations"
msgstr ""

#: ../../pep-0594.rst:1
msgid "Module"
msgstr ""

#: ../../pep-0594.rst:1 ../../pep-0594.rst:237 ../../pep-0594.rst:257
#: ../../pep-0594.rst:276 ../../pep-0594.rst:307 ../../pep-0594.rst:333
#: ../../pep-0594.rst:352 ../../pep-0594.rst:371 ../../pep-0594.rst:405
#: ../../pep-0594.rst:425 ../../pep-0594.rst:444 ../../pep-0594.rst:465
#: ../../pep-0594.rst:488 ../../pep-0594.rst:518 ../../pep-0594.rst:540
#: ../../pep-0594.rst:559 ../../pep-0594.rst:589 ../../pep-0594.rst:606
#: ../../pep-0594.rst:643 ../../pep-0594.rst:665 ../../pep-0594.rst:686
#: ../../pep-0594.rst:715 ../../pep-0594.rst:736 ../../pep-0594.rst:756
#: ../../pep-0594.rst:780 ../../pep-0594.rst:811 ../../pep-0594.rst:830
#: ../../pep-0594.rst:853 ../../pep-0594.rst:963
msgid "Deprecated in"
msgstr ""

#: ../../pep-0594.rst:1
msgid "To be removed"
msgstr ""

#: ../../pep-0594.rst:1
msgid "Added in"
msgstr ""

#: ../../pep-0594.rst:1
msgid "Has maintainer?"
msgstr ""

#: ../../pep-0594.rst:1
msgid "Replacement"
msgstr ""

#: ../../pep-0594.rst:1 ../../pep-0594.rst:290
msgid "aifc"
msgstr ""

#: ../../pep-0594.rst:1
msgid "3.8 (3.0\\*)"
msgstr ""

#: ../../pep-0594.rst:1
msgid "1993"
msgstr ""

#: ../../pep-0594.rst:1
msgid "**yes (inactive)**"
msgstr ""

#: ../../pep-0594.rst:1
msgid "\\-"
msgstr ""

#: ../../pep-0594.rst:1 ../../pep-0594.rst:458
msgid "asynchat"
msgstr ""

#: ../../pep-0594.rst:1
msgid "**3.6** (3.0\\*)"
msgstr ""

#: ../../pep-0594.rst:1
msgid "1999"
msgstr ""

#: ../../pep-0594.rst:1
msgid "**yes**"
msgstr ""

#: ../../pep-0594.rst:1
msgid "asyncio_"
msgstr ""

#: ../../pep-0594.rst:1 ../../pep-0594.rst:475
msgid "asyncore"
msgstr ""

#: ../../pep-0594.rst:1 ../../pep-0594.rst:317
msgid "audioop"
msgstr ""

#: ../../pep-0594.rst:1
msgid "1992"
msgstr ""

#: ../../pep-0594.rst:1 ../../pep-0594.rst:228
msgid "binhex"
msgstr ""

#: ../../pep-0594.rst:1
msgid "1995"
msgstr ""

#: ../../pep-0594.rst:1 ../../pep-0594.rst:242 ../../pep-0594.rst:262
#: ../../pep-0594.rst:281 ../../pep-0594.rst:357 ../../pep-0594.rst:376
#: ../../pep-0594.rst:410 ../../pep-0594.rst:430 ../../pep-0594.rst:449
#: ../../pep-0594.rst:523 ../../pep-0594.rst:545 ../../pep-0594.rst:594
#: ../../pep-0594.rst:691 ../../pep-0594.rst:720 ../../pep-0594.rst:741
#: ../../pep-0594.rst:785 ../../pep-0594.rst:835 ../../pep-0594.rst:898
#: ../../pep-0594.rst:919 ../../pep-0594.rst:933 ../../pep-0594.rst:948
#: ../../pep-0594.rst:990
msgid "no"
msgstr ""

#: ../../pep-0594.rst:1 ../../pep-0594.rst:499
msgid "cgi"
msgstr ""

#: ../../pep-0594.rst:1
msgid "3.8 (2.0\\*\\*)"
msgstr ""

#: ../../pep-0594.rst:1 ../../pep-0594.rst:529
msgid "cgitb"
msgstr ""

#: ../../pep-0594.rst:1 ../../pep-0594.rst:343
msgid "chunk"
msgstr ""

#: ../../pep-0594.rst:1 ../../pep-0594.rst:619
msgid "crypt"
msgstr ""

#: ../../pep-0594.rst:1
msgid "1994"
msgstr ""

#: ../../pep-0594.rst:1
msgid "legacycrypt_, bcrypt_, argon2cffi_, hashlib_, passlib_"
msgstr ""

#: ../../pep-0594.rst:1 ../../pep-0594.rst:729
msgid "formatter"
msgstr ""

#: ../../pep-0594.rst:1
msgid "**3.4**"
msgstr ""

#: ../../pep-0594.rst:1 ../../pep-0594.rst:843
msgid "fpectl"
msgstr ""

#: ../../pep-0594.rst:1
msgid "**3.7**"
msgstr ""

#: ../../pep-0594.rst:1
msgid "1997"
msgstr ""

#: ../../pep-0594.rst:1 ../../pep-0594.rst:670 ../../pep-0594.rst:858
msgid "n/a"
msgstr ""

#: ../../pep-0594.rst:1 ../../pep-0594.rst:362
msgid "imghdr"
msgstr ""

#: ../../pep-0594.rst:1
msgid "filetype_, puremagic_, python-magic_"
msgstr ""

#: ../../pep-0594.rst:1 ../../pep-0594.rst:746
msgid "imp"
msgstr ""

#: ../../pep-0594.rst:1
msgid "1990/1995"
msgstr ""

#: ../../pep-0594.rst:1
msgid "importlib_"
msgstr ""

#: ../../pep-0594.rst:1 ../../pep-0594.rst:657
msgid "macpath"
msgstr ""

#: ../../pep-0594.rst:1
msgid "**3.8**"
msgstr ""

#: ../../pep-0594.rst:1
msgid "1990"
msgstr ""

#: ../../pep-0594.rst:1 ../../pep-0594.rst:766
msgid "msilib"
msgstr ""

#: ../../pep-0594.rst:1
msgid "2006"
msgstr ""

#: ../../pep-0594.rst:1 ../../pep-0594.rst:569
msgid "nntplib"
msgstr ""

#: ../../pep-0594.rst:1 ../../pep-0594.rst:675
msgid "nis"
msgstr ""

#: ../../pep-0594.rst:1 ../../pep-0594.rst:383
msgid "ossaudiodev"
msgstr ""

#: ../../pep-0594.rst:1
msgid "2002"
msgstr ""

#: ../../pep-0594.rst:1 ../../pep-0594.rst:790
msgid "parser"
msgstr ""

#: ../../pep-0594.rst:1
msgid "**2.5**"
msgstr ""

#: ../../pep-0594.rst:1 ../../pep-0594.rst:814
msgid "**3.9**"
msgstr ""

#: ../../pep-0594.rst:1
msgid "ast_, astroid_, lib2to3.pgen2"
msgstr ""

#: ../../pep-0594.rst:1 ../../pep-0594.rst:821
msgid "pipes"
msgstr ""

#: ../../pep-0594.rst:1
msgid "subprocess_"
msgstr ""

#: ../../pep-0594.rst:1 ../../pep-0594.rst:550
msgid "smtpd"
msgstr ""

#: ../../pep-0594.rst:1
msgid "**3.4.7**, **3.5.4**"
msgstr ""

#: ../../pep-0594.rst:1
msgid "2001"
msgstr ""

#: ../../pep-0594.rst:1
msgid "aiosmtpd_"
msgstr ""

#: ../../pep-0594.rst:1 ../../pep-0594.rst:415
msgid "sndhdr"
msgstr ""

#: ../../pep-0594.rst:1 ../../pep-0594.rst:696
msgid "spwd"
msgstr ""

#: ../../pep-0594.rst:1
msgid "2005"
msgstr ""

#: ../../pep-0594.rst:1
msgid "python-pam_, simplepam_"
msgstr ""

#: ../../pep-0594.rst:1 ../../pep-0594.rst:437
msgid "sunau"
msgstr ""

#: ../../pep-0594.rst:1 ../../pep-0594.rst:599
msgid "telnetlib"
msgstr ""

#: ../../pep-0594.rst:1 ../../pep-0594.rst:611
msgid "telnetlib3_, Exscript_"
msgstr ""

#: ../../pep-0594.rst:1
msgid "uu"
msgstr ""

#: ../../pep-0594.rst:1 ../../pep-0594.rst:267
msgid "xdrlib"
msgstr ""

#: ../../pep-0594.rst:1
msgid "1992/1996"
msgstr ""

#: ../../pep-0594.rst:217
msgid ""
"Some module deprecations proposed by :pep:`3108` for 3.0 and :pep:`206` "
"for 2.0. The *added in* column illustrates, when a module was originally "
"designed and added to the standard library. The *has maintainer* column "
"refers to the `expert index <https://devguide.python.org/experts/>`_, a "
"list of domain experts and maintainers in the DevGuide."
msgstr ""

#: ../../pep-0594.rst:225
msgid "Data encoding modules"
msgstr ""

#: ../../pep-0594.rst:230
msgid ""
"The `binhex <https://docs.python.org/3/library/binhex.html>`_ module "
"encodes and decodes Apple Macintosh binhex4 data. It was originally "
"developed for TRS-80. In the 1980s and early 1990s it was used on classic"
" Mac OS 9 to encode binary email attachments."
msgstr ""

#: ../../pep-0594.rst:235 ../../pep-0594.rst:255 ../../pep-0594.rst:274
#: ../../pep-0594.rst:305 ../../pep-0594.rst:331 ../../pep-0594.rst:350
#: ../../pep-0594.rst:369 ../../pep-0594.rst:403 ../../pep-0594.rst:423
#: ../../pep-0594.rst:442 ../../pep-0594.rst:463 ../../pep-0594.rst:486
#: ../../pep-0594.rst:516 ../../pep-0594.rst:538 ../../pep-0594.rst:557
#: ../../pep-0594.rst:587 ../../pep-0594.rst:604 ../../pep-0594.rst:641
#: ../../pep-0594.rst:663 ../../pep-0594.rst:684 ../../pep-0594.rst:713
#: ../../pep-0594.rst:734 ../../pep-0594.rst:754 ../../pep-0594.rst:778
#: ../../pep-0594.rst:809 ../../pep-0594.rst:828 ../../pep-0594.rst:851
#: ../../pep-0594.rst:895 ../../pep-0594.rst:916 ../../pep-0594.rst:930
#: ../../pep-0594.rst:945 ../../pep-0594.rst:961 ../../pep-0594.rst:987
msgid "Module type"
msgstr ""

#: ../../pep-0594.rst:236 ../../pep-0594.rst:256 ../../pep-0594.rst:275
#: ../../pep-0594.rst:351 ../../pep-0594.rst:370 ../../pep-0594.rst:464
#: ../../pep-0594.rst:487 ../../pep-0594.rst:517 ../../pep-0594.rst:539
#: ../../pep-0594.rst:558 ../../pep-0594.rst:588 ../../pep-0594.rst:605
#: ../../pep-0594.rst:664 ../../pep-0594.rst:735 ../../pep-0594.rst:829
#: ../../pep-0594.rst:896 ../../pep-0594.rst:917 ../../pep-0594.rst:931
#: ../../pep-0594.rst:946 ../../pep-0594.rst:962
msgid "pure Python"
msgstr ""

#: ../../pep-0594.rst:239 ../../pep-0594.rst:259 ../../pep-0594.rst:278
#: ../../pep-0594.rst:309 ../../pep-0594.rst:335 ../../pep-0594.rst:354
#: ../../pep-0594.rst:373 ../../pep-0594.rst:407 ../../pep-0594.rst:427
#: ../../pep-0594.rst:446 ../../pep-0594.rst:520 ../../pep-0594.rst:542
#: ../../pep-0594.rst:561 ../../pep-0594.rst:591 ../../pep-0594.rst:608
#: ../../pep-0594.rst:645 ../../pep-0594.rst:688 ../../pep-0594.rst:717
#: ../../pep-0594.rst:738 ../../pep-0594.rst:758 ../../pep-0594.rst:782
#: ../../pep-0594.rst:813 ../../pep-0594.rst:832
msgid "To be removed in"
msgstr ""

#: ../../pep-0594.rst:241 ../../pep-0594.rst:261 ../../pep-0594.rst:280
#: ../../pep-0594.rst:311 ../../pep-0594.rst:337 ../../pep-0594.rst:356
#: ../../pep-0594.rst:375 ../../pep-0594.rst:409 ../../pep-0594.rst:429
#: ../../pep-0594.rst:448 ../../pep-0594.rst:469 ../../pep-0594.rst:492
#: ../../pep-0594.rst:522 ../../pep-0594.rst:544 ../../pep-0594.rst:563
#: ../../pep-0594.rst:593 ../../pep-0594.rst:647 ../../pep-0594.rst:669
#: ../../pep-0594.rst:690 ../../pep-0594.rst:719 ../../pep-0594.rst:740
#: ../../pep-0594.rst:760 ../../pep-0594.rst:784 ../../pep-0594.rst:815
#: ../../pep-0594.rst:834 ../../pep-0594.rst:857 ../../pep-0594.rst:897
#: ../../pep-0594.rst:919 ../../pep-0594.rst:933 ../../pep-0594.rst:947
#: ../../pep-0594.rst:965 ../../pep-0594.rst:991
msgid "Has a designated expert"
msgstr ""

#: ../../pep-0594.rst:244 ../../pep-0594.rst:264 ../../pep-0594.rst:284
#: ../../pep-0594.rst:314 ../../pep-0594.rst:340 ../../pep-0594.rst:359
#: ../../pep-0594.rst:380 ../../pep-0594.rst:412 ../../pep-0594.rst:434
#: ../../pep-0594.rst:452 ../../pep-0594.rst:472 ../../pep-0594.rst:496
#: ../../pep-0594.rst:526 ../../pep-0594.rst:547 ../../pep-0594.rst:566
#: ../../pep-0594.rst:596 ../../pep-0594.rst:613 ../../pep-0594.rst:654
#: ../../pep-0594.rst:672 ../../pep-0594.rst:693 ../../pep-0594.rst:723
#: ../../pep-0594.rst:743 ../../pep-0594.rst:763 ../../pep-0594.rst:787
#: ../../pep-0594.rst:818 ../../pep-0594.rst:837 ../../pep-0594.rst:861
#: ../../pep-0594.rst:903 ../../pep-0594.rst:950 ../../pep-0594.rst:968
msgid "Substitute"
msgstr ""

#: ../../pep-0594.rst:244 ../../pep-0594.rst:264 ../../pep-0594.rst:283
#: ../../pep-0594.rst:314 ../../pep-0594.rst:340 ../../pep-0594.rst:359
#: ../../pep-0594.rst:412 ../../pep-0594.rst:451 ../../pep-0594.rst:525
#: ../../pep-0594.rst:547 ../../pep-0594.rst:596 ../../pep-0594.rst:672
#: ../../pep-0594.rst:693 ../../pep-0594.rst:787 ../../pep-0594.rst:860
msgid "**none**"
msgstr ""

#: ../../pep-0594.rst:247
msgid "uu and the uu encoding"
msgstr ""

#: ../../pep-0594.rst:249
msgid ""
"The `uu <https://docs.python.org/3/library/uu.html>`_ module provides "
"uuencode format, an old binary encoding format for email from 1980. The "
"uu format has been replaced by MIME. The uu codec is provided by the "
"``binascii`` module.  There's also ``encodings/uu_codec.py`` which is a "
"codec for the same encoding; it should also be deprecated."
msgstr ""

#: ../../pep-0594.rst:269
msgid ""
"The `xdrlib <https://docs.python.org/3/library/xdrlib.html>`_ module "
"supports the Sun External Data Representation Standard. XDR is an old "
"binary serialization format from 1987. These days it's rarely used "
"outside specialized domains like NFS."
msgstr ""

#: ../../pep-0594.rst:287
msgid "Multimedia modules"
msgstr ""

#: ../../pep-0594.rst:292
msgid ""
"The `aifc <https://docs.python.org/3/library/aifc.html>`_ module provides"
" support for reading and writing AIFF and AIFF-C files. The Audio "
"Interchange File Format is an old audio format from 1988 based on Amiga "
"IFF. It was most commonly used on the Apple Macintosh. These days only "
"few specialized application use AIFF."
msgstr ""

#: ../../pep-0594.rst:298
msgid ""
"A user disclosed [8]_ that the post production film industry makes heavy "
"use of the AIFC file format. The usage of the ``aifc`` module in closed "
"source and internal software was unknown prior to the first posting of "
"this PEP. This may be a compelling argument to keep the ``aifc`` module "
"in the standard library. The file format is stable and the module does "
"not require much maintenance. The strategic benefits for Python may "
"outmatch the burden."
msgstr ""

#: ../../pep-0594.rst:306
msgid "pure Python (depends on some functions from `audioop`_ C extension)"
msgstr ""

#: ../../pep-0594.rst:312 ../../pep-0594.rst:648
msgid "yes, but expert is currently inactive."
msgstr ""

#: ../../pep-0594.rst:319
msgid ""
"The `audioop <https://docs.python.org/3/library/audioop.html>`_ module "
"contains helper functions to manipulate raw audio data and adaptive "
"differential pulse-code modulated audio data. The module is implemented "
"in C without any additional dependencies. The `aifc`_, `sunau`_, and "
"`wave`_ modules depend on `audioop`_ for some operations."
msgstr ""

#: ../../pep-0594.rst:325
msgid ""
"The byteswap operation in the ``wave`` module can be substituted with "
"little extra work. In case ``aifc`` is not deprecated as well, a reduced "
"version of the ``audioop`` module is converted into a private "
"implementation detail, e.g. ``_audioop`` with ``byteswap``, ``alaw2lin``,"
" ``ulaw2lin``, ``lin2alaw``, ``lin2ulaw``, and ``lin2adpcm``."
msgstr ""

#: ../../pep-0594.rst:332 ../../pep-0594.rst:404 ../../pep-0594.rst:685
#: ../../pep-0594.rst:714 ../../pep-0594.rst:755 ../../pep-0594.rst:810
msgid "C extension"
msgstr ""

#: ../../pep-0594.rst:338 ../../pep-0594.rst:470 ../../pep-0594.rst:493
#: ../../pep-0594.rst:564 ../../pep-0594.rst:966
msgid "yes"
msgstr ""

#: ../../pep-0594.rst:345
msgid ""
"The `chunk <https://docs.python.org/3/library/chunk.html>`_ module "
"provides support for reading and writing Electronic Arts' Interchange "
"File Format. IFF is an old audio file format originally introduced for "
"Commodore and Amiga. The format is no longer relevant."
msgstr ""

#: ../../pep-0594.rst:364
msgid ""
"The `imghdr <https://docs.python.org/3/library/imghdr.html>`_ module is a"
" simple tool to guess the image file format from the first 32 bytes of a "
"file or buffer. It supports only a limited number of formats and neither "
"returns resolution nor color depth."
msgstr ""

#: ../../pep-0594.rst:378 ../../pep-0594.rst:432
msgid ""
"`puremagic <https://pypi.org/project/puremagic/>`_, `filetype "
"<https://pypi.org/project/filetype/>`_, `python-magic "
"<https://pypi.org/project/python-magic/>`_"
msgstr ""

#: ../../pep-0594.rst:385
msgid ""
"The `ossaudiodev <https://docs.python.org/3/library/ossaudiodev.html>`_ "
"module provides support for Open Sound System, an interface to sound "
"playback and capture devices. OSS was initially free software, but later "
"support for newer sound devices and improvements were proprietary. Linux "
"community abandoned OSS in favor of ALSA [1]_. Some operation systems "
"like OpenBSD and NetBSD provide an incomplete [2]_ emulation of OSS."
msgstr ""

#: ../../pep-0594.rst:392
msgid ""
"To best of my knowledge, FreeBSD is the only widespread operating system "
"that uses Open Sound System as of today. The ``ossaudiodev`` hasn't seen "
"any improvements or new features since 2003. All commits since 2003 are "
"project-wide code cleanups and a couple of bug fixes. It would be "
"beneficial for both FreeBSD community and core development, if the module"
" would be maintained and distributed by people that care for it and use "
"it."
msgstr ""

#: ../../pep-0594.rst:399
msgid ""
"The standard library used to have more audio-related modules. The other "
"audio device interface (``audiodev``, ``linuxaudiodev``, ``sunaudiodev``)"
" were removed in 2007 as part of the :pep:`3108` stdlib re-organization."
msgstr ""

#: ../../pep-0594.rst:417
msgid ""
"The `sndhdr <https://docs.python.org/3/library/sndhdr.html>`_ module is "
"similar to the `imghdr`_ module but for audio formats. It guesses file "
"format, channels, frame rate, and sample widths from the first 512 bytes "
"of a file or buffer. The module only supports AU, AIFF, HCOM, VOC, WAV, "
"and other ancient formats."
msgstr ""

#: ../../pep-0594.rst:424 ../../pep-0594.rst:443
msgid "pure Python (depends on `audioop`_ C extension for some operations)"
msgstr ""

#: ../../pep-0594.rst:439
msgid ""
"The `sunau <https://docs.python.org/3/library/sunhdr.html>`_ module "
"provides support for Sun AU sound format. It's yet another old, obsolete "
"file format."
msgstr ""

#: ../../pep-0594.rst:455
msgid "Networking modules"
msgstr ""

#: ../../pep-0594.rst:460
msgid ""
"The `asynchat <https://docs.python.org/3/library/asynchat.html>`_ module "
"is built on top of `asyncore`_ and has been deprecated since Python 3.6."
msgstr ""

#: ../../pep-0594.rst:466 ../../pep-0594.rst:489
msgid "3.6"
msgstr ""

#: ../../pep-0594.rst:467 ../../pep-0594.rst:490 ../../pep-0594.rst:667
#: ../../pep-0594.rst:855
msgid "Removed in"
msgstr ""

#: ../../pep-0594.rst:472 ../../pep-0594.rst:495
msgid "asyncio"
msgstr ""

#: ../../pep-0594.rst:477
msgid ""
"The `asyncore <https://docs.python.org/3/library/asyncore.html>`_ module "
"was the first module for asynchronous socket service clients and servers."
" It has been replaced by asyncio and is deprecated since Python 3.6."
msgstr ""

#: ../../pep-0594.rst:481
msgid ""
"The ``asyncore`` module is also used in stdlib tests. The tests for "
"``ftplib``, ``logging``, ``smptd``, ``smtplib``, and ``ssl`` are partly "
"based on ``asyncore``. These tests must be updated to use asyncio or "
"threading."
msgstr ""

#: ../../pep-0594.rst:501
msgid ""
"The `cgi <https://docs.python.org/3/library/cgi.html>`_ module is a "
"support module for Common Gateway Interface (CGI) scripts. CGI is deemed "
"as inefficient because every incoming request is handled in a new "
"process. :pep:`206` considers the module as:"
msgstr ""

#: ../../pep-0594.rst:506
msgid ""
"\"[...] designed poorly and are now near-impossible to fix (``cgi``) "
"[...]\""
msgstr ""

#: ../../pep-0594.rst:508
msgid ""
"Several people proposed to either keep the ``cgi`` module for features "
"like ``cgi.parse_qs`` or move ``cgi.escape`` to a different module. The "
"functions ``cgi.parse_qs`` and ``cgi.parse_qsl`` have been deprecated for"
" a while and are actually aliases for ``urllib.parse.parse_qs`` and "
"``urllib.parse.parse_qsl``. The function ``cgi.quote`` has been "
"deprecated in favor of ``html.quote`` with secure default values."
msgstr ""

#: ../../pep-0594.rst:519 ../../pep-0594.rst:541
msgid "3.8 (originally proposed for 2.0 by :pep:`206`)"
msgstr ""

#: ../../pep-0594.rst:531
msgid ""
"The `cgitb <https://docs.python.org/3/library/cgitb.html>`_ module is a "
"helper for the ``cgi`` module for configurable tracebacks."
msgstr ""

#: ../../pep-0594.rst:534
msgid ""
"The ``cgitb`` module is not used by any major Python web framework "
"(Django, Pyramid, Plone, Flask, CherryPy, or Bottle). Only Paste uses it "
"in an optional debugging middleware."
msgstr ""

#: ../../pep-0594.rst:552
msgid ""
"The `smtpd <https://docs.python.org/3/library/smtpd.html>`_ module "
"provides a simple implementation of a SMTP mail server. The module "
"documentation marks the module as deprecated and recommends ``aiosmtpd`` "
"instead. The deprecation message was added in releases 3.4.7, 3.5.4, and "
"3.6.1."
msgstr ""

#: ../../pep-0594.rst:560
msgid "**3.4.7**, **3.5.4**, **3.6.1**"
msgstr ""

#: ../../pep-0594.rst:566
msgid "aiosmtpd"
msgstr ""

#: ../../pep-0594.rst:571
msgid ""
"The `nntplib <https://docs.python.org/3/library/nntplib.html>`_ module "
"implements the client side of the Network News Transfer Protocol (nntp). "
"News groups used to be a dominant platform for online discussions. Over "
"the last two decades, news has been slowly but steadily replaced with "
"mailing lists and web-based discussion platforms. Twisted is also "
"`planning <https://twistedmatrix.com/trac/ticket/9405>`_ to deprecate "
"NNTP support and `pynntp <https://github.com/greenbender/pynntp>`_ hasn't"
" seen any activity since 2014. This is a good indicator that the public "
"interest in NNTP support is declining."
msgstr ""

#: ../../pep-0594.rst:581
msgid ""
"The ``nntplib`` tests have been the cause of additional work in the "
"recent past. Python only contains client side of NNTP. The tests connect "
"to external news server. The servers are sometimes unavailable, too slow,"
" or do not work correctly over IPv6. The situation causes flaky test runs"
" on buildbots."
msgstr ""

#: ../../pep-0594.rst:601
msgid ""
"The `telnetlib <https://docs.python.org/3/library/telnetlib.html>`_ "
"module provides a Telnet class that implements the Telnet protocol."
msgstr ""

#: ../../pep-0594.rst:616
msgid "Operating system interface"
msgstr ""

#: ../../pep-0594.rst:621
msgid ""
"The `crypt <https://docs.python.org/3/library/crypt.html>`_ module "
"implements password hashing based on the ``crypt(3)`` function from "
"``libcrypt`` or ``libxcrypt`` on Unix-like platforms. The algorithms are "
"mostly old, of poor quality and insecure. Users are discouraged to use "
"them."
msgstr ""

#: ../../pep-0594.rst:626
msgid ""
"The module is not available on Windows. Cross-platform applications need "
"an alternative implementation anyway."
msgstr ""

#: ../../pep-0594.rst:628
msgid ""
"Only DES encryption is guaranteed to be available. DES has an extremely "
"limited key space of 2**56."
msgstr ""

#: ../../pep-0594.rst:630
msgid ""
"MD5, salted SHA256, salted SHA512, and Blowfish are optional extensions. "
"SSHA256 and SSHA512 are glibc extensions. Blowfish (bcrypt) is the only "
"algorithm that is still secure. However it's in glibc and therefore not "
"commonly available on Linux."
msgstr ""

#: ../../pep-0594.rst:634
msgid ""
"Depending on the platform, the ``crypt`` module is not thread safe. Only "
"implementations with ``crypt_r(3)`` are thread safe."
msgstr ""

#: ../../pep-0594.rst:636
msgid ""
"The module was never useful to interact with system user and password "
"databases. On BSD, macOS, and Linux, all user authentication and password"
" modification operations must go through PAM (pluggable authentication "
"module), see `spwd`_ deprecation."
msgstr ""

#: ../../pep-0594.rst:642
msgid "C extension + Python module"
msgstr ""

#: ../../pep-0594.rst:650
msgid ""
"`legacycrypt <https://pypi.org/project/legacycrypt/>`_ (ctypes wrapper), "
"`bcrypt <https://pypi.org/project/bcrypt/>`_, `passlib "
"<https://pypi.org/project/passlib/>`_, `argon2cffi "
"<https://pypi.org/project/argon2-cffi/>`_, hashlib module (PBKDF2, "
"scrypt)"
msgstr ""

#: ../../pep-0594.rst:659
msgid ""
"The `macpath <https://docs.python.org/3/library/macpath.html>`_ module "
"provides Mac OS 9 implementation of ``os.path`` routines. Mac OS 9 is no "
"longer supported."
msgstr ""

#: ../../pep-0594.rst:666 ../../pep-0594.rst:854 ../../pep-0594.rst:856
msgid "3.7"
msgstr ""

#: ../../pep-0594.rst:677
msgid ""
"The `nis <https://docs.python.org/3/library/nis.html>`_ module provides "
"NIS/YP support. Network Information Service / Yellow Pages is an old and "
"deprecated directory service protocol developed by Sun Microsystems. It's"
" designed successor NIS+ from 1992 never took off. For a long time, "
"libc's Name Service Switch, LDAP, and Kerberos/GSSAPI are considered a "
"more powerful and more secure replacement of NIS."
msgstr ""

#: ../../pep-0594.rst:698
msgid ""
"The `spwd <https://docs.python.org/3/library/spwd.html>`_ module provides"
" direct access to Unix shadow password database using non-standard APIs."
msgstr ""

#: ../../pep-0594.rst:701
msgid ""
"In general it's a bad idea to use spwd. It circumvents system security "
"policies, does not use the PAM stack, and is only compatible with local "
"user accounts, because it ignores NSS. The use of the ``spwd`` module for"
" access control must be considered a *security bug*, as it bypasses PAM's"
" access control."
msgstr ""

#: ../../pep-0594.rst:707
msgid ""
"Further more the ``spwd`` module uses the `shadow(3) "
"<http://man7.org/linux/man-pages/man3/shadow.3.html>`_ APIs. Functions "
"like ``getspnam(3)`` access the ``/etc/shadow`` file directly. This is "
"dangerous and even forbidden for confined services on systems with a "
"security engine like SELinux or AppArmor."
msgstr ""

#: ../../pep-0594.rst:722
msgid ""
"`python-pam <https://pypi.org/project/python-pam/>`_, `simpleplam "
"<https://pypi.org/project/simplepam/>`_"
msgstr ""

#: ../../pep-0594.rst:726
msgid "Misc modules"
msgstr ""

#: ../../pep-0594.rst:731
msgid ""
"The `formatter <https://docs.python.org/3/library/formatter.html>`_ "
"module is an old text formatting module which has been deprecated since "
"Python 3.4."
msgstr ""

#: ../../pep-0594.rst:737 ../../pep-0594.rst:757
msgid "3.4"
msgstr ""

#: ../../pep-0594.rst:743
msgid "*n/a*"
msgstr ""

#: ../../pep-0594.rst:748
msgid ""
"The `imp <https://docs.python.org/3/library/imp.html>`_ module is the "
"predecessor of the `importlib "
"<https://docs.python.org/3/library/importlib.html>`_ module. Most "
"functions have been deprecated since Python 3.3 and the module since "
"Python 3.4."
msgstr ""

#: ../../pep-0594.rst:761
msgid "yes, experts have deprecated the module"
msgstr ""

#: ../../pep-0594.rst:763
msgid "importlib"
msgstr ""

#: ../../pep-0594.rst:768
msgid ""
"The `msilib <https://docs.python.org/3/library/msilib.html>`_ package is "
"a Windows-only package. It supports the creation of Microsoft Installers "
"(MSI). The package also exposes additional APIs to create cabinet files "
"(CAB). The module is used to facilitate distutils to create MSI "
"installers with the ``bdist_msi`` command. In the past it was used to "
"create CPython's official Windows installer, too."
msgstr ""

#: ../../pep-0594.rst:775
msgid ""
"Microsoft is slowly moving away from MSI in favor of Windows 10 Apps "
"(AppX) as new deployment model [3]_."
msgstr ""

#: ../../pep-0594.rst:779
msgid "C extension + Python code"
msgstr ""

#: ../../pep-0594.rst:792
msgid ""
"The `parser <https://docs.python.org/3/library/parser.html>`_ module "
"provides an interface to Python’s internal parser and bytecode compiler. "
"The stdlib has superior ways to interact with the parse tree. From Python"
" 2.5 onward, it's much more convenient to cut in at the Abstract Syntax "
"Tree (AST) generation and compilation stage."
msgstr ""

#: ../../pep-0594.rst:798
msgid ""
"The ``parser`` module causes additional work. It's C code that must be "
"kept in sync with any change to Python's grammar and internal parser. "
"Pablo wants to remove the parser module and promote lib2to3's pgen2 "
"instead [6]_."
msgstr ""

#: ../../pep-0594.rst:803
msgid ""
"Most importantly the presence of the ``parser`` module makes it harder to"
" switch to something more powerful than a LL(1) parser [7]_. Since the "
"``parser`` module is documented as deprecated since Python 2.5 and a new "
"parsing technology is planned for 3.9, the ``parser`` module is scheduled"
" for removal in 3.9."
msgstr ""

#: ../../pep-0594.rst:812
msgid "3.8, documented as deprecated since **2.5**"
msgstr ""

#: ../../pep-0594.rst:816
msgid "yes, experts have deprecated the module."
msgstr ""

#: ../../pep-0594.rst:818
msgid "ast, lib2to3.pgen2"
msgstr ""

#: ../../pep-0594.rst:823
msgid ""
"The `pipes <https://docs.python.org/3/library/pipes.html>`_ module "
"provides helpers to pipe the input of one command into the output of "
"another command. The module is built on top of ``os.popen``. Users are "
"encouraged to use the subprocess module instead."
msgstr ""

#: ../../pep-0594.rst:837
msgid "subprocess module"
msgstr ""

#: ../../pep-0594.rst:840
msgid "Removed modules"
msgstr ""

#: ../../pep-0594.rst:845
msgid ""
"The `fpectl <https://docs.python.org/3.6/library/fpectl.html>`_ module "
"was never built by default, its usage was discouraged and considered "
"dangerous. It also required a configure flag that caused an ABI "
"incompatibility. The module was removed in 3.7 by Nathaniel J. Smith in "
"`bpo-29137 <https://bugs.python.org/issue29137>`_."
msgstr ""

#: ../../pep-0594.rst:852
msgid "C extension + CAPI"
msgstr ""

#: ../../pep-0594.rst:864
msgid "Modules to keep"
msgstr ""

#: ../../pep-0594.rst:866
msgid "Some modules were originally proposed for deprecation."
msgstr ""

#: ../../pep-0594.rst:868
msgid "Table 2: Withdrawn deprecations"
msgstr ""

#: ../../pep-0594.rst:1 ../../pep-0594.rst:880
msgid "colorsys"
msgstr ""

#: ../../pep-0594.rst:1
msgid "colormath, colour, colorspacious, Pillow"
msgstr ""

#: ../../pep-0594.rst:1 ../../pep-0594.rst:906
msgid "fileinput"
msgstr ""

#: ../../pep-0594.rst:1 ../../pep-0594.rst:950 ../../pep-0594.rst:968
msgid "argparse"
msgstr ""

#: ../../pep-0594.rst:1 ../../pep-0594.rst:936
msgid "getopt"
msgstr ""

#: ../../pep-0594.rst:1
msgid "argparse, optparse"
msgstr ""

#: ../../pep-0594.rst:1 ../../pep-0594.rst:922
msgid "lib2to3"
msgstr ""

#: ../../pep-0594.rst:1 ../../pep-0594.rst:953
msgid "optparse"
msgstr ""

#: ../../pep-0594.rst:1
msgid "**3.2**"
msgstr ""

#: ../../pep-0594.rst:1 ../../pep-0594.rst:971
msgid "wave"
msgstr ""

#: ../../pep-0594.rst:882
msgid ""
"The `colorsys <https://docs.python.org/3/library/colorsys.html>`_ module "
"defines color conversion functions between RGB, YIQ, HSL, and HSV "
"coordinate systems."
msgstr ""

#: ../../pep-0594.rst:886
msgid ""
"Walter Dörwald, Petr Viktorin, and others requested to keep ``colorsys``."
" The module is useful to convert CSS colors between coordinate systems. "
"The implementation is simple, mature, and does not impose maintenance "
"overhead on core development."
msgstr ""

#: ../../pep-0594.rst:891
msgid ""
"The PyPI packages ``colormath``, ``colour``, and ``colorspacious`` "
"provide more and advanced features. The Pillow library is better suited "
"to transform images between color systems."
msgstr ""

#: ../../pep-0594.rst:900
msgid ""
"`colormath <https://pypi.org/project/colormath/>`_, `colour "
"<https://pypi.org/project/colour/>`_ `colorspacious "
"<https://pypi.org/project/colorspacious/>`_, `Pillow "
"<https://pypi.org/project/Pillow/>`_"
msgstr ""

#: ../../pep-0594.rst:908
msgid ""
"The `fileinput <https://docs.python.org/3/library/fileinput.html>`_ "
"module implements helpers to iterate over a list of files from "
"``sys.argv``. The module predates the ``optparser`` and ``argparser`` "
"modules. The same functionality can be implemented with the ``argparser``"
" module."
msgstr ""

#: ../../pep-0594.rst:913
msgid ""
"Several core developers expressed their interest to keep the module in "
"the standard library, as it is handy for quick scripts."
msgstr ""

#: ../../pep-0594.rst:924
msgid ""
"The `lib2to3 <https://docs.python.org/3/library/2to3.html>`_ package "
"provides the ``2to3`` command to transpile Python 2 code to Python 3 "
"code."
msgstr ""

#: ../../pep-0594.rst:927
msgid ""
"The package is useful for other tasks besides porting code from Python 2 "
"to 3. For example, `Black`_ uses it for code reformatting."
msgstr ""

#: ../../pep-0594.rst:938
msgid ""
"The `getopt <https://docs.python.org/3/library/getopt.html>`_ module "
"mimics C's ``getopt()`` option parser."
msgstr ""

#: ../../pep-0594.rst:941
msgid ""
"Although users are encouraged to use ``argparse`` instead, the ``getopt``"
" module is still widely used. The module is small, simple, and handy for "
"C developers to write simple Python scripts."
msgstr ""

#: ../../pep-0594.rst:955
msgid ""
"The `optparse <https://docs.python.org/3/library/optparse.html>`_ module "
"is the predecessor of the ``argparse`` module."
msgstr ""

#: ../../pep-0594.rst:958
msgid ""
"Although it has been deprecated for many years, it's still too widely "
"used to remove it."
msgstr ""

#: ../../pep-0594.rst:964
msgid "3.2"
msgstr ""

#: ../../pep-0594.rst:973
msgid ""
"The `wave <https://docs.python.org/3/library/wave.html>`_ module provides"
" support for the WAV sound format."
msgstr ""

#: ../../pep-0594.rst:976
msgid ""
"The module is not deprecated, because The WAV format is still relevant "
"these days. The ``wave`` module is also used in education, e.g. to show "
"kids how to make noise with a computer."
msgstr ""

#: ../../pep-0594.rst:980
msgid ""
"The module uses one simple function from the `audioop`_ module to perform"
" byte swapping between little and big endian formats. Before 24 bit WAV "
"support was added, byte swap used to be implemented with the ``array`` "
"module. To remove ``wave``'s dependency on ``audioop``, the byte swap "
"function could be either be moved to another module (e.g. ``operator``) "
"or the ``array`` module could gain support for 24-bit (3-byte) arrays."
msgstr ""

#: ../../pep-0594.rst:988
msgid "pure Python (depends on *byteswap* from `audioop`_ C extension)"
msgstr ""

#: ../../pep-0594.rst:994
msgid "Future maintenance of removed modules"
msgstr ""

#: ../../pep-0594.rst:996
msgid ""
"The main goal of the PEP is to reduce the burden and workload on the "
"Python core developer team. Therefore, removed modules will not be "
"maintained by the core team as separate PyPI packages. However the "
"removed code, tests and documentation may be moved into a new Git "
"repository, so community members have a place from which they can pick up"
" and fork code."
msgstr ""

#: ../../pep-0594.rst:1002
msgid ""
"A first draft of a `legacylib <https://github.com/tiran/legacylib>`_ "
"repository is available on my private GitHub account. The modules could "
"be made available on PyPI. The Python core team will not publish or "
"maintain the packages. It is my hope that members of the Python community"
" will adopt, maintain, and perhaps improve the deprecated modules."
msgstr ""

#: ../../pep-0594.rst:1008
msgid ""
"It's my hope that some of the deprecated modules will be picked up and "
"adopted by users that actually care about them. For example, ``colorsys``"
" and ``imghdr`` are useful modules, but have limited feature set. A fork "
"of ``imghdr`` can add new features and support for more image formats, "
"without being constrained by Python's release cycle."
msgstr ""

#: ../../pep-0594.rst:1014
msgid ""
"Most of the modules are in pure Python and can be easily packaged. Some "
"depend on a simple C module, e.g. `audioop`_ and `crypt`_. Since "
"`audioop`_ does not depend on any external libraries, it can be shipped "
"as binary wheels with some effort. Other C modules can be replaced with "
"``ctypes`` or ``cffi``. For example, I created `legacycrypt`_, which "
"provides a full implementation of ``crypt``. It is implemented on top of "
"a ctypes wrapper around ``libxcrypt`` and ``libcrypt`` instead of a C "
"extension like the original ``_crypt`` module."
msgstr ""

#: ../../pep-0594.rst:1025
msgid "Discussions"
msgstr ""

#: ../../pep-0594.rst:1027
msgid "Elana Hashman and Nick Coghlan suggested to keep the ``getopt`` module."
msgstr ""

#: ../../pep-0594.rst:1028
msgid "Berker Peksag proposed to deprecate and removed ``msilib``."
msgstr ""

#: ../../pep-0594.rst:1029
msgid ""
"Brett Cannon recommended to delay active deprecation warnings and removal"
" of modules like ``imp`` until Python 3.10. Version 3.8 will be released "
"shortly before Python 2 reaches end-of-life. A delay reduced churn for "
"users that migrate from Python 2 to 3.8."
msgstr ""

#: ../../pep-0594.rst:1033
msgid ""
"Brett also came up with the idea to keep ``lib2to3``. The package is "
"useful for other purposes, e.g. `Black "
"<https://pypi.org/project/black/>`_ uses it to reformat Python code."
msgstr ""

#: ../../pep-0594.rst:1036
msgid ""
"At one point, distutils was mentioned in the same sentence as this PEP. "
"To avoid lengthy discussion and delay of the PEP, I decided against "
"dealing with distutils. Deprecation of the distutils package will be "
"handled by another PEP."
msgstr ""

#: ../../pep-0594.rst:1040
msgid ""
"Multiple people (Gregory P. Smith, David Beazley, Nick Coghlan, ...) "
"convinced me to keep the `wave`_ module. [4]_"
msgstr ""

#: ../../pep-0594.rst:1042
msgid "Gregory P. Smith proposed to deprecate `nntplib`_. [4]_"
msgstr ""

#: ../../pep-0594.rst:1043
msgid ""
"Andrew Svetlov mentioned the ``socketserver`` module is questionable. "
"However it's used to implement ``http.server`` and ``xmlrpc.server``. The"
" stdlib doesn't have a replacement for the servers, yet."
msgstr ""

#: ../../pep-0594.rst:1049
msgid "Update history"
msgstr ""

#: ../../pep-0594.rst:1052
msgid "Update 1"
msgstr ""

#: ../../pep-0594.rst:1054
msgid "Deprecate `parser`_ module"
msgstr ""

#: ../../pep-0594.rst:1055
msgid "Keep `fileinput`_ module"
msgstr ""

#: ../../pep-0594.rst:1056
msgid "Elaborate why ``crypt`` and ``spwd`` are dangerous and bad"
msgstr ""

#: ../../pep-0594.rst:1057
msgid ""
"Improve sections for `cgitb`_, `colorsys`_, `nntplib`_, and `smtpd`_ "
"modules"
msgstr ""

#: ../../pep-0594.rst:1058
msgid ""
"The `colorsys`_, ``crypt``, `imghdr`_, `sndhdr`_, and ``spwd`` sections "
"now list suitable substitutions"
msgstr ""

#: ../../pep-0594.rst:1060
msgid ""
"Mention that ``socketserver`` is going to stay for ``http.server`` and "
"``xmlrpc.server``"
msgstr ""

#: ../../pep-0594.rst:1062
msgid ""
"The future maintenance section now states that the deprecated modules may"
" be adopted by Python community members"
msgstr ""

#: ../../pep-0594.rst:1066
msgid "Update 2"
msgstr ""

#: ../../pep-0594.rst:1068
msgid "Keep ``colorsys`` module"
msgstr ""

#: ../../pep-0594.rst:1069
msgid "Add experts"
msgstr ""

#: ../../pep-0594.rst:1070
msgid "Redirect discussions to discuss.python.org"
msgstr ""

#: ../../pep-0594.rst:1071
msgid "Deprecate `telnetlib`_"
msgstr ""

#: ../../pep-0594.rst:1072
msgid "Deprecate compat32 policy of email package"
msgstr ""

#: ../../pep-0594.rst:1073
msgid "Add creation year to overview table"
msgstr ""

#: ../../pep-0594.rst:1074
msgid "Mention :pep:`206` and :pep:`3108`"
msgstr ""

#: ../../pep-0594.rst:1075
msgid "Update sections for ``aifc``, ``audioop``, ``cgi``, and ``wave``."
msgstr ""

#: ../../pep-0594.rst:1078
msgid "Update 3"
msgstr ""

#: ../../pep-0594.rst:1079
msgid ""
"Keep the legacy email API modules.  Internal deprecations will be handled"
" separately."
msgstr ""

#: ../../pep-0594.rst:1084
msgid "References"
msgstr ""

#: ../../pep-0594.rst:1086
msgid "https://en.wikipedia.org/wiki/Open_Sound_System#Free,_proprietary,_free"
msgstr ""

#: ../../pep-0594.rst:1087
msgid "https://man.openbsd.org/ossaudio"
msgstr ""

#: ../../pep-0594.rst:1088
msgid ""
"https://blogs.msmvps.com/installsite/blog/2015/05/03/the-future-of-"
"windows-installer-msi-in-the-light-of-windows-10-and-the-universal-"
"windows-platform/"
msgstr ""

#: ../../pep-0594.rst:1089
msgid "https://twitter.com/ChristianHeimes/status/1130257799475335169"
msgstr ""

#: ../../pep-0594.rst:1090
msgid "https://twitter.com/dabeaz/status/1130278844479545351"
msgstr ""

#: ../../pep-0594.rst:1091
msgid "https://mail.python.org/pipermail/python-dev/2019-May/157464.html"
msgstr ""

#: ../../pep-0594.rst:1092
msgid ""
"https://discuss.python.org/t/switch-pythons-parsing-tech-to-something-"
"more-powerful-than-ll-1/379"
msgstr ""

#: ../../pep-0594.rst:1093
msgid "https://mail.python.org/pipermail/python-dev/2019-May/157634.html"
msgstr ""

#: ../../pep-0594.rst:1097
msgid "Copyright"
msgstr ""

#: ../../pep-0594.rst:1099
msgid "This document has been placed in the public domain."
msgstr ""

