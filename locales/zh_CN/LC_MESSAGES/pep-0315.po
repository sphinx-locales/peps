# SOME DESCRIPTIVE TITLE.
# Copyright (C)
# This file is distributed under the same license as the PEPs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PEPs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-11-12 17:38+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../pep-0315.txt
msgid "PEP"
msgstr ""

#: ../../pep-0315.txt:1
msgid "315"
msgstr ""

#: ../../pep-0315.txt
msgid "Title"
msgstr ""

#: ../../pep-0315.txt:2
msgid "Enhanced While Loop"
msgstr ""

#: ../../pep-0315.txt
msgid "Author"
msgstr ""

#: ../../pep-0315.txt:5
msgid "Raymond Hettinger <python@rcn.com>, W Isaac Carroll <icarroll@pobox.com>"
msgstr ""

#: ../../pep-0315.txt
msgid "Status"
msgstr ""

#: ../../pep-0315.txt:6
msgid "Rejected"
msgstr ""

#: ../../pep-0315.txt
msgid "Type"
msgstr ""

#: ../../pep-0315.txt:7
msgid "Standards Track"
msgstr ""

#: ../../pep-0315.txt
msgid "Created"
msgstr ""

#: ../../pep-0315.txt:9
msgid "25-Apr-2003"
msgstr ""

#: ../../pep-0315.txt
msgid "Python-Version"
msgstr ""

#: ../../pep-0315.txt:10
msgid "2.5"
msgstr ""

#: ../../pep-0315.txt
msgid "Post-History"
msgstr ""

#: ../../pep-0315.txt:15
msgid "Abstract"
msgstr ""

#: ../../pep-0315.txt:17
msgid ""
"This PEP proposes adding an optional \"do\" clause to the beginning of "
"the while loop to make loop code clearer and reduce errors caused by code"
" duplication."
msgstr ""

#: ../../pep-0315.txt:23
msgid "Notice"
msgstr ""

#: ../../pep-0315.txt:25
msgid "Rejected; see [1]_."
msgstr ""

#: ../../pep-0315.txt:27
msgid "This PEP has been deferred since 2006; see [2]_."
msgstr ""

#: ../../pep-0315.txt:29
msgid ""
"Subsequent efforts to revive the PEP in April 2009 did not meet with "
"success because no syntax emerged that could compete with the following "
"form::"
msgstr ""

#: ../../pep-0315.txt:39
msgid ""
"A syntax alternative to the one proposed in the PEP was found for a basic"
" do-while loop but it gained little support because the condition was at "
"the top::"
msgstr ""

#: ../../pep-0315.txt:46
msgid ""
"Users of the language are advised to use the while-True form with an "
"inner if-break when a do-while loop would have been appropriate."
msgstr ""

#: ../../pep-0315.txt:51
msgid "Motivation"
msgstr ""

#: ../../pep-0315.txt:53
msgid ""
"It is often necessary for some code to be executed before each evaluation"
" of the while loop condition.  This code is often duplicated outside the "
"loop, as setup code that executes once before entering the loop::"
msgstr ""

#: ../../pep-0315.txt:63
msgid ""
"The problem is that duplicated code can be a source of errors if one "
"instance is changed but the other is not.  Also, the purpose of the "
"second instance of the setup code is not clear because it comes at the "
"end of the loop."
msgstr ""

#: ../../pep-0315.txt:68
msgid ""
"It is possible to prevent code duplication by moving the loop condition "
"into a helper function, or an if statement in the loop body.  However, "
"separating the loop condition from the while keyword makes the behavior "
"of the loop less clear::"
msgstr ""

#: ../../pep-0315.txt:80
msgid ""
"This last form has the additional drawback of requiring the loop's else "
"clause to be added to the body of the if statement, further obscuring the"
" loop's behavior::"
msgstr ""

#: ../../pep-0315.txt:89
msgid ""
"This PEP proposes to solve these problems by adding an optional clause to"
" the while loop, which allows the setup code to be expressed in a natural"
" way::"
msgstr ""

#: ../../pep-0315.txt:98
msgid ""
"This keeps the loop condition with the while keyword where it belongs, "
"and does not require code to be duplicated."
msgstr ""

#: ../../pep-0315.txt:103
msgid "Syntax"
msgstr ""

#: ../../pep-0315.txt:105
msgid "The syntax of the while statement ::"
msgstr ""

#: ../../pep-0315.txt:110
msgid "is extended as follows::"
msgstr ""

#: ../../pep-0315.txt:118
msgid "Semantics of break and continue"
msgstr ""

#: ../../pep-0315.txt:120
msgid ""
"In the do-while loop the break statement will behave the same as in the "
"standard while loop: It will immediately terminate the loop without "
"evaluating the loop condition or executing the else clause."
msgstr ""

#: ../../pep-0315.txt:125
msgid ""
"A continue statement in the do-while loop jumps to the while condition "
"check."
msgstr ""

#: ../../pep-0315.txt:128
msgid ""
"In general, when the while suite is empty (a pass statement), the do-"
"while loop and break and continue statements should match the semantics "
"of do-while in other languages."
msgstr ""

#: ../../pep-0315.txt:132
msgid ""
"Likewise, when the do suite is empty, the do-while loop and break and "
"continue statements should match behavior found in regular while loops."
msgstr ""

#: ../../pep-0315.txt:138
msgid "Future Statement"
msgstr ""

#: ../../pep-0315.txt:140
msgid "Because of the new keyword \"do\", the statement ::"
msgstr ""

#: ../../pep-0315.txt:144
msgid "will initially be required to use the do-while form."
msgstr ""

#: ../../pep-0315.txt:148
msgid "Implementation"
msgstr ""

#: ../../pep-0315.txt:150
msgid ""
"The first implementation of this PEP can compile the do-while loop as an "
"infinite loop with a test that exits the loop."
msgstr ""

#: ../../pep-0315.txt:155
msgid "References"
msgstr ""

#: ../../pep-0315.txt:157
msgid ""
"Guido van Rossum, PEP 315: do-while https://mail.python.org/pipermail"
"/python-ideas/2013-June/021610.html"
msgstr ""

#: ../../pep-0315.txt:160
msgid ""
"Raymond Hettinger, release plan for 2.5 ? "
"https://mail.python.org/pipermail/python-dev/2006-February/060718.html"
msgstr ""

#: ../../pep-0315.txt:165
msgid "Copyright"
msgstr ""

#: ../../pep-0315.txt:167
msgid "This document is placed in the public domain."
msgstr ""

