# SOME DESCRIPTIVE TITLE.
# Copyright (C)
# This file is distributed under the same license as the PEPs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PEPs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-11-12 17:38+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../pep-0005.txt
msgid "PEP"
msgstr ""

#: ../../pep-0005.txt:1
msgid "5"
msgstr ""

#: ../../pep-0005.txt
msgid "Title"
msgstr ""

#: ../../pep-0005.txt:2
msgid "Guidelines for Language Evolution"
msgstr ""

#: ../../pep-0005.txt
msgid "Author"
msgstr ""

#: ../../pep-0005.txt:5
msgid "paul@prescod.net (Paul Prescod)"
msgstr ""

#: ../../pep-0005.txt
msgid "Status"
msgstr ""

#: ../../pep-0005.txt:6
msgid "Active"
msgstr ""

#: ../../pep-0005.txt
msgid "Type"
msgstr ""

#: ../../pep-0005.txt:7
msgid "Process"
msgstr ""

#: ../../pep-0005.txt
msgid "Created"
msgstr ""

#: ../../pep-0005.txt:9
msgid "26-Oct-2000"
msgstr ""

#: ../../pep-0005.txt
msgid "Post-History"
msgstr ""

#: ../../pep-0005.txt:14
msgid "Abstract"
msgstr ""

#: ../../pep-0005.txt:16
msgid ""
"In the natural evolution of programming languages it is sometimes "
"necessary to make changes that modify the behavior of older programs. "
"This PEP proposes a policy for implementing these changes in a manner "
"respectful of the installed base of Python users."
msgstr ""

#: ../../pep-0005.txt:23
msgid "Implementation Details"
msgstr ""

#: ../../pep-0005.txt:25
msgid ""
"Implementation of this PEP requires the addition of a formal warning and "
"deprecation facility that will be described in another proposal."
msgstr ""

#: ../../pep-0005.txt:30
msgid "Scope"
msgstr ""

#: ../../pep-0005.txt:32
msgid ""
"These guidelines apply to future versions of Python that introduce "
"backward-incompatible behavior.  Backward incompatible behavior is a "
"major deviation in Python interpretation from an earlier behavior "
"described in the standard Python documentation.  Removal of a feature "
"also constitutes a change of behavior."
msgstr ""

#: ../../pep-0005.txt:38
msgid ""
"This PEP does not replace or preclude other compatibility strategies such"
" as dynamic loading of backwards-compatible parsers.  On the other hand, "
"if execution of \"old code\" requires a special switch or pragma then "
"that is indeed a change of behavior from the point of view of the user "
"and that change should be implemented according to these guidelines."
msgstr ""

#: ../../pep-0005.txt:45
msgid ""
"In general, common sense must prevail in the implementation of these "
"guidelines.  For instance changing \"sys.copyright\" does not constitute "
"a backwards-incompatible change of behavior!"
msgstr ""

#: ../../pep-0005.txt:51
msgid "Steps For Introducing Backwards-Incompatible Features"
msgstr ""

#: ../../pep-0005.txt:53
msgid ""
"Propose backwards-incompatible behavior in a PEP.  The PEP must include a"
" section on backwards compatibility that describes in detail a plan to "
"complete the remainder of these steps."
msgstr ""

#: ../../pep-0005.txt:57
msgid ""
"Once the PEP is accepted as a productive direction, implement an "
"alternate way to accomplish the task previously provided by the feature "
"that is being removed or changed.  For instance if the addition operator "
"were scheduled for removal, a new version of Python could implement an "
"\"add()\" built-in function."
msgstr ""

#: ../../pep-0005.txt:63
msgid "Formally deprecate the obsolete construct in the Python documentation."
msgstr ""

#: ../../pep-0005.txt:66
msgid ""
"Add an optional warning mode to the parser that will inform users when "
"the deprecated construct is used.  In other words, all programs that will"
" behave differently in the future must trigger warnings in this mode.  "
"Compile-time warnings are preferable to runtime warnings.  The warning "
"messages should steer people from the deprecated construct to the "
"alternative construct."
msgstr ""

#: ../../pep-0005.txt:73
msgid ""
"There must be at least a one-year transition period between the release "
"of the transitional version of Python and the release of the backwards "
"incompatible version.  Users will have at least a year to test their "
"programs and migrate them from use of the deprecated construct to the "
"alternative one."
msgstr ""

