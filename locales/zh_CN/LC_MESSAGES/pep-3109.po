# SOME DESCRIPTIVE TITLE.
# Copyright (C)
# This file is distributed under the same license as the PEPs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PEPs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-11-12 17:38+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../pep-3109.txt
msgid "PEP"
msgstr ""

#: ../../pep-3109.txt:1
msgid "3109"
msgstr ""

#: ../../pep-3109.txt
msgid "Title"
msgstr ""

#: ../../pep-3109.txt:2
msgid "Raising Exceptions in Python 3000"
msgstr ""

#: ../../pep-3109.txt
msgid "Author"
msgstr ""

#: ../../pep-3109.txt:5
msgid "Collin Winter <collinwinter@google.com>"
msgstr ""

#: ../../pep-3109.txt
msgid "Status"
msgstr ""

#: ../../pep-3109.txt:6
msgid "Final"
msgstr ""

#: ../../pep-3109.txt
msgid "Type"
msgstr ""

#: ../../pep-3109.txt:7
msgid "Standards Track"
msgstr ""

#: ../../pep-3109.txt
msgid "Created"
msgstr ""

#: ../../pep-3109.txt:9
msgid "19-Jan-2006"
msgstr ""

#: ../../pep-3109.txt
msgid "Python-Version"
msgstr ""

#: ../../pep-3109.txt:10
msgid "3.0"
msgstr ""

#: ../../pep-3109.txt
msgid "Post-History"
msgstr ""

#: ../../pep-3109.txt:15
msgid "Abstract"
msgstr ""

#: ../../pep-3109.txt:17
msgid ""
"This PEP introduces changes to Python's mechanisms for raising exceptions"
" intended to reduce both line noise and the size of the language."
msgstr ""

#: ../../pep-3109.txt:23
msgid "Rationale"
msgstr ""

#: ../../pep-3109.txt:25
msgid ""
"One of Python's guiding maxims is \"there should be one -- and preferably"
" only one -- obvious way to do it\" [#zen]_. Python 2.x's ``raise`` "
"statement violates this principle, permitting multiple ways of expressing"
" the same thought. For example, these statements are equivalent: ::"
msgstr ""

#: ../../pep-3109.txt:35
msgid ""
"There is a third form of the ``raise`` statement, allowing arbitrary "
"tracebacks to be attached to an exception [#grammar]_: ::"
msgstr ""

#: ../../pep-3109.txt:40
msgid ""
"where T is a traceback. As specified in PEP 344 [#pep344]_, exception "
"objects in Python 3.x will possess a ``__traceback__`` attribute, "
"admitting this translation of the three-expression ``raise`` statement: "
"::"
msgstr ""

#: ../../pep-3109.txt:47
msgid "is translated to ::"
msgstr ""

#: ../../pep-3109.txt:53
msgid ""
"Using these translations, we can reduce the ``raise`` statement from four"
" forms to two:"
msgstr ""

#: ../../pep-3109.txt:56
msgid ""
"``raise`` (with no arguments) is used to re-raise the active exception in"
" an ``except`` suite."
msgstr ""

#: ../../pep-3109.txt:59
msgid ""
"``raise EXCEPTION`` is used to raise a new exception. This form has two "
"sub-variants: ``EXCEPTION`` may be an exception class or an instance of "
"an exception class; valid exception classes are BaseException and its "
"subclasses [#pep352]_. If ``EXCEPTION`` is a subclass, it will be called "
"with no arguments to obtain an exception instance."
msgstr ""

#: ../../pep-3109.txt:66
msgid "To raise anything else is an error."
msgstr ""

#: ../../pep-3109.txt:68
msgid ""
"There is a further, more tangible benefit to be obtained through this "
"consolidation, as noted by A.M. Kuchling [#amk-line-noise]_. ::"
msgstr ""

#: ../../pep-3109.txt:80
msgid ""
"The BDFL has concurred [#guido-declaration]_ and endorsed the "
"consolidation of the several ``raise`` forms."
msgstr ""

#: ../../pep-3109.txt:85
msgid "Grammar Changes"
msgstr ""

#: ../../pep-3109.txt:87
msgid ""
"In Python 3, the grammar for ``raise`` statements will change from "
"[#grammar]_ ::"
msgstr ""

#: ../../pep-3109.txt:92 ../../pep-3109.txt:107 ../../pep-3109.txt:152
#: ../../pep-3109.txt:160 ../../pep-3109.txt:170 ../../pep-3109.txt:180
msgid "to ::"
msgstr ""

#: ../../pep-3109.txt:98
msgid "Changes to Builtin Types"
msgstr ""

#: ../../pep-3109.txt:100
msgid ""
"Because of its relation to exception raising, the signature for the "
"``throw()`` method on generator objects will change, dropping the "
"optional second and third parameters. The signature thus changes from "
"[#throw-sig]_ ::"
msgstr ""

#: ../../pep-3109.txt:111
msgid ""
"Where ``EXCEPTION`` is either a subclass of ``BaseException`` or an "
"instance of a subclass of ``BaseException``."
msgstr ""

#: ../../pep-3109.txt:116
msgid "Semantic Changes"
msgstr ""

#: ../../pep-3109.txt:118
msgid "In Python 2, the following ``raise`` statement is legal ::"
msgstr ""

#: ../../pep-3109.txt:122
msgid ""
"The interpreter will take the tuple's first element as the exception type"
" (recursively), making the above fully equivalent to ::"
msgstr ""

#: ../../pep-3109.txt:127
msgid ""
"As of Python 3.0, support for raising tuples like this will be dropped. "
"This change will bring ``raise`` statements into line with the "
"``throw()`` method on generator objects, which already disallows this."
msgstr ""

#: ../../pep-3109.txt:134
msgid "Compatibility Issues"
msgstr ""

#: ../../pep-3109.txt:136
msgid ""
"All two- and three-expression ``raise`` statements will require "
"modification, as will all two- and three-expression ``throw()`` calls on "
"generators. Fortunately, the translation from Python 2.x to Python 3.x in"
" this case is simple and can be handled mechanically by Guido van "
"Rossum's 2to3 utility [#2to3]_ using the ``raise`` and ``throw`` fixers "
"([#raise-fixer]_, [#throw-fixer]_)."
msgstr ""

#: ../../pep-3109.txt:143
msgid "The following translations will be performed:"
msgstr ""

#: ../../pep-3109.txt:145
msgid "Zero- and one-expression ``raise`` statements will be left intact."
msgstr ""

#: ../../pep-3109.txt:148
msgid "Two-expression ``raise`` statements will be converted from ::"
msgstr ""

#: ../../pep-3109.txt:156
msgid "Two-expression ``throw()`` calls will be converted from ::"
msgstr ""

#: ../../pep-3109.txt:164 ../../pep-3109.txt:186
msgid "See point #5 for a caveat to this transformation."
msgstr ""

#: ../../pep-3109.txt:166
msgid "Three-expression ``raise`` statements will be converted from ::"
msgstr ""

#: ../../pep-3109.txt:176
msgid "Three-expression ``throw()`` calls will be converted from ::"
msgstr ""

#: ../../pep-3109.txt:188
msgid ""
"Two- and three-expression ``raise`` statements where ``E`` is a tuple "
"literal can be converted automatically using ``2to3``'s ``raise`` fixer. "
"``raise`` statements where ``E`` is a non-literal tuple, e.g., the result"
" of a function call, will need to be converted manually."
msgstr ""

#: ../../pep-3109.txt:194
msgid ""
"Two- and three-expression ``raise`` statements where ``E`` is an "
"exception class and ``V`` is an exception instance will need special "
"attention. These cases break down into two camps:"
msgstr ""

#: ../../pep-3109.txt:198
msgid ""
"``raise E, V`` as a long-hand version of the zero-argument ``raise`` "
"statement. As an example, assuming F is a subclass of E ::"
msgstr ""

#: ../../pep-3109.txt:209 ../../pep-3109.txt:227
msgid "This would be better expressed as ::"
msgstr ""

#: ../../pep-3109.txt:218
msgid ""
"``raise E, V`` as a way of \"casting\" an exception to another class. "
"Taking an example from distutils.compiler.unixcompiler ::"
msgstr ""

#: ../../pep-3109.txt:234
msgid "Using the ``raise ... from ...`` syntax introduced in PEP 344."
msgstr ""

#: ../../pep-3109.txt:239
msgid "Implementation"
msgstr ""

#: ../../pep-3109.txt:241
msgid "This PEP was implemented in revision 57783 [#r57783]_."
msgstr ""

#: ../../pep-3109.txt:245
msgid "References"
msgstr ""

#: ../../pep-3109.txt:248
msgid "http://www.python.org/dev/peps/pep-0020/"
msgstr ""

#: ../../pep-3109.txt:251
msgid "http://docs.python.org/reference/simple_stmts.html#raise"
msgstr ""

#: ../../pep-3109.txt:254
msgid "http://www.python.org/dev/peps/pep-0342/"
msgstr ""

#: ../../pep-3109.txt:257
msgid "http://www.python.org/dev/peps/pep-0344/"
msgstr ""

#: ../../pep-3109.txt:260
msgid "http://www.python.org/dev/peps/pep-0352/"
msgstr ""

#: ../../pep-3109.txt:263
msgid "https://mail.python.org/pipermail/python-dev/2005-August/055187.html"
msgstr ""

#: ../../pep-3109.txt:266
msgid "https://mail.python.org/pipermail/python-dev/2005-August/055190.html"
msgstr ""

#: ../../pep-3109.txt:269
msgid "http://svn.python.org/view/sandbox/trunk/2to3/"
msgstr ""

#: ../../pep-3109.txt:272
msgid "http://svn.python.org/view/sandbox/trunk/2to3/fixes/fix_raise.py"
msgstr ""

#: ../../pep-3109.txt:275
msgid "http://svn.python.org/view/sandbox/trunk/2to3/fixes/fix_throw.py"
msgstr ""

#: ../../pep-3109.txt:278
msgid "http://svn.python.org/view/python/branches/py3k/Include/?rev=57783&view=rev"
msgstr ""

#: ../../pep-3109.txt:282
msgid "Copyright"
msgstr ""

#: ../../pep-3109.txt:284
msgid "This document has been placed in the public domain."
msgstr ""

