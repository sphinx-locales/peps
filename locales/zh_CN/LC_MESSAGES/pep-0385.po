# SOME DESCRIPTIVE TITLE.
# Copyright (C)
# This file is distributed under the same license as the PEPs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PEPs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-11-12 17:38+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../pep-0385.txt
msgid "PEP"
msgstr ""

#: ../../pep-0385.txt:1
msgid "385"
msgstr ""

#: ../../pep-0385.txt
msgid "Title"
msgstr ""

#: ../../pep-0385.txt:2
msgid "Migrating from Subversion to Mercurial"
msgstr ""

#: ../../pep-0385.txt
msgid "Author"
msgstr ""

#: ../../pep-0385.txt:5
msgid ""
"Dirkjan Ochtman <dirkjan@ochtman.nl>, Antoine Pitrou "
"<solipsis@pitrou.net>, Georg Brandl <georg@python.org>"
msgstr ""

#: ../../pep-0385.txt
msgid "Status"
msgstr ""

#: ../../pep-0385.txt:8
msgid "Final"
msgstr ""

#: ../../pep-0385.txt
msgid "Type"
msgstr ""

#: ../../pep-0385.txt:9
msgid "Process"
msgstr ""

#: ../../pep-0385.txt
msgid "Created"
msgstr ""

#: ../../pep-0385.txt:11
msgid "25-May-2009"
msgstr ""

#: ../../pep-0385.txt:15
msgid "Motivation"
msgstr ""

#: ../../pep-0385.txt:17
msgid ""
"After having decided to switch to the Mercurial DVCS, the actual "
"migration still has to be performed.  In the case of an important piece "
"of infrastructure like the version control system for a large, "
"distributed project like Python, this is a significant effort.  This PEP "
"is an attempt to describe the steps that must be taken for further "
"discussion.  It's somewhat similar to `PEP 347`_, which discussed the "
"migration to SVN."
msgstr ""

#: ../../pep-0385.txt:25
msgid ""
"To make the most of hg, we would like to make a high-fidelity conversion,"
" such that (a) as much of the svn metadata as possible is retained, and "
"(b) all metadata is converted to formats that are common in Mercurial.  "
"This way, tools written for Mercurial can be optimally used.  In order to"
" do this, we want to use the `hgsubversion`_ software to do an initial "
"conversion.  This hg extension is focused on providing high-quality "
"conversion from Subversion to Mercurial for use in two-way "
"correspondence, meaning it doesn't throw away as much available metadata "
"as other solutions."
msgstr ""

#: ../../pep-0385.txt:35
msgid ""
"Such a conversion also seems like a good time to reconsider the contents "
"of the repository and determine if some things are still valuable.  In "
"this spirit, the following sections also propose discarding some of the "
"older metadata."
msgstr ""

#: ../../pep-0385.txt:45
msgid "Timeline"
msgstr ""

#: ../../pep-0385.txt:47
msgid "The current schedule for conversion milestones:"
msgstr ""

#: ../../pep-0385.txt:49
msgid "2011-02-24: availability of a test repo at hg.python.org"
msgstr ""

#: ../../pep-0385.txt:51
msgid ""
"Test commits will be allowed (and encouraged) from all committers to the "
"Subversion repository.  The test repository and all test commits will be "
"removed once the final conversion is done.  The server-side hooks will be"
" installed for the test repository, in order to test buildbot, diff-email"
" and whitespace checking integration."
msgstr ""

#: ../../pep-0385.txt:57
msgid "2011-03-05: final conversion (tentative)"
msgstr ""

#: ../../pep-0385.txt:59
msgid ""
"Commits to the Subversion branches now maintained in Mercurial will be "
"blocked.  Developers should refrain from pushing to the Mercurial "
"repositories until all infrastructure is ensured to work after their "
"switch over to the new repository."
msgstr ""

#: ../../pep-0385.txt:66
msgid "Transition plan"
msgstr ""

#: ../../pep-0385.txt:69
msgid "Branch strategy"
msgstr ""

#: ../../pep-0385.txt:71
msgid ""
"Mercurial has two basic ways of using branches: cloned branches, where "
"each branch is kept in a separate repository, and named branches, where "
"each revision keeps metadata to note on which branch it belongs. The "
"former makes it easier to distinguish branches, at the expense of "
"requiring more disk space on the client.  The latter makes it a little "
"easier to switch between branches, but all branch names are a persistent "
"part of history. [1]_"
msgstr ""

#: ../../pep-0385.txt:79
msgid "Differences between named branches and cloned branches:"
msgstr ""

#: ../../pep-0385.txt:81
msgid ""
"Tags in a different (maintenance) clone aren't available in the local "
"clone"
msgstr ""

#: ../../pep-0385.txt:83
msgid "Clones with named branches will be larger, since they contain more data"
msgstr ""

#: ../../pep-0385.txt:86
msgid ""
"We propose to use named branches for release branches and adopt cloned "
"branches for feature branches."
msgstr ""

#: ../../pep-0385.txt:91
msgid "History management"
msgstr ""

#: ../../pep-0385.txt:93
msgid ""
"In order to minimize the loss of information due to the conversion, we "
"propose to provide several repositories as a conversion result:"
msgstr ""

#: ../../pep-0385.txt:96
msgid ""
"A repository trimmed to the mainline trunk (and py3k), as well as past "
"and present maintenance branches -- this is called the \"working\" repo "
"and is where development continues.  This repository has all the history "
"needed for development work, including annotating source files with "
"changes back up to 1990 and other common history-digging operations."
msgstr ""

#: ../../pep-0385.txt:103
msgid ""
"The ``default`` branch in that repo is what is known as ``py3k`` in "
"Subversion, while the Subversion trunk lives on with the branch name "
"``legacy-trunk``; however in Mercurial this branch will be closed. "
"Release branches are named after their major.minor version, e.g. ``3.2``."
msgstr ""

#: ../../pep-0385.txt:108
msgid ""
"A repository with the full, unedited conversion of the Subversion "
"repository (actually, its /python subdirectory) -- this is called the "
"\"historic\" or \"archive\" repo and will be offered as a read-only "
"resource. [2]_"
msgstr ""

#: ../../pep-0385.txt:113
msgid ""
"One more repository per active feature branch; \"active\" means that at "
"least one core developer asks for the branch to be provided.  Each such "
"repository will contain both the feature branch and all ancestor "
"changesets from mainline (coming from ``trunk`` and/or ``py3k`` in SVN)."
msgstr ""

#: ../../pep-0385.txt:118
msgid ""
"Since all branches are present in the historic repo, they can later be "
"extracted as separate repositories at any time should it prove to be "
"necessary."
msgstr ""

#: ../../pep-0385.txt:122
msgid ""
"The final revision map between SVN revision numbers, Mercurial changesets"
" and SVN branch names will be made available in a file stored in the "
"``Misc`` directory.  Its format is as following::"
msgstr ""

#: ../../pep-0385.txt:137
msgid "Converting tags"
msgstr ""

#: ../../pep-0385.txt:139
msgid ""
"The SVN tags directory contains a lot of old stuff.  Some of these are "
"not, in fact, full tags, but contain only a smaller subset of the "
"repository.  All release tags will be kept; other tags will be included "
"based on requests from the developer community.  We propose to make the "
"tag naming scheme consistent, in this style: ``v3.2.1a2``."
msgstr ""

#: ../../pep-0385.txt:147
msgid "Author map"
msgstr ""

#: ../../pep-0385.txt:149
msgid ""
"In order to provide user names the way they are common in hg (in the "
"'First Last <user@example.org>' format), we need an author map to map cvs"
" and svn user names to real names and their email addresses.  We have a "
"complete version of such a map in the migration tools repository (not "
"publicly accessible to avoid leaking addresses to harvesters).  The email"
" addresses in it might be out of date; that's bound to happen, although "
"it would be nice to try and have as many people as possible review it for"
" addresses that are out of date.  The current version also still seems to"
" contain some encoding problems."
msgstr ""

#: ../../pep-0385.txt:161
msgid "Generating .hgignore"
msgstr ""

#: ../../pep-0385.txt:163
msgid ""
"The .hgignore file can be used in Mercurial repositories to help ignore "
"files that are not eligible for version control.  It does this by "
"employing several possible forms of pattern matching.  The current Python"
" repository already includes a rudimentary .hgignore file to help with "
"using the hg mirrors."
msgstr ""

#: ../../pep-0385.txt:169
msgid ""
"Since the current Python repository already includes a .hgignore file "
"(for use with hg mirrors), we'll just use that.  Generating full history "
"of the file was debated but deemed impractical (because it's relatively "
"hard with fairly little gain, since ignoring is less important for older "
"revisions)."
msgstr ""

#: ../../pep-0385.txt:177
msgid "Repository size"
msgstr ""

#: ../../pep-0385.txt:179
msgid ""
"A bare conversion result of the current Python repository weighs 1.9 GB; "
"although this is smaller than the Subversion repository (2.7 GB) it is "
"not feasible."
msgstr ""

#: ../../pep-0385.txt:183
msgid ""
"The size becomes more manageable by the trimming applied to the working "
"repository, and by a process called \"revlog reordering\" that optimizes "
"the layout of internal Mercurial storage very efficiently."
msgstr ""

#: ../../pep-0385.txt:187
msgid ""
"After all optimizations done, the size of the working repository is "
"around 180 MB on disk.  The amount of data transferred over the network "
"when cloning is estimated to be around 80 MB."
msgstr ""

#: ../../pep-0385.txt:193
msgid "Other repositories"
msgstr ""

#: ../../pep-0385.txt:195
msgid ""
"There are a number of other projects hosted in svn.python.org's "
"\"projects\" repository.  The \"peps\" directory will be converted along "
"with the main Python one.  Richard Tew has indicated that he'd like the "
"Stackless repository to also be converted.  What other projects in the "
"svn.python.org repository should be converted?"
msgstr ""

#: ../../pep-0385.txt:201
msgid ""
"There's now an initial stab at converting the Jython repository.  The "
"current tip of hgsubversion unfortunately fails at some point. Pending "
"investigation."
msgstr ""

#: ../../pep-0385.txt:205
msgid ""
"Other repositories that would like to converted to Mercurial can announce"
" themselves to me after the main Python migration is done, and I'll take "
"care of their needs."
msgstr ""

#: ../../pep-0385.txt:211
msgid "Infrastructure"
msgstr ""

#: ../../pep-0385.txt:214
msgid "hg-ssh"
msgstr ""

#: ../../pep-0385.txt:216
msgid ""
"Developers should access the repositories through ssh, similar to the "
"current setup.  Public keys can be used to grant people access to a "
"shared hg@ account.  A hgwebdir instance also has been set up at "
"``hg.python.org`` for easy browsing and read-only access.  It is "
"configured so that developers can trivially start new clones (for longer-"
"term features that profit from development in a separate repository)."
msgstr ""

#: ../../pep-0385.txt:224
msgid ""
"Also, direct creation of public repositories is allowed for core "
"developers, although it is not yet decided which naming scheme will be "
"enforced::"
msgstr ""

#: ../../pep-0385.txt:232
msgid "Hooks"
msgstr ""

#: ../../pep-0385.txt:234
msgid ""
"A number of hooks is currently in use.  The hg equivalents for these "
"should be developed and deployed.  The following hooks are being used:"
msgstr ""

#: ../../pep-0385.txt:237
msgid ""
"check whitespace: a hook to reject commits in case the whitespace doesn't"
" match the rules for the Python codebase.  In a changegroup, only the tip"
" is checked (this allows cleanup commits for changes pulled from third-"
"party repos).  We can also offer a whitespace hook for use with client-"
"side repositories that people can use; it could either warn about "
"whitespace issues and/or truncate trailing whitespace from changed lines."
msgstr ""

#: ../../pep-0385.txt:245
msgid ""
"push mails: Emails will include diffs for each changeset pushed to the "
"public repository, including the username which pushed the changesets "
"(this is not necessarily the same as the author recorded in the "
"changesets)."
msgstr ""

#: ../../pep-0385.txt:250
msgid ""
"buildbots: the python.org build master will be notified of each changeset"
" pushed to the ``cpython`` repository, and will trigger an appropriate "
"build on every build slave for the branch in which the changeset occurs."
msgstr ""

#: ../../pep-0385.txt:254
msgid ""
"The `hooks repository`_ contains ports of these server-side hooks to "
"Mercurial, as well as a couple additional ones:"
msgstr ""

#: ../../pep-0385.txt:257
msgid ""
"check branch heads: a hook to reject pushes which create a new head on an"
" existing branch.  The pusher then has to merge the excess heads and try "
"pushing again."
msgstr ""

#: ../../pep-0385.txt:261
msgid ""
"check branches: a hook to reject all changesets not on an allowed named "
"branch.  This hook's whitelist will have to be updated when we want to "
"create new maintenance branches."
msgstr ""

#: ../../pep-0385.txt:265
msgid ""
"check line endings: a hook, based on the `eol extension`_, to reject all "
"changesets committing files with the wrong line endings.  The commits "
"then have to be stripped and redone, possibly with the `eol extension`_ "
"enabled on the comitter's computer."
msgstr ""

#: ../../pep-0385.txt:270
msgid "One additional hook could be beneficial:"
msgstr ""

#: ../../pep-0385.txt:272
msgid ""
"check contributors: in the current setup, all changesets bear the "
"username of committers, who must have signed the contributor agreement.  "
"We might want to use a hook to check if the committer is a contributor if"
" we keep a list of registered contributors.  Then, the hook might warn "
"users that push a group of revisions containing changesets from unknown "
"contributors."
msgstr ""

#: ../../pep-0385.txt:283
msgid "End-of-line conversions"
msgstr ""

#: ../../pep-0385.txt:285
msgid ""
"Discussion about the lack of end-of-line conversion support in Mercurial,"
" which was provided initially by the `win32text extension`_, led to the "
"development of the new `eol extension`_ that supports a versioned "
"management of line-ending conventions on a file-by-file basis, akin to "
"Subversion's ``svn:eol-style`` properties.  This information is kept in a"
" versioned file called ``.hgeol``, and such a file has already been "
"checked into the Subversion repository."
msgstr ""

#: ../../pep-0385.txt:293
msgid ""
"A hook also exists on the server side to reject any changeset introducing"
" inconsistent newline data (see above)."
msgstr ""

#: ../../pep-0385.txt:301
msgid "hgwebdir"
msgstr ""

#: ../../pep-0385.txt:303
msgid ""
"A more or less stock hgwebdir installation should be set up.  We might "
"want to come up with a style to match the Python website."
msgstr ""

#: ../../pep-0385.txt:306
msgid ""
"A small WSGI application has been written that can look up Subversion "
"revisions and redirect to the appropriate hgweb page for the given "
"changeset, regardless in which repository the converted revision ended up"
" (since one big Subversion repository is converted into several Mercurial"
" repositories).  It can also look up Mercurial changesets by their "
"hexadecimal ID."
msgstr ""

#: ../../pep-0385.txt:315
msgid "roundup"
msgstr ""

#: ../../pep-0385.txt:317
msgid ""
"By pointing Roundup to the URL of the lookup script mentioned above, "
"links to SVN revisions will continue to work, and links to Mercurial "
"changesets can be created as well, without having to give repository "
"*and* changeset ID."
msgstr ""

#: ../../pep-0385.txt:324
msgid "After migration"
msgstr ""

#: ../../pep-0385.txt:327
msgid "Where to get code"
msgstr ""

#: ../../pep-0385.txt:329
msgid ""
"After migration, the hgwebdir will live at hg.python.org.  This is an "
"accepted standard for many organizations, and an easy parallel to "
"svn.python.org.  The working repo might live at "
"http://hg.python.org/cpython/, for example, with the archive repo at "
"http://hg.python.org/cpython-archive/.  For write access, developers will"
" have to use ssh, which could be ssh://hg@hg.python.org/cpython/."
msgstr ""

#: ../../pep-0385.txt:336
msgid ""
"code.python.org was also proposed as the hostname.  We think that using "
"the VCS name in the hostname is good because it prevents confusion: it "
"should be clear that you can't use svn or bzr for hg.python.org."
msgstr ""

#: ../../pep-0385.txt:341
msgid ""
"hgwebdir can already provide tarballs for every changeset.  This obviates"
" the need for daily snapshots; we can just point users to tip.tar.gz "
"instead, meaning they will get the latest.  If desired, we could even use"
" buildbot results to point to the last good changeset."
msgstr ""

#: ../../pep-0385.txt:348
msgid "Python-specific documentation"
msgstr ""

#: ../../pep-0385.txt:350
msgid ""
"hg comes with good built-in documentation (available through hg help) and"
" a `wiki`_ that's full of useful information and recipes, not to mention "
"a popular `book`_ (readable online)."
msgstr ""

#: ../../pep-0385.txt:354
msgid ""
"In addition to that, the recently overhauled `Python Developer's Guide`_ "
"already has a branch with instructions for Mercurial instead of "
"Subversion; an online `build of this branch`_ is also available."
msgstr ""

#: ../../pep-0385.txt:364
msgid "Proposed workflow"
msgstr ""

#: ../../pep-0385.txt:366
msgid ""
"We propose two workflows for the migration of patches between several "
"branches."
msgstr ""

#: ../../pep-0385.txt:369
msgid ""
"For migration within 2.x or 3.x branches, we propose a patch always gets "
"committed to the oldest branch where it applies first.  Then, the "
"resulting changeset can be merged using hg merge to all newer branches "
"within that series (2.x or 3.x).  If it does not apply as-is to the newer"
" branch, hg revert can be used to easily revert to the new-branch-native "
"head, patch in some alternative version of the patch (or none, if it's "
"not applicable), then commit the merge.  The premise here is that all "
"changesets from an older branch within the series are eventually merged "
"to all newer branches within the series."
msgstr ""

#: ../../pep-0385.txt:379
msgid ""
"The upshot is that this provides for the most painless merging procedure."
"  This means that in the general case, people have to think about the "
"oldest branch to which the patch should be applied before actually "
"applying it.  Usually, that is one of only two branches: the latest "
"maintenance branch and the trunk, except for security fixes applicable to"
" older branches in security-fix-only mode."
msgstr ""

#: ../../pep-0385.txt:386
msgid ""
"For merging bug fixes from the 3.x to the 2.7 maintenance branch (2.6 and"
" 2.5 are in security-fix-only mode and their maintenance will continue in"
" the Subversion repository), changesets should be transplanted (not "
"merged) in some other way.  The transplant extension, import/export and "
"bundle/unbundle work equally well here."
msgstr ""

#: ../../pep-0385.txt:392
msgid ""
"Choosing this approach allows 3.x not to carry all of the 2.x history-"
"since-it-was-branched, meaning the clone is not as big and the merges not"
" as complicated."
msgstr ""

#: ../../pep-0385.txt:398
msgid "The future of Subversion"
msgstr ""

#: ../../pep-0385.txt:400
msgid ""
"What happens to the Subversion repositories after the migration? Since "
"the svn server contains a bunch of repositories, not just the CPython "
"one, it will probably live on for a bit as not every project may want to "
"migrate or it takes longer for other projects to migrate. To prevent "
"people from staying behind, we may want to move migrated projects from "
"the repository to a new, read-only repository with a new name."
msgstr ""

#: ../../pep-0385.txt:410
msgid "Build identification"
msgstr ""

#: ../../pep-0385.txt:412
msgid ""
"Python currently provides the sys.subversion tuple to allow Python code "
"to find out exactly what version of Python it's running against. The "
"current version looks something like this:"
msgstr ""

#: ../../pep-0385.txt:416
msgid "('CPython', 'tags/r262', '71600')"
msgstr ""

#: ../../pep-0385.txt:417
msgid "('CPython', 'trunk', '73128M')"
msgstr ""

#: ../../pep-0385.txt:419
msgid ""
"Another value is returned from Py_GetBuildInfo() in the C API, and "
"available to Python code as part of sys.version:"
msgstr ""

#: ../../pep-0385.txt:422
msgid "'r262:71600, Jun  2 2009, 09:58:33'"
msgstr ""

#: ../../pep-0385.txt:423
msgid "'trunk:73128M, Jun  2 2009, 01:24:14'"
msgstr ""

#: ../../pep-0385.txt:425
msgid ""
"I propose that the revision identifier will be the short version of hg's "
"revision hash, for example 'dd3ebf81af43', augmented with '+' (instead of"
" 'M') if the working directory from which it was built was modified.  "
"This mirrors the output of the hg id command, which is intended for this "
"kind of usage.  The sys.subversion value will also be renamed to "
"sys.mercurial to reflect the change in VCS."
msgstr ""

#: ../../pep-0385.txt:432
msgid ""
"For the tag/branch identifier, I propose that hg will check for tags on "
"the currently checked out revision, use the tag if there is one ('tip' "
"doesn't count), and uses the branch name otherwise. sys.subversion "
"becomes"
msgstr ""

#: ../../pep-0385.txt:437
msgid "('CPython', 'v2.6.2', 'dd3ebf81af43')"
msgstr ""

#: ../../pep-0385.txt:438
msgid "('CPython', 'default', 'af694c6a888c+')"
msgstr ""

#: ../../pep-0385.txt:440
msgid "and the build info string becomes"
msgstr ""

#: ../../pep-0385.txt:442
msgid "'v2.6.2:dd3ebf81af43, Jun  2 2009, 09:58:33'"
msgstr ""

#: ../../pep-0385.txt:443
msgid "'default:af694c6a888c+, Jun  2 2009, 01:24:14'"
msgstr ""

#: ../../pep-0385.txt:445
msgid ""
"This reflects that the default branch in hg is called 'default' instead "
"of Subversion's 'trunk', and reflects the proposed new tag format."
msgstr ""

#: ../../pep-0385.txt:449
msgid ""
"Mercurial also allows to find out the latest tag and the number of "
"changesets separating the current changeset from that tag, allowing for a"
" descriptive version string::"
msgstr ""

#: ../../pep-0385.txt:462
msgid "Footnotes"
msgstr ""

#: ../../pep-0385.txt:464
msgid ""
"The Mercurial book discourages the use of named branches, but it is, in "
"this respect, somewhat outdated.  Named branches have gotten much easier "
"to use since that comment was written, due to improvements in hg."
msgstr ""

#: ../../pep-0385.txt:469
msgid ""
"Since the initial working repo is a subset of the archive repo, it would "
"also be feasible to pull changes from the working repo into the archive "
"repo periodically."
msgstr ""

#: ../../pep-0385.txt:475
msgid "Copyright"
msgstr ""

#: ../../pep-0385.txt:477
msgid "This document has been placed in the public domain."
msgstr ""

