# SOME DESCRIPTIVE TITLE.
# Copyright (C)
# This file is distributed under the same license as the PEPs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PEPs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-11-12 17:38+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../pep-0609.rst
msgid "PEP"
msgstr ""

#: ../../pep-0609.rst:1
msgid "609"
msgstr ""

#: ../../pep-0609.rst
msgid "Title"
msgstr ""

#: ../../pep-0609.rst:2
msgid "PyPA Governance"
msgstr ""

#: ../../pep-0609.rst
msgid "Author"
msgstr ""

#: ../../pep-0609.rst:5
msgid ""
"Dustin Ingram <di@python.org>, Pradyun Gedam <pradyunsg@gmail.com> Sumana"
" Harihareswara <sh@changeset.nyc>"
msgstr ""

#: ../../pep-0609.rst
msgid "Sponsor"
msgstr ""

#: ../../pep-0609.rst:8
msgid "Paul Ganssle <paul@ganssle.io>"
msgstr ""

#: ../../pep-0609.rst
msgid "BDFL-Delegate"
msgstr ""

#: ../../pep-0609.rst:9
msgid "TBD"
msgstr ""

#: ../../pep-0609.rst
msgid "Discussions-To"
msgstr ""

#: ../../pep-0609.rst:10
msgid "https://discuss.python.org/t/pep-609-pypa-governance/"
msgstr ""

#: ../../pep-0609.rst
msgid "Status"
msgstr ""

#: ../../pep-0609.rst:11
msgid "Active"
msgstr ""

#: ../../pep-0609.rst
msgid "Type"
msgstr ""

#: ../../pep-0609.rst:12
msgid "Process"
msgstr ""

#: ../../pep-0609.rst
msgid "Created"
msgstr ""

#: ../../pep-0609.rst:14 ../../pep-0609.rst:15
msgid "05-Nov-2019"
msgstr ""

#: ../../pep-0609.rst
msgid "Post-History"
msgstr ""

#: ../../pep-0609.rst:19
msgid "Abstract"
msgstr ""

#: ../../pep-0609.rst:21
msgid ""
"This document describes a governance model for the Python Packaging "
"Authority (PyPA). The model is closely based on existing informal "
"practices, with the intent of providing clarity into the functioning of "
"the PyPA and formalizing transparent processes for the PyPA."
msgstr ""

#: ../../pep-0609.rst:27
msgid "Rationale"
msgstr ""

#: ../../pep-0609.rst:29
msgid ""
"The Python Packaging Authority (PyPA) is a collaborative community that "
"maintains and advances many of the relevant projects in Python packaging."
" The software and standards developed through the PyPA are used to "
"package, share, and install Python software and to interact with indexes "
"of downloadable Python software such as `PyPI`_, the Python Package "
"Index."
msgstr ""

#: ../../pep-0609.rst:36
msgid ""
"Currently, the PyPA is an informal and loosely defined organization that "
"lacks true authority, and the inclusion of a given project under the PyPA"
" umbrella or the creation of new projects has been done in an ad-hoc, "
"one-off manner. Similarly, individual membership in the PyPA is not well-"
"defined."
msgstr ""

#: ../../pep-0609.rst:42
msgid ""
"While this model has more or less worked for the PyPA in the past, it "
"results in an organization which is missing certain features of a stable "
"ecosystem, namely a clear and transparent decision-making process. This "
"PEP seeks to rectify this by defining a governance model for the PyPA."
msgstr ""

#: ../../pep-0609.rst:49
msgid "Terminology"
msgstr ""

#: ../../pep-0609.rst:51
msgid "Relevant terms for groups of individual contributors used in this PEP:"
msgstr ""

#: ../../pep-0609.rst:55
msgid "**PyPA members**:"
msgstr ""

#: ../../pep-0609.rst:54
msgid ""
"Anyone with the triage bit or commit bit, on at least one project in the "
"`PyPA organization`_."
msgstr ""

#: ../../pep-0609.rst:60
msgid "**PyPA committers**:"
msgstr ""

#: ../../pep-0609.rst:58
msgid ""
"Anyone with the commit bit on at least one project in the PyPA "
"organization, which should correspond to everyone on the `PyPA-"
"Committers`_ mailing list."
msgstr ""

#: ../../pep-0609.rst:64
msgid "**PyPA community**:"
msgstr ""

#: ../../pep-0609.rst:63
msgid ""
"Anyone who is interested in PyPA activity and wants to follow along, "
"contribute or make proposals."
msgstr ""

#: ../../pep-0609.rst:69
msgid "**Packaging-WG members**:"
msgstr ""

#: ../../pep-0609.rst:67
msgid ""
"As described in the `Packaging-WG Wiki page`_. For clarity: there is no "
"formal relationship between the Packaging-WG and PyPA. This group is only"
" included in this list to disambiguate it from PyPA."
msgstr ""

#: ../../pep-0609.rst:72
msgid "Goals"
msgstr ""

#: ../../pep-0609.rst:74
msgid ""
"The following section formalizes the goals (and non-goals) of the PyPA "
"and this governance model."
msgstr ""

#: ../../pep-0609.rst:78
msgid "Goals of the PyPA"
msgstr ""

#: ../../pep-0609.rst:80
msgid ""
"These goals are the primary motivation for the existence of the PyPA. "
"These goals are largely already being carried out, even though most have "
"not been explicitly defined."
msgstr ""

#: ../../pep-0609.rst:85
msgid "Provide support for existing projects under the PyPA"
msgstr ""

#: ../../pep-0609.rst:87
msgid ""
"In the event that a given project needs additional support, or no longer "
"has active maintainers, the PyPA will ensure that the given project will "
"continue to be supported for users to the extent necessary."
msgstr ""

#: ../../pep-0609.rst:93
msgid "Foster the creation and acceptance of standards for PyPA projects"
msgstr ""

#: ../../pep-0609.rst:95
msgid ""
"The PyPA should, as much as possible, strive for standardization and "
"coordination across PyPA projects, primarily though the governance "
"process outlined below. PyPA projects are expected to abide by applicable"
" specifications maintained by the PyPA."
msgstr ""

#: ../../pep-0609.rst:101
msgid "Guide decisions which affect multiple PyPA projects"
msgstr ""

#: ../../pep-0609.rst:103
msgid ""
"The PyPA community (especially PyPA members) should be expected to "
"provide opinions, insight and experience when ecosystem-wide changes are "
"being proposed."
msgstr ""

#: ../../pep-0609.rst:108
msgid "Determine which projects should be under the guidance of the PyPA"
msgstr ""

#: ../../pep-0609.rst:110
msgid ""
"For example: accepting new projects from the community, organically "
"creating projects within the PyPA, etc."
msgstr ""

#: ../../pep-0609.rst:114
msgid "Enforce adherence to a Code of Conduct across all projects"
msgstr ""

#: ../../pep-0609.rst:116
msgid ""
"Generally this means leading by example, but occasionally it may mean "
"more explicit moderation."
msgstr ""

#: ../../pep-0609.rst:120
msgid "Non-goals of the PyPA"
msgstr ""

#: ../../pep-0609.rst:122
msgid "These are specific items that are explicitly _not_ goals of the PyPA."
msgstr ""

#: ../../pep-0609.rst:125
msgid "Determine who is and isn't a PyPA member"
msgstr ""

#: ../../pep-0609.rst:127
msgid ""
"This is for members of individual projects to decide, as they add new "
"members to their projects. Maintainership of a project that is under the "
"PyPA organization automatically transfers membership in the PyPA."
msgstr ""

#: ../../pep-0609.rst:132
msgid "Micromanage individual projects"
msgstr ""

#: ../../pep-0609.rst:134
msgid ""
"As long as the project is adhering to the Code of Conduct and following "
"specifications supported by the PyPA, the PyPA should only concerned with"
" large, ecosystem-wide changes."
msgstr ""

#: ../../pep-0609.rst:139
msgid "Develop and maintain standalone Code of Conduct"
msgstr ""

#: ../../pep-0609.rst:141
msgid "PyPA projects follow `the PSF Code of Conduct`_."
msgstr ""

#: ../../pep-0609.rst:145
msgid "Goals of the PyPA's Governance Model"
msgstr ""

#: ../../pep-0609.rst:147
msgid "These are new goals which the governance model seeks to make possible."
msgstr ""

#: ../../pep-0609.rst:150
msgid "Transparency in PyPA membership"
msgstr ""

#: ../../pep-0609.rst:152
msgid ""
"Provide a transparent process for decisions taken, regarding project "
"membership in the PyPA."
msgstr ""

#: ../../pep-0609.rst:156
msgid "Document PyPA's use of PEPs"
msgstr ""

#: ../../pep-0609.rst:158
msgid ""
"Formally document how the PyPA uses Python Enhancement Proposals (PEPs), "
"for maintaining interoperability specifications defined by the PyPA."
msgstr ""

#: ../../pep-0609.rst:163
msgid "Processes"
msgstr ""

#: ../../pep-0609.rst:165
msgid "The processes for the PyPA's activities are outlined below:"
msgstr ""

#: ../../pep-0609.rst:168
msgid "Specifications"
msgstr ""

#: ../../pep-0609.rst:170
msgid ""
"The PyPA will use PEPs for defining, and making changes to, the "
"interoperability specifications maintained by the PyPA. Thus, the Python "
"Steering Council has the final say in the acceptance of these "
"interoperability specifications."
msgstr ""

#: ../../pep-0609.rst:175
msgid ""
"It is expected (but not required) that the Python Steering Council would "
"delegate authority to sponsor and/or approve/reject PEPs related to "
"packaging interoperability specifications, to individuals within the PyPA"
" community. At the time of writing (June 2020), the Python Steering "
"Council has `standing delegations`_ for currently active packaging "
"interoperability specifications."
msgstr ""

#: ../../pep-0609.rst:182
msgid ""
"The details of the process of proposing and updating the interoperability"
" specifications are described in the `PyPA Specifications`_ document."
msgstr ""

#: ../../pep-0609.rst:187
msgid "Governance"
msgstr ""

#: ../../pep-0609.rst:190
msgid "PyPA Committer Votes"
msgstr ""

#: ../../pep-0609.rst:192
msgid ""
"A PyPA member can put forward a proposal and call for a vote on a public "
"PyPA communication channel. A PyPA committer vote is triggered when a "
"PyPA committer (not the proposer) seconds the proposal."
msgstr ""

#: ../../pep-0609.rst:196
msgid ""
"The proposal will be put to a vote on the `PyPA-Committers`_ mailing "
"list, over a 7-day period. Each PyPA committer can vote once, and can "
"choose one of ``+1`` and ``-1``. If at least two thirds of recorded votes"
" are ``+1``, then the vote succeeds."
msgstr ""

#: ../../pep-0609.rst:201
msgid ""
"PyPA committer votes are required for, and limited to, the following "
"kinds of proposals:"
msgstr ""

#: ../../pep-0609.rst:205
msgid "Addition of a project to the PyPA"
msgstr ""

#: ../../pep-0609.rst:207
msgid ""
"Proposing the acceptance of a project into the PyPA organization. This "
"proposal must not be opposed by the existing maintainers of the project."
msgstr ""

#: ../../pep-0609.rst:212
msgid "Creation of a new project in the PyPA"
msgstr ""

#: ../../pep-0609.rst:214
msgid "Proposing the creation of a new tools / project in the PyPA organization."
msgstr ""

#: ../../pep-0609.rst:218
msgid "Removal of a project from PyPA"
msgstr ""

#: ../../pep-0609.rst:220
msgid "Proposing the removal of a project in the PyPA organization."
msgstr ""

#: ../../pep-0609.rst:223
msgid "Updates to the Governance/Specification Processes"
msgstr ""

#: ../../pep-0609.rst:225
msgid ""
"Proposing changes to how the PyPA operates, including but not limited to "
"changes to its specification and governance processes, and this PEP."
msgstr ""

#: ../../pep-0609.rst:230
msgid "Leaving PyPA"
msgstr ""

#: ../../pep-0609.rst:232
msgid ""
"A project that is a part of the PyPA organization, can request to leave "
"PyPA."
msgstr ""

#: ../../pep-0609.rst:235
msgid ""
"Such requests can made by a committer of the project, on the `PyPA-"
"Committers`_ mailing list and must clearly state the GitHub "
"user/organization to transfer the repository to."
msgstr ""

#: ../../pep-0609.rst:239
msgid ""
"If the request is not opposed by another committer of the same project "
"over a 7-day period, the project would leave the PyPA and be transferred "
"out of the PyPA organization as per the request."
msgstr ""

#: ../../pep-0609.rst:244
msgid "Code of Conduct enforcement"
msgstr ""

#: ../../pep-0609.rst:246
msgid ""
"Each project that is a part of the PyPA organization follows `the PSF "
"Code of Conduct`_, including its incident reporting guidelines and "
"enforcement procedures."
msgstr ""

#: ../../pep-0609.rst:250
msgid ""
"PyPA members are responsible for leading by example. PyPA members "
"occasionally may need to more explicitly moderate behavior in their "
"projects, and each project that is a part of the PyPA organization must "
"designate at least one PyPA member as available to contact in case of a "
"Code of Conduct incident. If told of any Code of Conduct incidents "
"involving their projects, PyPA members are expected to report those "
"incidents up to `the PSF Conduct WG`_, for recording purposes and for "
"potential assistance."
msgstr ""

#: ../../pep-0609.rst:261
msgid "References"
msgstr ""

#: ../../pep-0609.rst:273
msgid "Copyright"
msgstr ""

#: ../../pep-0609.rst:275
msgid ""
"This document is placed in the public domain or under the "
"CC0-1.0-Universal license, whichever is more permissive."
msgstr ""

