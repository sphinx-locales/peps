# SOME DESCRIPTIVE TITLE.
# Copyright (C)
# This file is distributed under the same license as the PEPs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PEPs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-11-12 17:38+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../pep-0476.txt
msgid "PEP"
msgstr ""

#: ../../pep-0476.txt:1
msgid "476"
msgstr ""

#: ../../pep-0476.txt
msgid "Title"
msgstr ""

#: ../../pep-0476.txt:2
msgid "Enabling certificate verification by default for stdlib http clients"
msgstr ""

#: ../../pep-0476.txt
msgid "Author"
msgstr ""

#: ../../pep-0476.txt:5
msgid "Alex Gaynor <alex.gaynor@gmail.com>"
msgstr ""

#: ../../pep-0476.txt
msgid "Status"
msgstr ""

#: ../../pep-0476.txt:6
msgid "Final"
msgstr ""

#: ../../pep-0476.txt
msgid "Type"
msgstr ""

#: ../../pep-0476.txt:7
msgid "Standards Track"
msgstr ""

#: ../../pep-0476.txt
msgid "Created"
msgstr ""

#: ../../pep-0476.txt:9
msgid "28-Aug-2014"
msgstr ""

#: ../../pep-0476.txt
msgid "Resolution"
msgstr ""

#: ../../pep-0476.txt:10
msgid "https://mail.python.org/pipermail/python-dev/2014-October/136676.html"
msgstr ""

#: ../../pep-0476.txt:13
msgid "Abstract"
msgstr ""

#: ../../pep-0476.txt:15
msgid ""
"Currently when a standard library http client (the ``urllib``, "
"``urllib2``, ``http``, and ``httplib`` modules) encounters an "
"``https://`` URL it will wrap the network HTTP traffic in a TLS stream, "
"as is necessary to communicate with such a server. However, during the "
"TLS handshake it will not actually check that the server has an X509 "
"certificate is signed by a CA in any trust root, nor will it verify that "
"the Common Name (or Subject Alternate Name) on the presented certificate "
"matches the requested host."
msgstr ""

#: ../../pep-0476.txt:23
msgid ""
"The failure to do these checks means that anyone with a privileged "
"network position is able to trivially execute a man in the middle attack "
"against a Python application using either of these HTTP clients, and "
"change traffic at will."
msgstr ""

#: ../../pep-0476.txt:28
msgid ""
"This PEP proposes to enable verification of X509 certificate signatures, "
"as well as hostname verification for Python's HTTP clients by default, "
"subject to opt-out on a per-call basis. This change would be applied to "
"Python 2.7, Python 3.4, and Python 3.5."
msgstr ""

#: ../../pep-0476.txt:34
msgid "Rationale"
msgstr ""

#: ../../pep-0476.txt:36
msgid ""
"The \"S\" in \"HTTPS\" stands for secure. When Python's users type "
"\"HTTPS\" they are expecting a secure connection, and Python should "
"adhere to a reasonable standard of care in delivering this. Currently we "
"are failing at this, and in doing so, APIs which appear simple are "
"misleading users."
msgstr ""

#: ../../pep-0476.txt:41
msgid ""
"When asked, many Python users state that they were not aware that Python "
"failed to perform these validations, and are shocked."
msgstr ""

#: ../../pep-0476.txt:44
msgid ""
"The popularity of ``requests`` (which enables these checks by default) "
"demonstrates that these checks are not overly burdensome in any way, and "
"the fact that it is widely recommended as a major security improvement "
"over the standard library clients demonstrates that many expect a higher "
"standard for \"security by default\" from their tools."
msgstr ""

#: ../../pep-0476.txt:50
msgid ""
"The failure of various applications to note Python's negligence in this "
"matter is a source of *regular* CVE assignment [#]_ [#]_ [#]_ [#]_ [#]_ "
"[#]_ [#]_ [#]_ [#]_ [#]_ [#]_."
msgstr ""

#: ../../pep-0476.txt:54
msgid "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2010-4340"
msgstr ""

#: ../../pep-0476.txt:55
msgid "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2012-3533"
msgstr ""

#: ../../pep-0476.txt:56
msgid "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2012-5822"
msgstr ""

#: ../../pep-0476.txt:57
msgid "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2012-5825"
msgstr ""

#: ../../pep-0476.txt:58
msgid "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2013-1909"
msgstr ""

#: ../../pep-0476.txt:59
msgid "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2013-2037"
msgstr ""

#: ../../pep-0476.txt:60
msgid "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2013-2073"
msgstr ""

#: ../../pep-0476.txt:61
msgid "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2013-2191"
msgstr ""

#: ../../pep-0476.txt:62
msgid "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2013-4111"
msgstr ""

#: ../../pep-0476.txt:63
msgid "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2013-6396"
msgstr ""

#: ../../pep-0476.txt:64
msgid "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2013-6444"
msgstr ""

#: ../../pep-0476.txt:67
msgid "Technical Details"
msgstr ""

#: ../../pep-0476.txt:69
msgid ""
"Python would use the system provided certificate database on all "
"platforms. Failure to locate such a database would be an error, and users"
" would need to explicitly specify a location to fix it."
msgstr ""

#: ../../pep-0476.txt:73
msgid ""
"This will be achieved by adding a new "
"``ssl._create_default_https_context`` function, which is the same as "
"``ssl.create_default_context``."
msgstr ""

#: ../../pep-0476.txt:76
msgid ""
"``http.client`` can then replace its usage of "
"``ssl._create_stdlib_context`` with the "
"``ssl._create_default_https_context``."
msgstr ""

#: ../../pep-0476.txt:79
msgid ""
"Additionally ``ssl._create_stdlib_context`` is renamed "
"``ssl._create_unverified_context`` (an alias is kept around for backwards"
" compatibility reasons)."
msgstr ""

#: ../../pep-0476.txt:84
msgid "Trust database"
msgstr ""

#: ../../pep-0476.txt:86
msgid ""
"This PEP proposes using the system-provided certificate database. "
"Previous discussions have suggested bundling Mozilla's certificate "
"database and using that by default. This was decided against for several "
"reasons:"
msgstr ""

#: ../../pep-0476.txt:90
msgid ""
"Using the platform trust database imposes a lower maintenance burden on "
"the Python developers -- shipping our own trust database would require "
"doing a release every time a certificate was revoked."
msgstr ""

#: ../../pep-0476.txt:93
msgid ""
"Linux vendors, and other downstreams, would unbundle the Mozilla "
"certificates, resulting in a more fragmented set of behaviors."
msgstr ""

#: ../../pep-0476.txt:95
msgid ""
"Using the platform stores makes it easier to handle situations such as "
"corporate internal CAs."
msgstr ""

#: ../../pep-0476.txt:98
msgid ""
"OpenSSL also has a pair of environment variables, ``SSL_CERT_DIR`` and "
"``SSL_CERT_FILE`` which can be used to point Python at a different "
"certificate database."
msgstr ""

#: ../../pep-0476.txt:103
msgid "Backwards compatibility"
msgstr ""

#: ../../pep-0476.txt:105
msgid ""
"This change will have the appearance of causing some HTTPS connections to"
" \"break\", because they will now raise an Exception during handshake."
msgstr ""

#: ../../pep-0476.txt:108
msgid ""
"This is misleading however, in fact these connections are presently "
"failing silently, an HTTPS URL indicates an expectation of "
"confidentiality and authentication. The fact that Python does not "
"actually verify that the user's request has been made is a bug, further: "
"\"Errors should never pass silently.\""
msgstr ""

#: ../../pep-0476.txt:113
msgid ""
"Nevertheless, users who have a need to access servers with self-signed or"
" incorrect certificates would be able to do so by providing a context "
"with custom trust roots or which disables validation (documentation "
"should strongly recommend the former where possible). Users will also be "
"able to add necessary certificates to system trust stores in order to "
"trust them globally."
msgstr ""

#: ../../pep-0476.txt:119
msgid ""
"Twisted's 14.0 release made this same change, and it has been met with "
"almost no opposition."
msgstr ""

#: ../../pep-0476.txt:123
msgid "Opting out"
msgstr ""

#: ../../pep-0476.txt:125
msgid ""
"For users who wish to opt out of certificate verification on a single "
"connection, they can achieve this by providing the ``context`` argument "
"to ``urllib.urlopen``::"
msgstr ""

#: ../../pep-0476.txt:135
msgid ""
"It is also possible, **though highly discouraged**, to globally disable "
"verification by monkeypatching the ``ssl`` module in versions of Python "
"that implement this PEP::"
msgstr ""

#: ../../pep-0476.txt:150
msgid ""
"This guidance is aimed primarily at system administrators that wish to "
"adopt newer versions of Python that implement this PEP in legacy "
"environments that do not yet support certificate verification on HTTPS "
"connections. For example, an administrator may opt out by adding the "
"monkeypatch above to ``sitecustomize.py`` in their Standard Operating "
"Environment for Python. Applications and libraries SHOULD NOT be making "
"this change process wide (except perhaps in response to a system "
"administrator controlled configuration setting)."
msgstr ""

#: ../../pep-0476.txt:159
msgid ""
"Particularly security sensitive applications should always provide an "
"explicit application defined SSL context rather than relying on the "
"default behaviour of the underlying Python implementation."
msgstr ""

#: ../../pep-0476.txt:164
msgid "Other protocols"
msgstr ""

#: ../../pep-0476.txt:166
msgid ""
"This PEP only proposes requiring this level of validation for HTTP "
"clients, not for other protocols such as SMTP."
msgstr ""

#: ../../pep-0476.txt:169
msgid ""
"This is because while a high percentage of HTTPS servers have correct "
"certificates, as a result of the validation performed by browsers, for "
"other protocols self-signed or otherwise incorrect certificates are far "
"more common. Note that for SMTP at least, this appears to be changing and"
" should be reviewed for a potential similar PEP in the future:"
msgstr ""

#: ../../pep-0476.txt:175
msgid ""
"https://www.facebook.com/notes/protect-the-graph/the-current-state-of-"
"smtp-starttls-deployment/1453015901605223"
msgstr ""

#: ../../pep-0476.txt:176
msgid ""
"https://www.facebook.com/notes/protect-the-graph/massive-growth-in-smtp-"
"starttls-deployment/1491049534468526"
msgstr ""

#: ../../pep-0476.txt:179
msgid "Python Versions"
msgstr ""

#: ../../pep-0476.txt:181
msgid ""
"This PEP describes changes that will occur on both the 3.4.x, 3.5 and "
"2.7.X branches. For 2.7.X this will require backporting the ``context`` "
"(``SSLContext``) argument to ``httplib``, in addition to the features "
"already backported in :pep:`466`."
msgstr ""

#: ../../pep-0476.txt:187
msgid "Implementation"
msgstr ""

#: ../../pep-0476.txt:189
msgid ""
"**LANDED**: `Issue 22366 <http://bugs.python.org/issue22366>`_ adds the "
"``context`` argument to ``urlib.request.urlopen``."
msgstr ""

#: ../../pep-0476.txt:191
msgid ""
"`Issue 22417 <http://bugs.python.org/issue22417>`_ implements the "
"substance of this PEP."
msgstr ""

#: ../../pep-0476.txt:195
msgid "Copyright"
msgstr ""

#: ../../pep-0476.txt:197
msgid "This document has been placed into the public domain."
msgstr ""

