# SOME DESCRIPTIVE TITLE.
# Copyright (C)
# This file is distributed under the same license as the PEPs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PEPs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-11-12 17:38+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../pep-0627.rst
msgid "PEP"
msgstr ""

#: ../../pep-0627.rst:1
msgid "627"
msgstr ""

#: ../../pep-0627.rst
msgid "Title"
msgstr ""

#: ../../pep-0627.rst:2
msgid "Recording installed projects"
msgstr ""

#: ../../pep-0627.rst
msgid "Author"
msgstr ""

#: ../../pep-0627.rst:3
msgid "Petr Viktorin <encukou@gmail.com>"
msgstr ""

#: ../../pep-0627.rst
msgid "BDFL-Delegate"
msgstr ""

#: ../../pep-0627.rst:4
msgid "Paul Moore <p.f.moore@gmail.com>"
msgstr ""

#: ../../pep-0627.rst
msgid "Discussions-To"
msgstr ""

#: ../../pep-0627.rst:5
msgid "https://discuss.python.org/t/pep-627/4126"
msgstr ""

#: ../../pep-0627.rst
msgid "Status"
msgstr ""

#: ../../pep-0627.rst:6
msgid "Accepted"
msgstr ""

#: ../../pep-0627.rst
msgid "Type"
msgstr ""

#: ../../pep-0627.rst:7
msgid "Informational"
msgstr ""

#: ../../pep-0627.rst
msgid "Created"
msgstr ""

#: ../../pep-0627.rst:9
msgid "15-Jul-2020"
msgstr ""

#: ../../pep-0627.rst
msgid "Resolution"
msgstr ""

#: ../../pep-0627.rst:10
msgid "https://discuss.python.org/t/pep-627/4126/42"
msgstr ""

#: ../../pep-0627.rst:14
msgid "Abstract"
msgstr ""

#: ../../pep-0627.rst:16
msgid ""
"This PEP clarifies and updates :pep:`376` (Database of Installed Python "
"Distributions), rewriting it as an interoperability standard. It moves "
"the canonical location of the standard to the Python Packaging Authority "
"(PyPA) standards repository, and sets up guidelines for changing it."
msgstr ""

#: ../../pep-0627.rst:22
msgid ""
"Two files in installed ``.dist-info`` directories are made optional: "
"``RECORD`` (which PEP 376 lists as mandatory, but suggests it can be left"
" out for \"system packages\"), and ``INSTALLER``."
msgstr ""

#: ../../pep-0627.rst:28
msgid "Motivation"
msgstr ""

#: ../../pep-0627.rst:30
msgid ""
"Python packaging is moving from relying on specific tools (Setuptools and"
" pip) toward an ecosystem of tools and tool-agnostic interoperability "
"standards."
msgstr ""

#: ../../pep-0627.rst:33
msgid ""
"PEP 376 is not written as an interoperability standard. It describes "
"implementation details of specific tools and libraries, and is "
"underspecified, leaving much room for implementation-defined behavior."
msgstr ""

#: ../../pep-0627.rst:37
msgid ""
"This is a proposal to “distill” the standard from PEP 376, clarify it, "
"and rewrite it to be tool-agnostic."
msgstr ""

#: ../../pep-0627.rst:40
msgid ""
"The aim of this PEP is to have a better standard, not necessarily a "
"perfect one. Some issues are left to later clarification."
msgstr ""

#: ../../pep-0627.rst:45
msgid "Rationale Change"
msgstr ""

#: ../../pep-0627.rst:47
msgid "PEP 376's rationale focuses on two problems:"
msgstr ""

#: ../../pep-0627.rst:49
msgid ""
"There are too many ways to install projects and this makes interoperation"
" difficult."
msgstr ""

#: ../../pep-0627.rst:50
msgid "There is no API to get information on installed distributions."
msgstr ""

#: ../../pep-0627.rst:52
msgid ""
"The new document focuses only the on-disk format of information about "
"installed projects. Providing API to install, uninstall or query this "
"information is left to be implemented by tools."
msgstr ""

#: ../../pep-0627.rst:59
msgid "Standard and Changes Process"
msgstr ""

#: ../../pep-0627.rst:61
msgid ""
"The canonical standard for *Recording installed projects* (previously "
"known as *Database of Installed Python Distributions*) is the "
"`documentation`_ at ``packaging.python.org``. Any changes to the document"
" (except trivial language or typography fixes) must be made through the "
"PEP process."
msgstr ""

#: ../../pep-0627.rst:67
msgid ""
"The document is normative (with examples to aid understanding). PEPs that"
" change it, such as this one, contain additional information that is "
"expected to get out of date, such as rationales and compatibility "
"considerations."
msgstr ""

#: ../../pep-0627.rst:72
msgid ""
"The proposed standard is submitted together with this PEP as a pull "
"request to ``packaging.python.org``."
msgstr ""

#: ../../pep-0627.rst:79
msgid "Changes and their Rationale"
msgstr ""

#: ../../pep-0627.rst:82
msgid "Renaming to \"Recording installed projects\""
msgstr ""

#: ../../pep-0627.rst:84
msgid ""
"The standard is renamed from *Database of Installed Python Distributions*"
" to *Recording installed projects*."
msgstr ""

#: ../../pep-0627.rst:87
msgid ""
"While putting files in known locations on disk may be thought of as a "
"“database”, it's not what most people think about when they hear the "
"term. The PyPA links to PEP 376 under the heading *Recording installed "
"distributions*."
msgstr ""

#: ../../pep-0627.rst:91
msgid ""
"The PyPA glossary defines “Distribution” (or, “Distribution Package” to "
"prevent confusion with e.g. Linux distributions) as “A versioned archive "
"file […]”. Since there may be other ways to install Python code than from"
" archive files, the document uses “installed project” rather than "
"“installed distribution”."
msgstr ""

#: ../../pep-0627.rst:98
msgid "Removal of Implementation Details"
msgstr ""

#: ../../pep-0627.rst:100
msgid ""
"All tool- and library-specific details are removed. The mechanisms of how"
" a project is installed are also left out: the document focuses on the "
"end state. One exception is a sketch of an uninstallation algorithm, "
"which is given to better explain the purpose of the ``RECORD`` file."
msgstr ""

#: ../../pep-0627.rst:106
msgid ""
"References to ``.egg-info`` and ``.egg``, formats specific to "
"``setuptools`` and ``distutils``, are left out."
msgstr ""

#: ../../pep-0627.rst:112
msgid "Explicitly Allowing Additional Files"
msgstr ""

#: ../../pep-0627.rst:114
msgid ""
"The ``.dist-info`` directory is allowed to contain files not specified in"
" the spec. The current tools already do this."
msgstr ""

#: ../../pep-0627.rst:118
msgid ""
"A note in the specification mentions files in the ``.dist-info`` "
"directory of *wheels*. Current tools copy these files to the installed "
"``.dist-info``—something to keep in mind for further standardization "
"efforts."
msgstr ""

#: ../../pep-0627.rst:124
msgid "Clarifications in the ``RECORD`` File"
msgstr ""

#: ../../pep-0627.rst:126
msgid ""
"The CSV dialect is specified to be the default of Python's ``csv`` "
"module. This resolves edge cases around handling double-quotes and line "
"terminators in file names."
msgstr ""

#: ../../pep-0627.rst:130
msgid ""
"The “base” of relative paths in ``RECORD`` is specified relative to the "
"``.dist-info`` directory, rather than tool-specific ``--install-lib`` and"
" ``--prefix`` options."
msgstr ""

#: ../../pep-0627.rst:134
msgid ""
"Both *hash* and *size* fields are now optional (for any file, not just "
"``.pyc``, ``.pyo`` and ``RECORD``). Leavng them out is discouraged, "
"except for ``*.pyc`` and ``RECORD`` itself. (Note that PEP 376 is unclear"
" on what was optional; when taken literally, its text and examples "
"contradict. Despite that, “both fields are optional“ is a reasonable "
"interpretation of PEP 376. The alternative would be to mandate—rather "
"than recommend—which files can be recorded without hash and size, and to "
"update that list over time as new use cases come up.)"
msgstr ""

#: ../../pep-0627.rst:144
msgid ""
"The new spec explicitly says that the ``RECORD`` file must now include "
"*all* files of the installed project (the exception for ``.pyc`` files "
"remains). Since tools use ``RECORD`` for uninstallation, incomplete file "
"lists could introduce orphaned files to users' environments. On the other"
" hand, this means that there is no way to record hashes of some any files"
" if the full list of files is unknown."
msgstr ""

#: ../../pep-0627.rst:151
msgid ""
"A sketch of an uninstallation algorithm is included to clarify the file's"
" primary purpose and contents."
msgstr ""

#: ../../pep-0627.rst:154
msgid ""
"Tools must not uninstall/remove projects that lack a ``RECORD`` file "
"(unless they have external information, such as in system package "
"managers of Linux distros)."
msgstr ""

#: ../../pep-0627.rst:158
msgid ""
"On Windows, files in ``RECORD`` may be separated by either ``/`` or "
"``\\``. PEP 376 was unclear on this: it mandates forward slashes in one "
"place, but shows backslackes in a Windows-specific example."
msgstr ""

#: ../../pep-0627.rst:165
msgid "Optional ``RECORD`` File"
msgstr ""

#: ../../pep-0627.rst:167
msgid ""
"The ``RECORD`` file is made optional. Not all tools can easily generate a"
" list of installed files in a Python-specific format."
msgstr ""

#: ../../pep-0627.rst:171
msgid ""
"Specifically, the ``RECORD`` file is unnecessary when projects are "
"installed by a Linux system packaging system, which has its own ways to "
"keep track of files, uninstall them or check their integrity. Having to "
"keep a ``RECORD`` file in sync with the disk and the system package "
"database would be unreasonably fragile, and no ``RECORD`` file is better "
"than one that does not correspond to reality."
msgstr ""

#: ../../pep-0627.rst:178
msgid ""
"(Full disclosure: The author of this PEP is an RPM packager active in the"
" Fedora Linux distro.)"
msgstr ""

#: ../../pep-0627.rst:182
msgid "Optional ``INSTALLER`` File"
msgstr ""

#: ../../pep-0627.rst:184
msgid ""
"The ``INSTALLER`` file is also made optional, and specified to be used "
"for informational purposes only. It is still a single-line text file "
"containing the name of the installer."
msgstr ""

#: ../../pep-0627.rst:188
msgid ""
"This file was originally added to distinguish projects installed by the "
"Python installer (``pip``) from ones installed by other package managers "
"(e.g. ``dnf``). There were attempts to use this file to prevent ``pip`` "
"from updating or uninstalling packages it didn't install."
msgstr ""

#: ../../pep-0627.rst:194
msgid ""
"Our goal is supporting interoperating tools, and basing any action on "
"which tool happened to install a package runs counter to that goal."
msgstr ""

#: ../../pep-0627.rst:197
msgid ""
"Instead of relying on the installer name, tools should use feature "
"detection. The current document offers a crude way of making a project "
"untouchable by Python tooling: omitting ``RECORD`` file."
msgstr ""

#: ../../pep-0627.rst:201
msgid "On the other hand, the installer name may be useful in hints to the user."
msgstr ""

#: ../../pep-0627.rst:203
msgid ""
"To align with this new purpose of the file, the new specification allows "
"any ASCII string in ``INSTALLER``, rather than a lowercase identifier. It"
" also suggests using the command-line command, if available."
msgstr ""

#: ../../pep-0627.rst:209
msgid "The ``REQUESTED`` File: Removed from Spec"
msgstr ""

#: ../../pep-0627.rst:211
msgid "The ``REQUESTED`` file is now considered a tool-specific extension."
msgstr ""

#: ../../pep-0627.rst:213
msgid ""
"Per :pep:`376`, ``REQUESTED`` was to be written when a project was "
"installed by direct user request, as opposed to automatically to satisfy "
"dependencies of another project. Projects without this marker file could "
"be uninstalled when no longer needed."
msgstr ""

#: ../../pep-0627.rst:218
msgid ""
"Despite the standard, many existing installers (including older versions "
"of ``pip``) never write this file. There is no distinction between "
"projects that are “OK to remove when no longer needed” and ones simply "
"installed by a tool that ignores ``REQUESTED``. So, the file is currently"
" not usable for its intended purpose (unless a tool can use additional, "
"non-standard information)."
msgstr ""

#: ../../pep-0627.rst:226
msgid "Clarifications"
msgstr ""

#: ../../pep-0627.rst:228
msgid ""
"When possible, terms (such as ``name`` and ``version``) are qualified by "
"references to existing specs."
msgstr ""

#: ../../pep-0627.rst:233
msgid "Deferred Ideas"
msgstr ""

#: ../../pep-0627.rst:235
msgid ""
"To limit the scope of this PEP, some improvements are explicitly left to "
"future PEPs:"
msgstr ""

#: ../../pep-0627.rst:238
msgid "Encoding of the ``RECORD`` file"
msgstr ""

#: ../../pep-0627.rst:239
msgid "Limiting or namespacing files that can appear in ``.dist-info``"
msgstr ""

#: ../../pep-0627.rst:240
msgid ""
"Marking the difference between projects installed directly by user "
"request versus those installed to satisfy dependencies, so that the "
"latter can be removed when no longer needed."
msgstr ""

#: ../../pep-0627.rst:246
msgid "Copyright"
msgstr ""

#: ../../pep-0627.rst:248
msgid ""
"This document is placed in the public domain or under the "
"CC0-1.0-Universal license, whichever is more permissive."
msgstr ""

