# SOME DESCRIPTIVE TITLE.
# Copyright (C)
# This file is distributed under the same license as the PEPs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PEPs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-11-12 17:38+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../pep-0390.txt
msgid "PEP"
msgstr ""

#: ../../pep-0390.txt:1
msgid "390"
msgstr ""

#: ../../pep-0390.txt
msgid "Title"
msgstr ""

#: ../../pep-0390.txt:2
msgid "Static metadata for Distutils"
msgstr ""

#: ../../pep-0390.txt
msgid "Author"
msgstr ""

#: ../../pep-0390.txt:5
msgid "Tarek Ziad√© <tarek@ziade.org>"
msgstr ""

#: ../../pep-0390.txt
msgid "BDFL-Delegate"
msgstr ""

#: ../../pep-0390.txt:6
msgid "Nick Coghlan"
msgstr ""

#: ../../pep-0390.txt
msgid "Discussions-To"
msgstr ""

#: ../../pep-0390.txt:7
msgid "<distutils-sig@python.org>"
msgstr ""

#: ../../pep-0390.txt
msgid "Status"
msgstr ""

#: ../../pep-0390.txt:8
msgid "Rejected"
msgstr ""

#: ../../pep-0390.txt
msgid "Type"
msgstr ""

#: ../../pep-0390.txt:9
msgid "Standards Track"
msgstr ""

#: ../../pep-0390.txt
msgid "Created"
msgstr ""

#: ../../pep-0390.txt:11
msgid "10-Oct-2009"
msgstr ""

#: ../../pep-0390.txt
msgid "Python-Version"
msgstr ""

#: ../../pep-0390.txt:12
msgid "2.7, 3.2"
msgstr ""

#: ../../pep-0390.txt
msgid "Post-History"
msgstr ""

#: ../../pep-0390.txt
msgid "Resolution"
msgstr ""

#: ../../pep-0390.txt:14
msgid "https://mail.python.org/pipermail/distutils-sig/2013-April/020597.html"
msgstr ""

#: ../../pep-0390.txt:17
msgid "Abstract"
msgstr ""

#: ../../pep-0390.txt:19
msgid ""
"This PEP describes a new section and a new format for the ``setup.cfg`` "
"file, that allows describing the Metadata of a package without using "
"``setup.py``."
msgstr ""

#: ../../pep-0390.txt:24
msgid "Rejection Notice"
msgstr ""

#: ../../pep-0390.txt:26
msgid ""
"As distutils2 is no longer going to be incorporated into the standard "
"library, this PEP was rejected by Nick Coghlan in late April, 2013."
msgstr ""

#: ../../pep-0390.txt:29
msgid ""
"A replacement PEP based on PEP 426 (metadata 2.0) will be created that "
"defines the minimum amount of information needed to generate an sdist "
"archive given a source tarball or VCS checkout."
msgstr ""

#: ../../pep-0390.txt:35
msgid "Rationale"
msgstr ""

#: ../../pep-0390.txt:37
msgid ""
"Today, if you want to list all the Metadata of a distribution (see PEP "
"314) that is not installed, you need to use the ``setup.py`` command line"
" interface."
msgstr ""

#: ../../pep-0390.txt:40
msgid "So, basically, you download it, and run::"
msgstr ""

#: ../../pep-0390.txt:48
msgid ""
"Where ``name`` and ``version`` are metadata fields. This is working fine "
"but as soon as the developers add more code in ``setup.py``, this feature"
" might break or in worst cases might do unwanted things on the target "
"system."
msgstr ""

#: ../../pep-0390.txt:52
msgid ""
"Moreover, when an OS packager wants to get the metadata of a distribution"
" he is re-packaging, he might encounter some problems to understand the "
"``setup.py`` file he's working with."
msgstr ""

#: ../../pep-0390.txt:56
msgid ""
"So the rationale of this PEP is to provide a way to declare the metadata "
"in a static configuration file alongside ``setup.py`` that doesn't "
"require any third party code to run."
msgstr ""

#: ../../pep-0390.txt:62
msgid "Adding a ``metadata`` section in ``setup.cfg``"
msgstr ""

#: ../../pep-0390.txt:64
msgid ""
"The first thing we want to introduce is a ``[metadata]`` section, in the "
"``setup.cfg`` file, that may contain any field from the Metadata::"
msgstr ""

#: ../../pep-0390.txt:71
msgid ""
"The ``setup.cfg`` file is used to avoid adding yet another configuration "
"file to work with in Distutils."
msgstr ""

#: ../../pep-0390.txt:74
msgid ""
"This file is already read by Distutils when a command is executed, and if"
" the ``metadata`` section is found, it will be used to fill the metadata "
"fields. If an option that corresponds to a Metadata field is given to "
"``setup()``, it will override the value that was possibly present in "
"``setup.cfg``."
msgstr ""

#: ../../pep-0390.txt:80
msgid ""
"Notice that ``setup.py`` is still used and can be required to define some"
" options that are not part of the Metadata fields. For instance, the "
"``sdist`` command can use options like ``packages`` or ``scripts``."
msgstr ""

#: ../../pep-0390.txt:86
msgid "Multi-lines values"
msgstr ""

#: ../../pep-0390.txt:88
msgid ""
"Some Metadata fields can have multiple values. To keep ``setup.cfg`` "
"compatible with ``ConfigParser`` and the RFC 822 ``LONG HEADER FIELDS`` "
"(see section 3.1.1), these are expressed with ``,``-separated values::"
msgstr ""

#: ../../pep-0390.txt:94
msgid ""
"When this variable is read, the values are parsed and transformed into a "
"list: ``['pywin32', 'bar > 1.0', 'foo']``."
msgstr ""

#: ../../pep-0390.txt:99
msgid "Context-dependant sections"
msgstr ""

#: ../../pep-0390.txt:101
msgid ""
"The ``metadata`` section will also be able to use context-dependant "
"sections."
msgstr ""

#: ../../pep-0390.txt:103
msgid ""
"A context-dependant section is a section with a condition about the "
"execution environment. Here's some examples::"
msgstr ""

#: ../../pep-0390.txt:123
msgid ""
"Every ``[metadata:condition]`` section will be used only if the condition"
" is met when the file is read. The background motivation for these "
"context-dependant sections is to be able to define requirements that "
"varies depending on the platform the distribution might be installed on. "
"(see PEP 314)."
msgstr ""

#: ../../pep-0390.txt:129
msgid ""
"The micro-language behind this is the simplest possible: it compares only"
" strings, with the ``==`` and ``in`` operators (and their opposites), and"
" with the ability to combine expressions. It makes it also easy to "
"understand to non-pythoneers."
msgstr ""

#: ../../pep-0390.txt:134
msgid "The pseudo-grammar is ::"
msgstr ""

#: ../../pep-0390.txt:138
msgid "where ``EXPR`` belongs to any of those:"
msgstr ""

#: ../../pep-0390.txt:140
#, python-format
msgid "python_version = '%s.%s' % (sys.version_info[0], sys.version_info[1])"
msgstr ""

#: ../../pep-0390.txt:141
msgid "os_name = os.name"
msgstr ""

#: ../../pep-0390.txt:142
msgid "sys_platform = sys.platform"
msgstr ""

#: ../../pep-0390.txt:143
msgid "platform_version = platform.version()"
msgstr ""

#: ../../pep-0390.txt:144
msgid "platform_machine = platform.machine()"
msgstr ""

#: ../../pep-0390.txt:145
msgid "a free string, like ``2.4``, or ``win32``"
msgstr ""

#: ../../pep-0390.txt:147
msgid ""
"Notice that ``in`` is restricted to strings, meaning that it is not "
"possible to use other sequences like tuples or lists on the right side."
msgstr ""

#: ../../pep-0390.txt:150
msgid ""
"Distutils will provide a function that is able to generate the metadata "
"of a distribution, given a ``setup.cfg`` file, for the execution "
"environment::"
msgstr ""

#: ../../pep-0390.txt:157
msgid ""
"This means that a vanilla Python will be able to read the metadata of a "
"package without running any third party code."
msgstr ""

#: ../../pep-0390.txt:160
msgid ""
"Notice that this feature is not restricted to the ``metadata`` namespace."
" Consequently, any other section can be extended with such context-"
"dependant sections."
msgstr ""

#: ../../pep-0390.txt:165
msgid "Impact on PKG-INFO generation and PEP 314"
msgstr ""

#: ../../pep-0390.txt:167
msgid ""
"When ``PKG-INFO`` is generated by Distutils, every field that relies on a"
" condition will have that condition written at the end of the line, after"
" a `;` separator::"
msgstr ""

#: ../../pep-0390.txt:185
msgid ""
"Notice that this file can be opened with the ``DistributionMetadata`` "
"class. This class will be able to use the micro-language using the "
"execution environment."
msgstr ""

#: ../../pep-0390.txt:189
msgid "Let's run in on a ``Python 2.5 i386 Linux``::"
msgstr ""

#: ../../pep-0390.txt:196
msgid ""
"The execution environment can be overridden in case we want to get the "
"metadata for another environment::"
msgstr ""

#: ../../pep-0390.txt:209
msgid ""
"PEP 314 is changed accordingly, meaning that each field will be able to "
"have that extra condition marker."
msgstr ""

#: ../../pep-0390.txt:213
msgid "Compatibility"
msgstr ""

#: ../../pep-0390.txt:215
msgid ""
"This change is based on a new metadata ``1.2`` format meaning that "
"Distutils will be able to distinguish old PKG-INFO files from new ones."
msgstr ""

#: ../../pep-0390.txt:218
msgid ""
"The ``setup.cfg`` file change will stay ``ConfigParser``-compatible and "
"will not break existing ``setup.cfg`` files."
msgstr ""

#: ../../pep-0390.txt:222
msgid "Limitations"
msgstr ""

#: ../../pep-0390.txt:224
msgid ""
"We are not providing ``<`` and ``>`` operators at this time, and "
"``python_version`` is a regular string. This implies using ``or`` "
"operators when a section needs to be restricted to a couple of Python "
"versions. Although, if PEP 386 is accepted, ``python_version`` could be "
"changed internally into something comparable with strings, and ``<`` and "
"``>`` operators introduced."
msgstr ""

#: ../../pep-0390.txt:231
msgid ""
"Last, if a distribution is unable to set all metadata fields in "
"``setup.cfg``, that's fine, the fields will be set to ``UNKNOWN`` when "
"``local_metadata`` is called. Getting ``UNKNOWN`` values will mean that "
"it might be necessary to run the ``setup.py`` command line interface to "
"get the whole set of metadata."
msgstr ""

#: ../../pep-0390.txt:237
msgid "Acknowledgments"
msgstr ""

#: ../../pep-0390.txt:239
msgid "The Distutils-SIG."
msgstr ""

#: ../../pep-0390.txt:243
msgid "Copyright"
msgstr ""

#: ../../pep-0390.txt:245
msgid "This document has been placed in the public domain."
msgstr ""

