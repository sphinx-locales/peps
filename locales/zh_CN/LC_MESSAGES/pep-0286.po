# SOME DESCRIPTIVE TITLE.
# Copyright (C)
# This file is distributed under the same license as the PEPs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PEPs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-11-12 17:38+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../pep-0286.txt
msgid "PEP"
msgstr ""

#: ../../pep-0286.txt:1
msgid "286"
msgstr ""

#: ../../pep-0286.txt
msgid "Title"
msgstr ""

#: ../../pep-0286.txt:2
msgid "Enhanced Argument Tuples"
msgstr ""

#: ../../pep-0286.txt
msgid "Author"
msgstr ""

#: ../../pep-0286.txt:5
msgid "martin@v.loewis.de (Martin von LÃ¶wis)"
msgstr ""

#: ../../pep-0286.txt
msgid "Status"
msgstr ""

#: ../../pep-0286.txt:6
msgid "Deferred"
msgstr ""

#: ../../pep-0286.txt
msgid "Type"
msgstr ""

#: ../../pep-0286.txt:7
msgid "Standards Track"
msgstr ""

#: ../../pep-0286.txt
msgid "Created"
msgstr ""

#: ../../pep-0286.txt:9
msgid "03-Mar-2002"
msgstr ""

#: ../../pep-0286.txt
msgid "Python-Version"
msgstr ""

#: ../../pep-0286.txt:10
msgid "2.3"
msgstr ""

#: ../../pep-0286.txt
msgid "Post-History"
msgstr ""

#: ../../pep-0286.txt:15
msgid "Abstract"
msgstr ""

#: ../../pep-0286.txt:17
msgid ""
"``PyArg_ParseTuple`` is confronted with difficult memory management if an"
" argument converter creates new memory.  To deal with these cases, a "
"specialized argument type is proposed."
msgstr ""

#: ../../pep-0286.txt:23
msgid "PEP Deferral"
msgstr ""

#: ../../pep-0286.txt:25
msgid ""
"Further exploration of the concepts covered in this PEP has been deferred"
" for lack of a current champion interested in promoting the goals of the "
"PEP and collecting and incorporating feedback, and with sufficient "
"available time to do so effectively."
msgstr ""

#: ../../pep-0286.txt:30
msgid ""
"The resolution of this PEP may also be affected by the resolution of PEP "
"426, which proposes the use of a preprocessing step to generate some "
"aspects of C API interface code."
msgstr ""

#: ../../pep-0286.txt:36
msgid "Problem description"
msgstr ""

#: ../../pep-0286.txt:38
msgid ""
"Today, argument tuples keep references to the function arguments, which "
"are guaranteed to live as long as the argument tuple exists which is at "
"least as long as the function call is being executed."
msgstr ""

#: ../../pep-0286.txt:42
msgid ""
"In some cases, parsing an argument will allocate new memory, which is "
"then to be released by the caller.  This has two problems:"
msgstr ""

#: ../../pep-0286.txt:45
msgid ""
"In case of failure, the application cannot know what memory to release; "
"most callers don't even know that they have the responsibility to release"
" that memory.  Example for this are the ``N`` converter (bug #416288 "
"[1]_) and the ``es#`` converter (bug #501716 [2]_)."
msgstr ""

#: ../../pep-0286.txt:51
msgid ""
"Even for successful argument parsing, it is still inconvenient for the "
"caller to be responsible for releasing the memory.  In some cases, this "
"is unnecessarily inefficient.  For example, the ``es`` converter copies "
"the conversion result into memory, even though there already is a string "
"object that has the right contents."
msgstr ""

#: ../../pep-0286.txt:60
msgid "Proposed solution"
msgstr ""

#: ../../pep-0286.txt:62
msgid ""
"A new type 'argument tuple' is introduced.  This type derives from tuple,"
" adding an ``__dict__`` member (at ``tp_dictoffset`` -4).  Instances of "
"this type might get the following attributes:"
msgstr ""

#: ../../pep-0286.txt:66
msgid ""
"'failobjects', a list of objects which need to be deallocated in case of "
"success"
msgstr ""

#: ../../pep-0286.txt:69
msgid ""
"'okobjects', a list of object which will be released when the argument "
"tuple is released"
msgstr ""

#: ../../pep-0286.txt:72
msgid ""
"To manage this type, the following functions will be added, and used "
"appropriately in ``ceval.c`` and ``getargs.c``:"
msgstr ""

#: ../../pep-0286.txt:75
msgid "``PyArgTuple_New(int);``"
msgstr ""

#: ../../pep-0286.txt:76
msgid "``PyArgTuple_AddFailObject(PyObject*, PyObject*);``"
msgstr ""

#: ../../pep-0286.txt:77
msgid "``PyArgTuple_AddFailMemory(PyObject*, void*);``"
msgstr ""

#: ../../pep-0286.txt:78
msgid "``PyArgTuple_AddOkObject(PyObject*, PyObject*);``"
msgstr ""

#: ../../pep-0286.txt:79
msgid "``PyArgTuple_AddOkMemory(PyObject*, void*);``"
msgstr ""

#: ../../pep-0286.txt:80
msgid "``PyArgTuple_ClearFailed(PyObject*);``"
msgstr ""

#: ../../pep-0286.txt:82
msgid ""
"When argument parsing fails, all fail objects will be released through "
"``Py_DECREF``, and all fail memory will be released through "
"``PyMem_Free``.  If parsing succeeds, the references to the fail objects "
"and fail memory are dropped, without releasing anything."
msgstr ""

#: ../../pep-0286.txt:87
msgid ""
"When the argument tuple is released, all ok objects and memory will be "
"released."
msgstr ""

#: ../../pep-0286.txt:90
msgid ""
"If those functions are called with an object of a different type, a "
"warning is issued and no further action is taken; usage of the affected "
"converters without using argument tuples is deprecated."
msgstr ""

#: ../../pep-0286.txt:96
msgid "Affected converters"
msgstr ""

#: ../../pep-0286.txt:98
msgid ""
"The following converters will add fail memory and fail objects: ``N``, "
"``es``, ``et``, ``es#``, ``et#`` (unless memory is passed into the "
"converter)"
msgstr ""

#: ../../pep-0286.txt:103
msgid "New converters"
msgstr ""

#: ../../pep-0286.txt:105
msgid ""
"To simplify Unicode conversion, the ``e*`` converters are duplicated as "
"``E*`` converters (``Es``, ``Et``, ``Es#``, ``Et#``).  The usage of the "
"``E*`` converters is identical to that of the ``e*`` converters, except "
"that the application will not need to manage the resulting memory. This "
"will be implemented through registration of Ok objects with the argument "
"tuple.  The ``e*`` converters are deprecated."
msgstr ""

#: ../../pep-0286.txt:114
msgid "References"
msgstr ""

#: ../../pep-0286.txt:116
msgid "infrequent memory leak in pyexpat (http://bugs.python.org/issue416288)"
msgstr ""

#: ../../pep-0286.txt:119
msgid "\"es#\" parser marker leaks memory (http://bugs.python.org/issue501716)"
msgstr ""

#: ../../pep-0286.txt:124
msgid "Copyright"
msgstr ""

#: ../../pep-0286.txt:126
msgid "This document has been placed in the public domain."
msgstr ""

