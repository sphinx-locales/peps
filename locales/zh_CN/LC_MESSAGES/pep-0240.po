# SOME DESCRIPTIVE TITLE.
# Copyright (C)
# This file is distributed under the same license as the PEPs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PEPs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-11-12 17:38+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../pep-0240.txt
msgid "PEP"
msgstr ""

#: ../../pep-0240.txt:1
msgid "240"
msgstr ""

#: ../../pep-0240.txt
msgid "Title"
msgstr ""

#: ../../pep-0240.txt:2
msgid "Adding a Rational Literal to Python"
msgstr ""

#: ../../pep-0240.txt
msgid "Author"
msgstr ""

#: ../../pep-0240.txt:5
msgid ""
"Christopher A. Craig <python-pep@ccraig.org>, Moshe Zadka "
"<moshez@zadka.site.co.il>"
msgstr ""

#: ../../pep-0240.txt
msgid "Status"
msgstr ""

#: ../../pep-0240.txt:6
msgid "Rejected"
msgstr ""

#: ../../pep-0240.txt
msgid "Type"
msgstr ""

#: ../../pep-0240.txt:7
msgid "Standards Track"
msgstr ""

#: ../../pep-0240.txt
msgid "Created"
msgstr ""

#: ../../pep-0240.txt:9
msgid "11-Mar-2001"
msgstr ""

#: ../../pep-0240.txt
msgid "Python-Version"
msgstr ""

#: ../../pep-0240.txt:10
msgid "2.2"
msgstr ""

#: ../../pep-0240.txt
msgid "Post-History"
msgstr ""

#: ../../pep-0240.txt:11
msgid "16-Mar-2001"
msgstr ""

#: ../../pep-0240.txt:15
msgid "Abstract"
msgstr ""

#: ../../pep-0240.txt:17
msgid ""
"A different PEP [1]_ suggests adding a builtin rational type to Python.  "
"This PEP suggests changing the ddd.ddd float literal to a rational in "
"Python, and modifying non-integer division to return it."
msgstr ""

#: ../../pep-0240.txt:24
msgid "BDFL Pronouncement"
msgstr ""

#: ../../pep-0240.txt:26
msgid ""
"This PEP is rejected.  The needs outlined in the rationale section have "
"been addressed to some extent by the acceptance of PEP 327 for decimal "
"arithmetic.  Guido also noted, \"Rational arithmetic was the default "
"'exact' arithmetic in ABC and it did not work out as expected\".  See the"
" python-dev discussion on 17 June 2005 [2]_."
msgstr ""

#: ../../pep-0240.txt:34
msgid "Rationale"
msgstr ""

#: ../../pep-0240.txt:36
msgid ""
"Rational numbers are useful for exact and unsurprising arithmetic. They "
"give the correct results people have been taught in various math classes."
"  Making the \"obvious\" non-integer type one with more predictable "
"semantics will surprise new programmers less than using floating point "
"numbers. As quite a few posts on c.l.py and on tutor@python.org have "
"shown, people often get bit by strange semantics of floating point "
"numbers: for example, ``round(0.98, 2)`` still gives 0.97999999999999998."
msgstr ""

#: ../../pep-0240.txt:47
msgid "Proposal"
msgstr ""

#: ../../pep-0240.txt:49
msgid ""
"Literals conforming to the regular expression ``'\\d*.\\d*'`` will be "
"rational numbers."
msgstr ""

#: ../../pep-0240.txt:54
msgid "Backwards Compatibility"
msgstr ""

#: ../../pep-0240.txt:56
msgid ""
"The only backwards compatible issue is the type of literals mentioned "
"above.  The following migration is suggested:"
msgstr ""

#: ../../pep-0240.txt:59
msgid ""
"The next Python after approval will allow ``from __future__ import "
"rational_literals`` to cause all such literals to be treated as rational "
"numbers."
msgstr ""

#: ../../pep-0240.txt:63
msgid ""
"Python 3.0 will have a warning, turned on by default, about such literals"
" in the absence of a `` __future__`` statement.  The warning message will"
" contain information about the ``__future__`` statement, and indicate "
"that to get floating point literals, they should be suffixed with \"e0\"."
msgstr ""

#: ../../pep-0240.txt:69
msgid ""
"Python 3.1 will have the warning turned off by default.  This warning "
"will stay in place for 24 months, at which time the literals will be "
"rationals and the warning will be removed."
msgstr ""

#: ../../pep-0240.txt:75
msgid "Common Objections"
msgstr ""

#: ../../pep-0240.txt:77
msgid ""
"Rationals are slow and memory intensive! (Relax, I'm not taking floats "
"away, I'm just adding two more characters. ``1e0`` will still be a float)"
msgstr ""

#: ../../pep-0240.txt:81
msgid ""
"Rationals must present themselves as a decimal float or they will be "
"horrible for users expecting decimals (i.e. ``str(.5)`` should return "
"``'.5'`` and not ``'1/2'``).  This means that many rationals must be "
"truncated at some point, which gives us a new loss of precision."
msgstr ""

#: ../../pep-0240.txt:89
msgid "References"
msgstr ""

#: ../../pep-0240.txt:91
msgid ""
"PEP 239, Adding a Rational Type to Python, Zadka, "
"http://www.python.org/dev/peps/pep-0239/"
msgstr ""

#: ../../pep-0240.txt:93
msgid ""
"Raymond Hettinger, Propose rejection of PEPs 239 and 240 -- a builtin "
"rational type and rational literals https://mail.python.org/pipermail"
"/python-dev/2005-June/054281.html"
msgstr ""

#: ../../pep-0240.txt:99
msgid "Copyright"
msgstr ""

#: ../../pep-0240.txt:101
msgid "This document has been placed in the public domain."
msgstr ""

