# SOME DESCRIPTIVE TITLE.
# Copyright (C)
# This file is distributed under the same license as the PEPs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PEPs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-11-12 17:38+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../pep-3125.txt
msgid "PEP"
msgstr ""

#: ../../pep-3125.txt:1
msgid "3125"
msgstr ""

#: ../../pep-3125.txt
msgid "Title"
msgstr ""

#: ../../pep-3125.txt:2
msgid "Remove Backslash Continuation"
msgstr ""

#: ../../pep-3125.txt
msgid "Author"
msgstr ""

#: ../../pep-3125.txt:5
msgid "Jim J. Jewett <JimJJewett@gmail.com>"
msgstr ""

#: ../../pep-3125.txt
msgid "Status"
msgstr ""

#: ../../pep-3125.txt:6
msgid "Rejected"
msgstr ""

#: ../../pep-3125.txt
msgid "Type"
msgstr ""

#: ../../pep-3125.txt:7
msgid "Standards Track"
msgstr ""

#: ../../pep-3125.txt
msgid "Created"
msgstr ""

#: ../../pep-3125.txt:9
msgid "29-Apr-2007"
msgstr ""

#: ../../pep-3125.txt
msgid "Post-History"
msgstr ""

#: ../../pep-3125.txt:10
msgid "29-Apr-2007, 30-Apr-2007, 04-May-2007"
msgstr ""

#: ../../pep-3125.txt:14
msgid "Rejection Notice"
msgstr ""

#: ../../pep-3125.txt:16
msgid ""
"This PEP is rejected.  There wasn't enough support in favor, the feature "
"to be removed isn't all that harmful, and there are some use cases that "
"would become harder."
msgstr ""

#: ../../pep-3125.txt:22
msgid "Abstract"
msgstr ""

#: ../../pep-3125.txt:24
msgid ""
"Python initially inherited its parsing from C.  While this has been "
"generally useful, there are some remnants which have been less useful for"
" Python, and should be eliminated."
msgstr ""

#: ../../pep-3125.txt:28
msgid ""
"This PEP proposes elimination of terminal ``\\`` as a marker for line "
"continuation."
msgstr ""

#: ../../pep-3125.txt:33
msgid "Motivation"
msgstr ""

#: ../../pep-3125.txt:35
msgid ""
"One goal for Python 3000 should be to simplify the language by removing "
"unnecessary or duplicated features.  There are currently several ways to "
"indicate that a logical line is continued on the following physical line."
msgstr ""

#: ../../pep-3125.txt:40
msgid ""
"The other continuation methods are easily explained as a logical "
"consequence of the semantics they provide; ``\\`` is simply an escape "
"character that needs to be memorized."
msgstr ""

#: ../../pep-3125.txt:46
msgid "Existing Line Continuation Methods"
msgstr ""

#: ../../pep-3125.txt:50
msgid "Parenthetical Expression - ``([{}])``"
msgstr ""

#: ../../pep-3125.txt:52
msgid ""
"Open a parenthetical expression.  It doesn't matter whether people view "
"the \"line\" as continuing; they do immediately recognize that the "
"expression needs to be closed before the statement can end."
msgstr ""

#: ../../pep-3125.txt:56
msgid "Examples using each of ``()``, ``[]``, and ``{}``::"
msgstr ""

#: ../../pep-3125.txt:66
msgid ""
"Note that it is always possible to parenthesize an expression, but it can"
" seem odd to parenthesize an expression that needs parentheses only for "
"the line break::"
msgstr ""

#: ../../pep-3125.txt:75
msgid "Triple-Quoted Strings"
msgstr ""

#: ../../pep-3125.txt:77
msgid ""
"Open a triple-quoted string; again, people recognize that the string "
"needs to finish before the next statement starts. ::"
msgstr ""

#: ../../pep-3125.txt:92
msgid "Terminal ``\\`` in the general case"
msgstr ""

#: ../../pep-3125.txt:94
msgid ""
"A terminal ``\\`` indicates that the logical line is continued on the "
"following physical line (after whitespace).  There are no particular "
"semantics associated with this.  This form is never required, although it"
" may look better (particularly for people with a C language background) "
"in some cases::"
msgstr ""

#: ../../pep-3125.txt:103
msgid ""
"Also note that the ``\\`` must be the final character in the line.  If "
"your editor navigation can add whitespace to the end of a line, that "
"invisible change will alter the semantics of the program. Fortunately, "
"the typical result is only a syntax error, rather than a runtime bug::"
msgstr ""

#: ../../pep-3125.txt:114
msgid ""
"This PEP proposes to eliminate this redundant and potentially confusing "
"alternative."
msgstr ""

#: ../../pep-3125.txt:119
msgid "Terminal ``\\`` within a string"
msgstr ""

#: ../../pep-3125.txt:121
msgid ""
"A terminal ``\\`` within a single-quoted string, at the end of the line."
"  This is arguably a special case of the terminal ``\\``, but it is a "
"special case that may be worth keeping. ::"
msgstr ""

#: ../../pep-3125.txt:129
msgid ""
"Pro: Many of the objections to removing ``\\`` termination were really "
"just objections to removing it within literal strings; several people "
"clarified that they want to keep this literal-string usage, but don't "
"mind losing the general case."
msgstr ""

#: ../../pep-3125.txt:134
msgid ""
"Pro: The use of ``\\`` for an escape character within strings is well "
"known."
msgstr ""

#: ../../pep-3125.txt:137
msgid ""
"Contra: But note that this particular usage is odd, because the escaped "
"character (the newline) is invisible, and the special treatment is to "
"delete the character.  That said, the ``\\`` of ``\\(newline)`` is still "
"an escape which changes the meaning of the following character."
msgstr ""

#: ../../pep-3125.txt:145
msgid "Alternate Proposals"
msgstr ""

#: ../../pep-3125.txt:147
msgid ""
"Several people have suggested alternative ways of marking the line end.  "
"Most of these were rejected for not actually simplifying things."
msgstr ""

#: ../../pep-3125.txt:150
msgid ""
"The one exception was to let any unfinished expression signify a line "
"continuation, possibly in conjunction with increased indentation."
msgstr ""

#: ../../pep-3125.txt:153
msgid ""
"This is attractive because it is a generalization of the rule for "
"parentheses."
msgstr ""

#: ../../pep-3125.txt:156
msgid "The initial objections to this were:"
msgstr ""

#: ../../pep-3125.txt:158
msgid ""
"The amount of whitespace may be contentious; expression continuation "
"should not be confused with opening a new suite."
msgstr ""

#: ../../pep-3125.txt:161
msgid ""
"The \"expression continuation\" markers are not as clearly marked in "
"Python as the grouping punctuation \"(), [], {}\" marks are::"
msgstr ""

#: ../../pep-3125.txt:174
msgid ""
"Guido objected for technical reasons.  [#dedent]_ The most obvious "
"implementation would require allowing INDENT or DEDENT tokens anywhere, "
"or at least in a widely expanded (and ill-defined) set of locations.  "
"While this is of concern only for the internal parsing mechanism (rather "
"than for users), it would be a major new source of complexity."
msgstr ""

#: ../../pep-3125.txt:181
msgid ""
"Andrew Koenig then pointed out [#lexical]_ a better implementation "
"strategy, and said that it had worked quite well in other languages. "
"[#snocone]_ The improved suggestion boiled down to:"
msgstr ""

#: ../../pep-3125.txt:185
msgid ""
"The whitespace that follows an (operator or) open bracket or parenthesis "
"can include newline characters."
msgstr ""

#: ../../pep-3125.txt:188
msgid ""
"It would be implemented at a very low lexical level -- even before the "
"decision is made to turn a newline followed by spaces into an INDENT or "
"DEDENT token."
msgstr ""

#: ../../pep-3125.txt:192
msgid ""
"There is still some concern that it could mask bugs, as in this example "
"[#guidobughide]_::"
msgstr ""

#: ../../pep-3125.txt:200
msgid ""
"Requiring that the continuation be indented more than the initial line "
"would add both safety and complexity."
msgstr ""

#: ../../pep-3125.txt:205
msgid "Open Issues"
msgstr ""

#: ../../pep-3125.txt:207
msgid "Should ``\\``-continuation be removed even inside strings?"
msgstr ""

#: ../../pep-3125.txt:209
msgid ""
"Should the continuation markers be expanded from just ([{}]) to include "
"lines ending with an operator?"
msgstr ""

#: ../../pep-3125.txt:212
msgid ""
"As a safety measure, should the continuation line be required to be more "
"indented than the initial line?"
msgstr ""

#: ../../pep-3125.txt:217
msgid "References"
msgstr ""

#: ../../pep-3125.txt:219
msgid ""
"(email subject) PEP 30XZ: Simplified Parsing, van Rossum "
"https://mail.python.org/pipermail/python-3000/2007-April/007063.html"
msgstr ""

#: ../../pep-3125.txt:222
msgid ""
"(email subject) PEP-3125 -- remove backslash continuation, Koenig "
"https://mail.python.org/pipermail/python-3000/2007-May/007237.html"
msgstr ""

#: ../../pep-3125.txt:226
msgid "The Snocone Programming Language, Koenig http://www.snobol4.com/report.htm"
msgstr ""

#: ../../pep-3125.txt:229
msgid ""
"(email subject) PEP-3125 -- remove backslash continuation, van Rossum "
"https://mail.python.org/pipermail/python-3000/2007-May/007244.html"
msgstr ""

#: ../../pep-3125.txt:235
msgid "Copyright"
msgstr ""

#: ../../pep-3125.txt:237
msgid "This document has been placed in the public domain."
msgstr ""

